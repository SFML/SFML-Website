<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::Listener Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Listener.php">Listener</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="classsf_1_1Listener-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::Listener Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1Listener.php" title="Listener is a global interface for defining the audio listener properties ; the audio listener is the...">Listener</a> is a global interface for defining the audio listener properties ; the audio listener is the point in the scene from where all the sounds are heard.  
 <a href="classsf_1_1Listener.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Listener_8hpp_source.php">Listener.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a0a5a4fa643db5b1779dd995a76c4220b"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#a0a5a4fa643db5b1779dd995a76c4220b">SetGlobalVolume</a> (float Volume)</td></tr>
<tr class="memdesc:a0a5a4fa643db5b1779dd995a76c4220b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the global volume of all the sounds.  <a href="#a0a5a4fa643db5b1779dd995a76c4220b"></a><br/></td></tr>
<tr class="separator:a0a5a4fa643db5b1779dd995a76c4220b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a709055477f1b4683262305e2f32ef3"><td class="memItemLeft" align="right" valign="top">static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#a9a709055477f1b4683262305e2f32ef3">GetGlobalVolume</a> ()</td></tr>
<tr class="memdesc:a9a709055477f1b4683262305e2f32ef3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current value of the global volume of all the sounds.  <a href="#a9a709055477f1b4683262305e2f32ef3"></a><br/></td></tr>
<tr class="separator:a9a709055477f1b4683262305e2f32ef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77cbaa272e92c89694761c408129762a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#a77cbaa272e92c89694761c408129762a">SetPosition</a> (float X, float Y, float Z)</td></tr>
<tr class="memdesc:a77cbaa272e92c89694761c408129762a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the position of the listener (take 3 values).  <a href="#a77cbaa272e92c89694761c408129762a"></a><br/></td></tr>
<tr class="separator:a77cbaa272e92c89694761c408129762a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a922f139434950427905f7841cf280286"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#a922f139434950427905f7841cf280286">SetPosition</a> (const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;Position)</td></tr>
<tr class="memdesc:a922f139434950427905f7841cf280286"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the position of the listener (take a 3D vector).  <a href="#a922f139434950427905f7841cf280286"></a><br/></td></tr>
<tr class="separator:a922f139434950427905f7841cf280286"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49fe75889ad93f71d9239868530b5059"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classsf_1_1Vector3.php">Vector3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#a49fe75889ad93f71d9239868530b5059">GetPosition</a> ()</td></tr>
<tr class="memdesc:a49fe75889ad93f71d9239868530b5059"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current position of the listener.  <a href="#a49fe75889ad93f71d9239868530b5059"></a><br/></td></tr>
<tr class="separator:a49fe75889ad93f71d9239868530b5059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e1f3cbca545c2365201c2f379b71401"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#a0e1f3cbca545c2365201c2f379b71401">SetTarget</a> (float X, float Y, float Z)</td></tr>
<tr class="memdesc:a0e1f3cbca545c2365201c2f379b71401"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the orientation of the listener (the point he must look at) (take 3 values).  <a href="#a0e1f3cbca545c2365201c2f379b71401"></a><br/></td></tr>
<tr class="separator:a0e1f3cbca545c2365201c2f379b71401"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad76dfcf28e23b20a8153058e2be7f4e3"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#ad76dfcf28e23b20a8153058e2be7f4e3">SetTarget</a> (const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;Target)</td></tr>
<tr class="memdesc:ad76dfcf28e23b20a8153058e2be7f4e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the orientation of the listener (the point he must look at) (take a 3D vector).  <a href="#ad76dfcf28e23b20a8153058e2be7f4e3"></a><br/></td></tr>
<tr class="separator:ad76dfcf28e23b20a8153058e2be7f4e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd789b4f468f9b80763c8198cb4fb84c"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classsf_1_1Vector3.php">Vector3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php#afd789b4f468f9b80763c8198cb4fb84c">GetTarget</a> ()</td></tr>
<tr class="memdesc:afd789b4f468f9b80763c8198cb4fb84c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current orientation of the listener (the point he's looking at)  <a href="#afd789b4f468f9b80763c8198cb4fb84c"></a><br/></td></tr>
<tr class="separator:afd789b4f468f9b80763c8198cb4fb84c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1Listener.php" title="Listener is a global interface for defining the audio listener properties ; the audio listener is the...">Listener</a> is a global interface for defining the audio listener properties ; the audio listener is the point in the scene from where all the sounds are heard. </p>

<p>Definition at line <a class="el" href="Listener_8hpp_source.php#l00042">42</a> of file <a class="el" href="Listener_8hpp_source.php">Listener.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a9a709055477f1b4683262305e2f32ef3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static float sf::Listener::GetGlobalVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current value of the global volume of all the sounds. </p>
<dl class="section return"><dt>Returns</dt><dd>Current global volume, in the range [0, 100] </dd></dl>

</div>
</div>
<a class="anchor" id="a49fe75889ad93f71d9239868530b5059"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> sf::Listener::GetPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current position of the listener. </p>
<dl class="section return"><dt>Returns</dt><dd>Position of the listener in the world </dd></dl>

</div>
</div>
<a class="anchor" id="afd789b4f468f9b80763c8198cb4fb84c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> sf::Listener::GetTarget </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current orientation of the listener (the point he's looking at) </p>
<dl class="section return"><dt>Returns</dt><dd>: Position of the point the listener is looking at </dd></dl>

</div>
</div>
<a class="anchor" id="a0a5a4fa643db5b1779dd995a76c4220b"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void sf::Listener::SetGlobalVolume </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Volume</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the global volume of all the sounds. </p>
<p>The default volume is 100</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Volume</td><td>: New global volume, in the range [0, 100] </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a77cbaa272e92c89694761c408129762a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void sf::Listener::SetPosition </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the position of the listener (take 3 values). </p>
<p>The default position is (0, 0, 0)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X,Y,Z</td><td>: Position of the listener in the world </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a922f139434950427905f7841cf280286"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void sf::Listener::SetPosition </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the position of the listener (take a 3D vector). </p>
<p>The default position is (0, 0, 0)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>: Position of the listener in the world </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0e1f3cbca545c2365201c2f379b71401"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void sf::Listener::SetTarget </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the orientation of the listener (the point he must look at) (take 3 values). </p>
<p>The default target is (0, 0, -1)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X,Y,Z</td><td>: Position of the point the listener must look at </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad76dfcf28e23b20a8153058e2be7f4e3"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static void sf::Listener::SetTarget </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;&#160;</td>
          <td class="paramname"><em>Target</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Change the orientation of the listener (the point he must look at) (take a 3D vector). </p>
<p>The default target is (0, 0, -1)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Target</td><td>: Position of the point the listener must look at </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Listener_8hpp_source.php">Listener.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
