<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::View Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1View.php">View</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classsf_1_1View-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::View Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class defines a view (position, size, etc.) ; you can consider it as a 2D camera.  
 <a href="classsf_1_1View.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="View_8hpp_source.php">View.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a884afd75948366ba6c0f760b276496cc"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#a884afd75948366ba6c0f760b276496cc">View</a> (const <a class="el" href="classsf_1_1Rect.php">FloatRect</a> &amp;ViewRect=<a class="el" href="classsf_1_1Rect.php">FloatRect</a>(0, 0, 1000, 1000))</td></tr>
<tr class="memdesc:a884afd75948366ba6c0f760b276496cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the view from a rectangle.  <a href="#a884afd75948366ba6c0f760b276496cc"></a><br/></td></tr>
<tr class="separator:a884afd75948366ba6c0f760b276496cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0323ca80f81ad7feb877d328a0fdbb60"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#a0323ca80f81ad7feb877d328a0fdbb60">View</a> (const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;Center, const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;HalfSize)</td></tr>
<tr class="memdesc:a0323ca80f81ad7feb877d328a0fdbb60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the view from its center and half-size.  <a href="#a0323ca80f81ad7feb877d328a0fdbb60"></a><br/></td></tr>
<tr class="separator:a0323ca80f81ad7feb877d328a0fdbb60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af357e9c647672b94b8b8f584eaff1e86"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#af357e9c647672b94b8b8f584eaff1e86">SetCenter</a> (float X, float Y)</td></tr>
<tr class="memdesc:af357e9c647672b94b8b8f584eaff1e86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the center of the view (take 2 values)  <a href="#af357e9c647672b94b8b8f584eaff1e86"></a><br/></td></tr>
<tr class="separator:af357e9c647672b94b8b8f584eaff1e86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc62a34d1bb3c7a64ab5cc11941967cb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#afc62a34d1bb3c7a64ab5cc11941967cb">SetCenter</a> (const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;Center)</td></tr>
<tr class="memdesc:afc62a34d1bb3c7a64ab5cc11941967cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the center of the view (take a vector)  <a href="#afc62a34d1bb3c7a64ab5cc11941967cb"></a><br/></td></tr>
<tr class="separator:afc62a34d1bb3c7a64ab5cc11941967cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e1a8e0c729daf4be95c1f27ba275a2a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#a5e1a8e0c729daf4be95c1f27ba275a2a">SetHalfSize</a> (float HalfWidth, float HalfHeight)</td></tr>
<tr class="memdesc:a5e1a8e0c729daf4be95c1f27ba275a2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the half-size of the view (take 2 values)  <a href="#a5e1a8e0c729daf4be95c1f27ba275a2a"></a><br/></td></tr>
<tr class="separator:a5e1a8e0c729daf4be95c1f27ba275a2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace6e0d15b8fe1f2f0066d8438c01f1d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#ace6e0d15b8fe1f2f0066d8438c01f1d3">SetHalfSize</a> (const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;HalfSize)</td></tr>
<tr class="memdesc:ace6e0d15b8fe1f2f0066d8438c01f1d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Change the half-size of the view (take a vector)  <a href="#ace6e0d15b8fe1f2f0066d8438c01f1d3"></a><br/></td></tr>
<tr class="separator:ace6e0d15b8fe1f2f0066d8438c01f1d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5c2ac8985a573632f9a1e95d56cc2ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#aa5c2ac8985a573632f9a1e95d56cc2ee">SetFromRect</a> (const <a class="el" href="classsf_1_1Rect.php">FloatRect</a> &amp;ViewRect)</td></tr>
<tr class="memdesc:aa5c2ac8985a573632f9a1e95d56cc2ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rebuild the view from a rectangle.  <a href="#aa5c2ac8985a573632f9a1e95d56cc2ee"></a><br/></td></tr>
<tr class="separator:aa5c2ac8985a573632f9a1e95d56cc2ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af170ba0de1009ae64365392ff8279b88"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#af170ba0de1009ae64365392ff8279b88">GetCenter</a> () const </td></tr>
<tr class="memdesc:af170ba0de1009ae64365392ff8279b88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the center of the view.  <a href="#af170ba0de1009ae64365392ff8279b88"></a><br/></td></tr>
<tr class="separator:af170ba0de1009ae64365392ff8279b88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cdc8e4db0473d35aa25816f81c59b92"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#a7cdc8e4db0473d35aa25816f81c59b92">GetHalfSize</a> () const </td></tr>
<tr class="memdesc:a7cdc8e4db0473d35aa25816f81c59b92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the half-size of the view.  <a href="#a7cdc8e4db0473d35aa25816f81c59b92"></a><br/></td></tr>
<tr class="separator:a7cdc8e4db0473d35aa25816f81c59b92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33cbc96c909d27d16927a250b7a8bc0f"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsf_1_1Rect.php">sf::FloatRect</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#a33cbc96c909d27d16927a250b7a8bc0f">GetRect</a> () const </td></tr>
<tr class="memdesc:a33cbc96c909d27d16927a250b7a8bc0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the bounding rectangle of the view.  <a href="#a33cbc96c909d27d16927a250b7a8bc0f"></a><br/></td></tr>
<tr class="separator:a33cbc96c909d27d16927a250b7a8bc0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f1bfbae90991ab777994cad4f4bfa9c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#a8f1bfbae90991ab777994cad4f4bfa9c">Move</a> (float OffsetX, float OffsetY)</td></tr>
<tr class="memdesc:a8f1bfbae90991ab777994cad4f4bfa9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move the view (take 2 values)  <a href="#a8f1bfbae90991ab777994cad4f4bfa9c"></a><br/></td></tr>
<tr class="separator:a8f1bfbae90991ab777994cad4f4bfa9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae065331d6f2d450b3482c623c7506ced"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#ae065331d6f2d450b3482c623c7506ced">Move</a> (const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;Offset)</td></tr>
<tr class="memdesc:ae065331d6f2d450b3482c623c7506ced"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move the view (take a vector)  <a href="#ae065331d6f2d450b3482c623c7506ced"></a><br/></td></tr>
<tr class="separator:ae065331d6f2d450b3482c623c7506ced"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc9321a19bc371b3f29d8c9f25bcbb1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php#a2bc9321a19bc371b3f29d8c9f25bcbb1">Zoom</a> (float Factor)</td></tr>
<tr class="memdesc:a2bc9321a19bc371b3f29d8c9f25bcbb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resize the view rectangle to simulate a zoom / unzoom effect.  <a href="#a2bc9321a19bc371b3f29d8c9f25bcbb1"></a><br/></td></tr>
<tr class="separator:a2bc9321a19bc371b3f29d8c9f25bcbb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:aa5afc6f82b7b587ed5ada4d227ce32aa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aa5afc6f82b7b587ed5ada4d227ce32aa"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>RenderTarget</b></td></tr>
<tr class="separator:aa5afc6f82b7b587ed5ada4d227ce32aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class defines a view (position, size, etc.) ; you can consider it as a 2D camera. </p>

<p>Definition at line <a class="el" href="View_8hpp_source.php#l00045">45</a> of file <a class="el" href="View_8hpp_source.php">View.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a884afd75948366ba6c0f760b276496cc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sf::View::View </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Rect.php">FloatRect</a> &amp;&#160;</td>
          <td class="paramname"><em>ViewRect</em> = <code><a class="el" href="classsf_1_1Rect.php">FloatRect</a>(0,&#160;0,&#160;1000,&#160;1000)</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct the view from a rectangle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ViewRect</td><td>: Rectangle defining the position and size of the view (1000x1000 by default) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0323ca80f81ad7feb877d328a0fdbb60"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::View::View </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;&#160;</td>
          <td class="paramname"><em>Center</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;&#160;</td>
          <td class="paramname"><em>HalfSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct the view from its center and half-size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Center</td><td>: Center of the view </td></tr>
    <tr><td class="paramname">HalfSize</td><td>: Half-size of the view (from center to corner) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af170ba0de1009ae64365392ff8279b88"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a>&amp; sf::View::GetCenter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the center of the view. </p>
<dl class="section return"><dt>Returns</dt><dd>Center of the view </dd></dl>

</div>
</div>
<a class="anchor" id="a7cdc8e4db0473d35aa25816f81c59b92"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a>&amp; sf::View::GetHalfSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the half-size of the view. </p>
<dl class="section return"><dt>Returns</dt><dd>Half-size of the view </dd></dl>

</div>
</div>
<a class="anchor" id="a33cbc96c909d27d16927a250b7a8bc0f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1Rect.php">sf::FloatRect</a>&amp; sf::View::GetRect </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the bounding rectangle of the view. </p>
<dl class="section return"><dt>Returns</dt><dd>Bounding rectangle of the view </dd></dl>

</div>
</div>
<a class="anchor" id="a8f1bfbae90991ab777994cad4f4bfa9c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::Move </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>OffsetX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>OffsetY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move the view (take 2 values) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OffsetX</td><td>: Offset to move the view, on X axis </td></tr>
    <tr><td class="paramname">OffsetY</td><td>: Offset to move the view, on Y axis </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae065331d6f2d450b3482c623c7506ced"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::Move </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;&#160;</td>
          <td class="paramname"><em>Offset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move the view (take a vector) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Offset</td><td>: Offset to move the view </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af357e9c647672b94b8b8f584eaff1e86"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetCenter </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the center of the view (take 2 values) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X</td><td>: X coordinate of the new center </td></tr>
    <tr><td class="paramname">Y</td><td>: Y coordinate of the new center </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="afc62a34d1bb3c7a64ab5cc11941967cb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetCenter </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;&#160;</td>
          <td class="paramname"><em>Center</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the center of the view (take a vector) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Center</td><td>: New center </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa5c2ac8985a573632f9a1e95d56cc2ee"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetFromRect </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Rect.php">FloatRect</a> &amp;&#160;</td>
          <td class="paramname"><em>ViewRect</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Rebuild the view from a rectangle. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ViewRect</td><td>: Rectangle defining the position and size of the view </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a5e1a8e0c729daf4be95c1f27ba275a2a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetHalfSize </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>HalfWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>HalfHeight</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the half-size of the view (take 2 values) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">HalfWidth</td><td>: New half-width </td></tr>
    <tr><td class="paramname">HalfHeight</td><td>: New half-height </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ace6e0d15b8fe1f2f0066d8438c01f1d3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::SetHalfSize </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector2.php">sf::Vector2f</a> &amp;&#160;</td>
          <td class="paramname"><em>HalfSize</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Change the half-size of the view (take a vector) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">HalfSize</td><td>: New half-size </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a2bc9321a19bc371b3f29d8c9f25bcbb1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::View::Zoom </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Factor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resize the view rectangle to simulate a zoom / unzoom effect. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Factor</td><td>: Zoom factor to apply, relative to the current zoom </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="View_8hpp_source.php">View.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
