<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::Resource&lt; T &gt; Class Template Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Resource.php">Resource</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classsf_1_1Resource-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::Resource&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for every resource that needs to notify dependent classes about its destruction.  
 <a href="classsf_1_1Resource.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Resource_8hpp_source.php">Resource.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aa044d32edfcd9b6aebd50d03658e8130"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Resource.php#aa044d32edfcd9b6aebd50d03658e8130">Resource</a> ()</td></tr>
<tr class="memdesc:aa044d32edfcd9b6aebd50d03658e8130"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#aa044d32edfcd9b6aebd50d03658e8130"></a><br/></td></tr>
<tr class="separator:aa044d32edfcd9b6aebd50d03658e8130"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59a0a5ddb77f7fe059bd32dee5f792d0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Resource.php#a59a0a5ddb77f7fe059bd32dee5f792d0">Resource</a> (const <a class="el" href="classsf_1_1Resource.php">Resource</a>&lt; T &gt; &amp;Copy)</td></tr>
<tr class="memdesc:a59a0a5ddb77f7fe059bd32dee5f792d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a59a0a5ddb77f7fe059bd32dee5f792d0"></a><br/></td></tr>
<tr class="separator:a59a0a5ddb77f7fe059bd32dee5f792d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e83e83339851d7b3246939bde3fc1ac"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Resource.php#a0e83e83339851d7b3246939bde3fc1ac">~Resource</a> ()</td></tr>
<tr class="memdesc:a0e83e83339851d7b3246939bde3fc1ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a0e83e83339851d7b3246939bde3fc1ac"></a><br/></td></tr>
<tr class="separator:a0e83e83339851d7b3246939bde3fc1ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a772badbe4813a5b459f588698ac7ad60"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Resource.php">Resource</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Resource.php#a772badbe4813a5b459f588698ac7ad60">operator=</a> (const <a class="el" href="classsf_1_1Resource.php">Resource</a>&lt; T &gt; &amp;Other)</td></tr>
<tr class="memdesc:a772badbe4813a5b459f588698ac7ad60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator.  <a href="#a772badbe4813a5b459f588698ac7ad60"></a><br/></td></tr>
<tr class="separator:a772badbe4813a5b459f588698ac7ad60"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:ade3b43c17f4363c6c1867d90ce13406c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ade3b43c17f4363c6c1867d90ce13406c"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ResourcePtr&lt; T &gt;</b></td></tr>
<tr class="separator:ade3b43c17f4363c6c1867d90ce13406c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br/>
class sf::Resource&lt; T &gt;</h3>

<p>Base class for every resource that needs to notify dependent classes about its destruction. </p>

<p>Definition at line <a class="el" href="Resource_8hpp_source.php#l00050">50</a> of file <a class="el" href="Resource_8hpp_source.php">Resource.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="aa044d32edfcd9b6aebd50d03658e8130"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Resource.php">sf::Resource</a>&lt; T &gt;::<a class="el" href="classsf_1_1Resource.php">Resource</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="a59a0a5ddb77f7fe059bd32dee5f792d0"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Resource.php">sf::Resource</a>&lt; T &gt;::<a class="el" href="classsf_1_1Resource.php">Resource</a> </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Resource.php">Resource</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>Copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Copy</td><td>: <a class="el" href="classsf_1_1Resource.php" title="Base class for every resource that needs to notify dependent classes about its destruction.">Resource</a> to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0e83e83339851d7b3246939bde3fc1ac"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Resource.php">sf::Resource</a>&lt; T &gt;::~<a class="el" href="classsf_1_1Resource.php">Resource</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a772badbe4813a5b459f588698ac7ad60"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Resource.php">Resource</a>&lt;T&gt;&amp; <a class="el" href="classsf_1_1Resource.php">sf::Resource</a>&lt; T &gt;::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Resource.php">Resource</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>: <a class="el" href="classsf_1_1Resource.php" title="Base class for every resource that needs to notify dependent classes about its destruction.">Resource</a> to copy</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to this </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Resource_8hpp_source.php">Resource.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
