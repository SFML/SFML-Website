<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::Rect&lt; T &gt; Class Template Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Rect.php">Rect</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classsf_1_1Rect-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::Rect&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1Rect.php" title="Rect is an utility class for manipulating rectangles.">Rect</a> is an utility class for manipulating rectangles.  
 <a href="classsf_1_1Rect.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0f87ebaef9722a6222fd2e04ce8efb37"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#a0f87ebaef9722a6222fd2e04ce8efb37">Rect</a> ()</td></tr>
<tr class="memdesc:a0f87ebaef9722a6222fd2e04ce8efb37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a0f87ebaef9722a6222fd2e04ce8efb37"></a><br/></td></tr>
<tr class="separator:a0f87ebaef9722a6222fd2e04ce8efb37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f19f5cf78eb52f122b904fb258acfce"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#a0f19f5cf78eb52f122b904fb258acfce">Rect</a> (T LeftCoord, T TopCoord, T RightCoord, T BottomCoord)</td></tr>
<tr class="memdesc:a0f19f5cf78eb52f122b904fb258acfce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the rectangle from its coordinates.  <a href="#a0f19f5cf78eb52f122b904fb258acfce"></a><br/></td></tr>
<tr class="separator:a0f19f5cf78eb52f122b904fb258acfce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a8c09ef44123228aa44aff8f0b09087"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#a6a8c09ef44123228aa44aff8f0b09087">GetWidth</a> () const </td></tr>
<tr class="memdesc:a6a8c09ef44123228aa44aff8f0b09087"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the width of the rectangle.  <a href="#a6a8c09ef44123228aa44aff8f0b09087"></a><br/></td></tr>
<tr class="separator:a6a8c09ef44123228aa44aff8f0b09087"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3c1ca9c959dae33d2eec290b2e48d75"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#aa3c1ca9c959dae33d2eec290b2e48d75">GetHeight</a> () const </td></tr>
<tr class="memdesc:aa3c1ca9c959dae33d2eec290b2e48d75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the height of the rectangle.  <a href="#aa3c1ca9c959dae33d2eec290b2e48d75"></a><br/></td></tr>
<tr class="separator:aa3c1ca9c959dae33d2eec290b2e48d75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abacc8c95dd784ad3e19d94474bee24cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#abacc8c95dd784ad3e19d94474bee24cd">Offset</a> (T OffsetX, T OffsetY)</td></tr>
<tr class="memdesc:abacc8c95dd784ad3e19d94474bee24cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move the whole rectangle by the given offset.  <a href="#abacc8c95dd784ad3e19d94474bee24cd"></a><br/></td></tr>
<tr class="separator:abacc8c95dd784ad3e19d94474bee24cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab56c71b17e5edfaf4e4c839b8b4dfcb7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#ab56c71b17e5edfaf4e4c839b8b4dfcb7">Contains</a> (T X, T Y) const </td></tr>
<tr class="memdesc:ab56c71b17e5edfaf4e4c839b8b4dfcb7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if a point is inside the rectangle's area.  <a href="#ab56c71b17e5edfaf4e4c839b8b4dfcb7"></a><br/></td></tr>
<tr class="separator:ab56c71b17e5edfaf4e4c839b8b4dfcb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a703256dda71eb3a5e748f5b0265e9272"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#a703256dda71eb3a5e748f5b0265e9272">Intersects</a> (const <a class="el" href="classsf_1_1Rect.php">Rect</a>&lt; T &gt; &amp;Rectangle, <a class="el" href="classsf_1_1Rect.php">Rect</a>&lt; T &gt; *OverlappingRect=NULL) const </td></tr>
<tr class="memdesc:a703256dda71eb3a5e748f5b0265e9272"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check intersection between two rectangles.  <a href="#a703256dda71eb3a5e748f5b0265e9272"></a><br/></td></tr>
<tr class="separator:a703256dda71eb3a5e748f5b0265e9272"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a9619c6b9741163c86eea6a0b84b2f9b3"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#a9619c6b9741163c86eea6a0b84b2f9b3">Left</a></td></tr>
<tr class="memdesc:a9619c6b9741163c86eea6a0b84b2f9b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Left coordinate of the rectangle.  <a href="#a9619c6b9741163c86eea6a0b84b2f9b3"></a><br/></td></tr>
<tr class="separator:a9619c6b9741163c86eea6a0b84b2f9b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4addcc0bf656fb5f2f80d406cf90c047"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#a4addcc0bf656fb5f2f80d406cf90c047">Top</a></td></tr>
<tr class="memdesc:a4addcc0bf656fb5f2f80d406cf90c047"><td class="mdescLeft">&#160;</td><td class="mdescRight">Top coordinate of the rectangle.  <a href="#a4addcc0bf656fb5f2f80d406cf90c047"></a><br/></td></tr>
<tr class="separator:a4addcc0bf656fb5f2f80d406cf90c047"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ce87895496327187a20a46dc2479383"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#a6ce87895496327187a20a46dc2479383">Right</a></td></tr>
<tr class="memdesc:a6ce87895496327187a20a46dc2479383"><td class="mdescLeft">&#160;</td><td class="mdescRight">Right coordinate of the rectangle.  <a href="#a6ce87895496327187a20a46dc2479383"></a><br/></td></tr>
<tr class="separator:a6ce87895496327187a20a46dc2479383"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab234b311011892cfd8a3e831dec341a8"><td class="memItemLeft" align="right" valign="top">T&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php#ab234b311011892cfd8a3e831dec341a8">Bottom</a></td></tr>
<tr class="memdesc:ab234b311011892cfd8a3e831dec341a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bottom coordinate of the rectangle.  <a href="#ab234b311011892cfd8a3e831dec341a8"></a><br/></td></tr>
<tr class="separator:ab234b311011892cfd8a3e831dec341a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br/>
class sf::Rect&lt; T &gt;</h3>

<p><a class="el" href="classsf_1_1Rect.php" title="Rect is an utility class for manipulating rectangles.">Rect</a> is an utility class for manipulating rectangles. </p>
<p>Template parameter defines the type of coordinates (integer, float, ...) </p>

<p>Definition at line <a class="el" href="Rect_8hpp_source.php#l00041">41</a> of file <a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a0f87ebaef9722a6222fd2e04ce8efb37"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::<a class="el" href="classsf_1_1Rect.php">Rect</a> </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="a0f19f5cf78eb52f122b904fb258acfce"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::<a class="el" href="classsf_1_1Rect.php">Rect</a> </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>LeftCoord</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>TopCoord</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>RightCoord</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>BottomCoord</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct the rectangle from its coordinates. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">LeftCoord</td><td>: Left coordinate of the rectangle </td></tr>
    <tr><td class="paramname">TopCoord</td><td>: Top coordinate of the rectangle </td></tr>
    <tr><td class="paramname">RightCoord</td><td>: Right coordinate of the rectangle </td></tr>
    <tr><td class="paramname">BottomCoord</td><td>: Bottom coordinate of the rectangle </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="ab56c71b17e5edfaf4e4c839b8b4dfcb7"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::Contains </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>Y</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check if a point is inside the rectangle's area. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X</td><td>: X coordinate of the point to test </td></tr>
    <tr><td class="paramname">Y</td><td>: Y coordinate of the point to test</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if the point is inside </dd></dl>

</div>
</div>
<a class="anchor" id="aa3c1ca9c959dae33d2eec290b2e48d75"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::GetHeight </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the height of the rectangle. </p>
<dl class="section return"><dt>Returns</dt><dd>Height of rectangle </dd></dl>

</div>
</div>
<a class="anchor" id="a6a8c09ef44123228aa44aff8f0b09087"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::GetWidth </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the width of the rectangle. </p>
<dl class="section return"><dt>Returns</dt><dd>Width of rectangle </dd></dl>

</div>
</div>
<a class="anchor" id="a703256dda71eb3a5e748f5b0265e9272"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::Intersects </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Rect.php">Rect</a>&lt; T &gt; &amp;&#160;</td>
          <td class="paramname"><em>Rectangle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classsf_1_1Rect.php">Rect</a>&lt; T &gt; *&#160;</td>
          <td class="paramname"><em>OverlappingRect</em> = <code>NULL</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Check intersection between two rectangles. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Rectangle</td><td>: Rectangle to test </td></tr>
    <tr><td class="paramname">OverlappingRect</td><td>: Rectangle to be filled with overlapping rect (NULL by default)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if rectangles overlap </dd></dl>

</div>
</div>
<a class="anchor" id="abacc8c95dd784ad3e19d94474bee24cd"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::Offset </td>
          <td>(</td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>OffsetX</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">T&#160;</td>
          <td class="paramname"><em>OffsetY</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Move the whole rectangle by the given offset. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">OffsetX</td><td>: Horizontal offset </td></tr>
    <tr><td class="paramname">OffsetY</td><td>: Vertical offset </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ab234b311011892cfd8a3e831dec341a8"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::Bottom</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Bottom coordinate of the rectangle. </p>

<p>Definition at line <a class="el" href="Rect_8hpp_source.php#l00115">115</a> of file <a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a9619c6b9741163c86eea6a0b84b2f9b3"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::Left</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Left coordinate of the rectangle. </p>

<p>Definition at line <a class="el" href="Rect_8hpp_source.php#l00112">112</a> of file <a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a6ce87895496327187a20a46dc2479383"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::Right</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Right coordinate of the rectangle. </p>

<p>Definition at line <a class="el" href="Rect_8hpp_source.php#l00114">114</a> of file <a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4addcc0bf656fb5f2f80d406cf90c047"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">T <a class="el" href="classsf_1_1Rect.php">sf::Rect</a>&lt; T &gt;::Top</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Top coordinate of the rectangle. </p>

<p>Definition at line <a class="el" href="Rect_8hpp_source.php#l00113">113</a> of file <a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Rect_8hpp_source.php">Rect.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
