<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::Packet Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Packet.php">Packet</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classsf_1_1Packet-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::Packet Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1Packet.php" title="Packet wraps data to send / to receive through the network.">Packet</a> wraps data to send / to receive through the network.  
 <a href="classsf_1_1Packet.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Packet_8hpp_source.php">Packet.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a786e5d4ced83992ceefa1799963ea858"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#a786e5d4ced83992ceefa1799963ea858">Packet</a> ()</td></tr>
<tr class="memdesc:a786e5d4ced83992ceefa1799963ea858"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a786e5d4ced83992ceefa1799963ea858"></a><br/></td></tr>
<tr class="separator:a786e5d4ced83992ceefa1799963ea858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc0490ca3c7c3d1e321bd742e5213913"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#adc0490ca3c7c3d1e321bd742e5213913">~Packet</a> ()</td></tr>
<tr class="memdesc:adc0490ca3c7c3d1e321bd742e5213913"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#adc0490ca3c7c3d1e321bd742e5213913"></a><br/></td></tr>
<tr class="separator:adc0490ca3c7c3d1e321bd742e5213913"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaa020852bd7be75625b9f64b3a77c64"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#aaaa020852bd7be75625b9f64b3a77c64">Append</a> (const void *Data, std::size_t SizeInBytes)</td></tr>
<tr class="memdesc:aaaa020852bd7be75625b9f64b3a77c64"><td class="mdescLeft">&#160;</td><td class="mdescRight">Append data to the end of the packet.  <a href="#aaaa020852bd7be75625b9f64b3a77c64"></a><br/></td></tr>
<tr class="separator:aaaa020852bd7be75625b9f64b3a77c64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a7a30fb7a39e59df0cbd773756f60da"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#a3a7a30fb7a39e59df0cbd773756f60da">Clear</a> ()</td></tr>
<tr class="memdesc:a3a7a30fb7a39e59df0cbd773756f60da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clear the packet data.  <a href="#a3a7a30fb7a39e59df0cbd773756f60da"></a><br/></td></tr>
<tr class="separator:a3a7a30fb7a39e59df0cbd773756f60da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcb569b9f025d8ce5a7c4d54ad7f4abd"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#afcb569b9f025d8ce5a7c4d54ad7f4abd">GetData</a> () const </td></tr>
<tr class="memdesc:afcb569b9f025d8ce5a7c4d54ad7f4abd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a pointer to the data contained in the packet Warning : the returned pointer may be invalid after you append data to the packet.  <a href="#afcb569b9f025d8ce5a7c4d54ad7f4abd"></a><br/></td></tr>
<tr class="separator:afcb569b9f025d8ce5a7c4d54ad7f4abd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e6fcdc0ff42ad45b33cea22be253b0d"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#a4e6fcdc0ff42ad45b33cea22be253b0d">GetDataSize</a> () const </td></tr>
<tr class="memdesc:a4e6fcdc0ff42ad45b33cea22be253b0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the size of the data contained in the packet.  <a href="#a4e6fcdc0ff42ad45b33cea22be253b0d"></a><br/></td></tr>
<tr class="separator:a4e6fcdc0ff42ad45b33cea22be253b0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d587905fb63e62419f1cc338eceed36"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#a8d587905fb63e62419f1cc338eceed36">EndOfPacket</a> () const </td></tr>
<tr class="memdesc:a8d587905fb63e62419f1cc338eceed36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell if the reading position has reached the end of the packet.  <a href="#a8d587905fb63e62419f1cc338eceed36"></a><br/></td></tr>
<tr class="separator:a8d587905fb63e62419f1cc338eceed36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a087ae98bb7e93f8c82b29b88aee2f8d6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#a087ae98bb7e93f8c82b29b88aee2f8d6">operator bool</a> () const </td></tr>
<tr class="memdesc:a087ae98bb7e93f8c82b29b88aee2f8d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the validity of packet.  <a href="#a087ae98bb7e93f8c82b29b88aee2f8d6"></a><br/></td></tr>
<tr class="separator:a087ae98bb7e93f8c82b29b88aee2f8d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15bd4cb464ea568bb7395966e669656e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#a15bd4cb464ea568bb7395966e669656e">operator&gt;&gt;</a> (bool &amp;Data)</td></tr>
<tr class="memdesc:a15bd4cb464ea568bb7395966e669656e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operator &gt;&gt; overloads to extract data from the packet.  <a href="#a15bd4cb464ea568bb7395966e669656e"></a><br/></td></tr>
<tr class="separator:a15bd4cb464ea568bb7395966e669656e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a484fb71d187a220aeb0f60d0e02248b1"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a484fb71d187a220aeb0f60d0e02248b1"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Int8 &amp;Data)</td></tr>
<tr class="separator:a484fb71d187a220aeb0f60d0e02248b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae72b3c0185674c421a64d4d601c379de"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae72b3c0185674c421a64d4d601c379de"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Uint8 &amp;Data)</td></tr>
<tr class="separator:ae72b3c0185674c421a64d4d601c379de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0891c958736d7f299f1c5b4b6ef0ed85"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0891c958736d7f299f1c5b4b6ef0ed85"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Int16 &amp;Data)</td></tr>
<tr class="separator:a0891c958736d7f299f1c5b4b6ef0ed85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6afa971b1d6b0819f366c31892b7e734"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a6afa971b1d6b0819f366c31892b7e734"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Uint16 &amp;Data)</td></tr>
<tr class="separator:a6afa971b1d6b0819f366c31892b7e734"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8a7c4cb5cfc0ec724c7ca6d7f779c3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7f8a7c4cb5cfc0ec724c7ca6d7f779c3"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Int32 &amp;Data)</td></tr>
<tr class="separator:a7f8a7c4cb5cfc0ec724c7ca6d7f779c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc432f86a6ccf164a0980a7b386f0873"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="abc432f86a6ccf164a0980a7b386f0873"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (Uint32 &amp;Data)</td></tr>
<tr class="separator:abc432f86a6ccf164a0980a7b386f0873"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a319acda455620fd574a7807c172965fa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a319acda455620fd574a7807c172965fa"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (float &amp;Data)</td></tr>
<tr class="separator:a319acda455620fd574a7807c172965fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a431746d3f46d3632c76e10ff45605e61"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a431746d3f46d3632c76e10ff45605e61"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (double &amp;Data)</td></tr>
<tr class="separator:a431746d3f46d3632c76e10ff45605e61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9480c0d1afd73eadd18bcbd3078f17f2"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a9480c0d1afd73eadd18bcbd3078f17f2"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (char *Data)</td></tr>
<tr class="separator:a9480c0d1afd73eadd18bcbd3078f17f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae63aea69004385c65d979b825d93e425"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ae63aea69004385c65d979b825d93e425"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::string &amp;Data)</td></tr>
<tr class="separator:ae63aea69004385c65d979b825d93e425"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26095a4ea18e94f68ee4d350d113ed8c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a26095a4ea18e94f68ee4d350d113ed8c"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (wchar_t *Data)</td></tr>
<tr class="separator:a26095a4ea18e94f68ee4d350d113ed8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac47b76e338316c166e32595bb9d08240"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac47b76e338316c166e32595bb9d08240"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;&gt;</b> (std::wstring &amp;Data)</td></tr>
<tr class="separator:ac47b76e338316c166e32595bb9d08240"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acddb7edad1a56e720b4d170124fada02"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php#acddb7edad1a56e720b4d170124fada02">operator&lt;&lt;</a> (bool Data)</td></tr>
<tr class="memdesc:acddb7edad1a56e720b4d170124fada02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Operator &lt;&lt; overloads to put data into the packet.  <a href="#acddb7edad1a56e720b4d170124fada02"></a><br/></td></tr>
<tr class="separator:acddb7edad1a56e720b4d170124fada02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fc96a50366d81c3dfee1b4c6e6bf3fa"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2fc96a50366d81c3dfee1b4c6e6bf3fa"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Int8 Data)</td></tr>
<tr class="separator:a2fc96a50366d81c3dfee1b4c6e6bf3fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab3d35975734be35f95c9e40f4d21e36"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aab3d35975734be35f95c9e40f4d21e36"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Uint8 Data)</td></tr>
<tr class="separator:aab3d35975734be35f95c9e40f4d21e36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a213bf92121281f21c6b404574bc6a021"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a213bf92121281f21c6b404574bc6a021"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Int16 Data)</td></tr>
<tr class="separator:a213bf92121281f21c6b404574bc6a021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7df8893e7a3777726760fd732620252a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7df8893e7a3777726760fd732620252a"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Uint16 Data)</td></tr>
<tr class="separator:a7df8893e7a3777726760fd732620252a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec74698e69de5ac06782d5799d1c1644"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aec74698e69de5ac06782d5799d1c1644"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Int32 Data)</td></tr>
<tr class="separator:aec74698e69de5ac06782d5799d1c1644"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2232620548f0482178d290593524b0bc"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a2232620548f0482178d290593524b0bc"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (Uint32 Data)</td></tr>
<tr class="separator:a2232620548f0482178d290593524b0bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adeef4cf269fb44b9e6979edaf8fabc68"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="adeef4cf269fb44b9e6979edaf8fabc68"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (float Data)</td></tr>
<tr class="separator:adeef4cf269fb44b9e6979edaf8fabc68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad631efa97145e7d03c40035e8325cdf3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ad631efa97145e7d03c40035e8325cdf3"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (double Data)</td></tr>
<tr class="separator:ad631efa97145e7d03c40035e8325cdf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbb132f3eb540021c661df377671d31f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="afbb132f3eb540021c661df377671d31f"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const char *Data)</td></tr>
<tr class="separator:afbb132f3eb540021c661df377671d31f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace87f7cabd4b104b4cb45e5f277e2b5a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ace87f7cabd4b104b4cb45e5f277e2b5a"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const std::string &amp;Data)</td></tr>
<tr class="separator:ace87f7cabd4b104b4cb45e5f277e2b5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0165e60a9429ded898bdaf45627e7341"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a0165e60a9429ded898bdaf45627e7341"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const wchar_t *Data)</td></tr>
<tr class="separator:a0165e60a9429ded898bdaf45627e7341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac9474ec99de6ee5f098ab5f899461d3"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aac9474ec99de6ee5f098ab5f899461d3"></a>
<a class="el" href="classsf_1_1Packet.php">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (const std::wstring &amp;Data)</td></tr>
<tr class="separator:aac9474ec99de6ee5f098ab5f899461d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a96e899eb92ab68761ba10f3bcd3101bb"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a96e899eb92ab68761ba10f3bcd3101bb"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>SocketTCP</b></td></tr>
<tr class="separator:a96e899eb92ab68761ba10f3bcd3101bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89a79a0a0dd881f68463c69c9e980412"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a89a79a0a0dd881f68463c69c9e980412"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>SocketUDP</b></td></tr>
<tr class="separator:a89a79a0a0dd881f68463c69c9e980412"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1Packet.php" title="Packet wraps data to send / to receive through the network.">Packet</a> wraps data to send / to receive through the network. </p>

<p>Definition at line <a class="el" href="Packet_8hpp_source.php#l00041">41</a> of file <a class="el" href="Packet_8hpp_source.php">Packet.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a786e5d4ced83992ceefa1799963ea858"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Packet::Packet </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="adc0490ca3c7c3d1e321bd742e5213913"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual sf::Packet::~Packet </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="aaaa020852bd7be75625b9f64b3a77c64"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Packet::Append </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>Data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>SizeInBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Append data to the end of the packet. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Data</td><td>: Pointer to the bytes to append </td></tr>
    <tr><td class="paramname">SizeInBytes</td><td>: Number of bytes to append </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a3a7a30fb7a39e59df0cbd773756f60da"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Packet::Clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clear the packet data. </p>

</div>
</div>
<a class="anchor" id="a8d587905fb63e62419f1cc338eceed36"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Packet::EndOfPacket </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tell if the reading position has reached the end of the packet. </p>
<dl class="section return"><dt>Returns</dt><dd>True if all data have been read into the packet </dd></dl>

</div>
</div>
<a class="anchor" id="afcb569b9f025d8ce5a7c4d54ad7f4abd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const char* sf::Packet::GetData </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get a pointer to the data contained in the packet Warning : the returned pointer may be invalid after you append data to the packet. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the data </dd></dl>

</div>
</div>
<a class="anchor" id="a4e6fcdc0ff42ad45b33cea22be253b0d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t sf::Packet::GetDataSize </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the size of the data contained in the packet. </p>
<dl class="section return"><dt>Returns</dt><dd>Data size, in bytes </dd></dl>

</div>
</div>
<a class="anchor" id="a087ae98bb7e93f8c82b29b88aee2f8d6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Packet::operator bool </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the validity of packet. </p>
<dl class="section return"><dt>Returns</dt><dd>True if last data extraction from packet was successful </dd></dl>

</div>
</div>
<a class="anchor" id="acddb7edad1a56e720b4d170124fada02"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Packet.php">Packet</a>&amp; sf::Packet::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Operator &lt;&lt; overloads to put data into the packet. </p>

</div>
</div>
<a class="anchor" id="a15bd4cb464ea568bb7395966e669656e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Packet.php">Packet</a>&amp; sf::Packet::operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">bool &amp;&#160;</td>
          <td class="paramname"><em>Data</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Operator &gt;&gt; overloads to extract data from the packet. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Packet_8hpp_source.php">Packet.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
