<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::SoundBuffer Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classsf_1_1SoundBuffer-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::SoundBuffer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1SoundBuffer.php" title="SoundBuffer is the low-level for loading and manipulating sound buffers.">SoundBuffer</a> is the low-level for loading and manipulating sound buffers.  
 <a href="classsf_1_1SoundBuffer.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundBuffer_8hpp_source.php">SoundBuffer.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::SoundBuffer:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classsf_1_1SoundBuffer.png" usemap="#sf::SoundBuffer_map" alt=""/>
  <map id="sf::SoundBuffer_map" name="sf::SoundBuffer_map">
<area href="classsf_1_1AudioResource.php" title="Abstract base class for every class that owns a device-dependant resource â€“ allow them to initialize ..." alt="sf::AudioResource" shape="rect" coords="0,0,177,24"/>
<area href="classsf_1_1Resource.php" alt="sf::Resource&lt; SoundBuffer &gt;" shape="rect" coords="187,0,364,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0cabfbfe19b831bf7d5c9592d92ef233"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#a0cabfbfe19b831bf7d5c9592d92ef233">SoundBuffer</a> ()</td></tr>
<tr class="memdesc:a0cabfbfe19b831bf7d5c9592d92ef233"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a0cabfbfe19b831bf7d5c9592d92ef233"></a><br/></td></tr>
<tr class="separator:a0cabfbfe19b831bf7d5c9592d92ef233"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adeb60002d4c4a4d8511fb5aa7225224b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#adeb60002d4c4a4d8511fb5aa7225224b">SoundBuffer</a> (const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;Copy)</td></tr>
<tr class="memdesc:adeb60002d4c4a4d8511fb5aa7225224b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#adeb60002d4c4a4d8511fb5aa7225224b"></a><br/></td></tr>
<tr class="separator:adeb60002d4c4a4d8511fb5aa7225224b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea240161724ffba74a0d6a9e277d3cd5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#aea240161724ffba74a0d6a9e277d3cd5">~SoundBuffer</a> ()</td></tr>
<tr class="memdesc:aea240161724ffba74a0d6a9e277d3cd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#aea240161724ffba74a0d6a9e277d3cd5"></a><br/></td></tr>
<tr class="separator:aea240161724ffba74a0d6a9e277d3cd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a232bb58d0910729a542cc2af473c8aa4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#a232bb58d0910729a542cc2af473c8aa4">LoadFromFile</a> (const std::string &amp;Filename)</td></tr>
<tr class="memdesc:a232bb58d0910729a542cc2af473c8aa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the sound buffer from a file.  <a href="#a232bb58d0910729a542cc2af473c8aa4"></a><br/></td></tr>
<tr class="separator:a232bb58d0910729a542cc2af473c8aa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a694c43f4ee7b2c6277c1ead496d266f3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#a694c43f4ee7b2c6277c1ead496d266f3">LoadFromMemory</a> (const char *Data, std::size_t SizeInBytes)</td></tr>
<tr class="memdesc:a694c43f4ee7b2c6277c1ead496d266f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the sound buffer from a file in memory.  <a href="#a694c43f4ee7b2c6277c1ead496d266f3"></a><br/></td></tr>
<tr class="separator:a694c43f4ee7b2c6277c1ead496d266f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5efd0d42e07a4c7841b6d4f30849d7dc"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#a5efd0d42e07a4c7841b6d4f30849d7dc">LoadFromSamples</a> (const Int16 *Samples, std::size_t SamplesCount, unsigned int ChannelsCount, unsigned int SampleRate)</td></tr>
<tr class="memdesc:a5efd0d42e07a4c7841b6d4f30849d7dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Load the sound buffer from an array of samples - assumed format for samples is 16 bits signed integer.  <a href="#a5efd0d42e07a4c7841b6d4f30849d7dc"></a><br/></td></tr>
<tr class="separator:a5efd0d42e07a4c7841b6d4f30849d7dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4515a797138382cf98a4d9cd5047239"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#af4515a797138382cf98a4d9cd5047239">SaveToFile</a> (const std::string &amp;Filename) const </td></tr>
<tr class="memdesc:af4515a797138382cf98a4d9cd5047239"><td class="mdescLeft">&#160;</td><td class="mdescRight">Save the sound buffer to a file.  <a href="#af4515a797138382cf98a4d9cd5047239"></a><br/></td></tr>
<tr class="separator:af4515a797138382cf98a4d9cd5047239"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab31f8ddb0c696171867ae575a8d59eea"><td class="memItemLeft" align="right" valign="top">const Int16 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#ab31f8ddb0c696171867ae575a8d59eea">GetSamples</a> () const </td></tr>
<tr class="memdesc:ab31f8ddb0c696171867ae575a8d59eea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the sound samples.  <a href="#ab31f8ddb0c696171867ae575a8d59eea"></a><br/></td></tr>
<tr class="separator:ab31f8ddb0c696171867ae575a8d59eea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5da93e162669ec8c03b902f622261789"><td class="memItemLeft" align="right" valign="top">std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#a5da93e162669ec8c03b902f622261789">GetSamplesCount</a> () const </td></tr>
<tr class="memdesc:a5da93e162669ec8c03b902f622261789"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the samples count.  <a href="#a5da93e162669ec8c03b902f622261789"></a><br/></td></tr>
<tr class="separator:a5da93e162669ec8c03b902f622261789"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4b1b885e3720689c6cbc22ff6cbe571"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#ac4b1b885e3720689c6cbc22ff6cbe571">GetSampleRate</a> () const </td></tr>
<tr class="memdesc:ac4b1b885e3720689c6cbc22ff6cbe571"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sample rate.  <a href="#ac4b1b885e3720689c6cbc22ff6cbe571"></a><br/></td></tr>
<tr class="separator:ac4b1b885e3720689c6cbc22ff6cbe571"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfea4667cb8a5e72b1061fa2647af30f"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#acfea4667cb8a5e72b1061fa2647af30f">GetChannelsCount</a> () const </td></tr>
<tr class="memdesc:acfea4667cb8a5e72b1061fa2647af30f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of channels (1 = mono, 2 = stereo, ...)  <a href="#acfea4667cb8a5e72b1061fa2647af30f"></a><br/></td></tr>
<tr class="separator:acfea4667cb8a5e72b1061fa2647af30f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a525731db309fb7d5b9781e65bc4e0984"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#a525731db309fb7d5b9781e65bc4e0984">GetDuration</a> () const </td></tr>
<tr class="memdesc:a525731db309fb7d5b9781e65bc4e0984"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sound duration.  <a href="#a525731db309fb7d5b9781e65bc4e0984"></a><br/></td></tr>
<tr class="separator:a525731db309fb7d5b9781e65bc4e0984"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71326b777a73a40aecc52403cd2932da"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php#a71326b777a73a40aecc52403cd2932da">operator=</a> (const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;Other)</td></tr>
<tr class="memdesc:a71326b777a73a40aecc52403cd2932da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator.  <a href="#a71326b777a73a40aecc52403cd2932da"></a><br/></td></tr>
<tr class="separator:a71326b777a73a40aecc52403cd2932da"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a50914f77c7cf4fb97616c898c5291f4b"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a50914f77c7cf4fb97616c898c5291f4b"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Sound</b></td></tr>
<tr class="separator:a50914f77c7cf4fb97616c898c5291f4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1SoundBuffer.php" title="SoundBuffer is the low-level for loading and manipulating sound buffers.">SoundBuffer</a> is the low-level for loading and manipulating sound buffers. </p>

<p>Definition at line <a class="el" href="SoundBuffer_8hpp_source.php#l00046">46</a> of file <a class="el" href="SoundBuffer_8hpp_source.php">SoundBuffer.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a0cabfbfe19b831bf7d5c9592d92ef233"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::SoundBuffer::SoundBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="adeb60002d4c4a4d8511fb5aa7225224b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::SoundBuffer::SoundBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>Copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Copy</td><td>: Instance to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aea240161724ffba74a0d6a9e277d3cd5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::SoundBuffer::~SoundBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="acfea4667cb8a5e72b1061fa2647af30f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundBuffer::GetChannelsCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the number of channels (1 = mono, 2 = stereo, ...) </p>
<dl class="section return"><dt>Returns</dt><dd>Number of channels </dd></dl>

</div>
</div>
<a class="anchor" id="a525731db309fb7d5b9781e65bc4e0984"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::SoundBuffer::GetDuration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the sound duration. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> duration, in seconds </dd></dl>

</div>
</div>
<a class="anchor" id="ac4b1b885e3720689c6cbc22ff6cbe571"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundBuffer::GetSampleRate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the sample rate. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> frequency (number of samples per second) </dd></dl>

</div>
</div>
<a class="anchor" id="ab31f8ddb0c696171867ae575a8d59eea"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const Int16* sf::SoundBuffer::GetSamples </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the sound samples. </p>
<dl class="section return"><dt>Returns</dt><dd>Pointer to the array of sound samples, in 16 bits signed integer format </dd></dl>

</div>
</div>
<a class="anchor" id="a5da93e162669ec8c03b902f622261789"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::size_t sf::SoundBuffer::GetSamplesCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the samples count. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of samples </dd></dl>

</div>
</div>
<a class="anchor" id="a232bb58d0910729a542cc2af473c8aa4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::SoundBuffer::LoadFromFile </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>Filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the sound buffer from a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Filename</td><td>: Path of the sound file to load</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading has been successful </dd></dl>

</div>
</div>
<a class="anchor" id="a694c43f4ee7b2c6277c1ead496d266f3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::SoundBuffer::LoadFromMemory </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>SizeInBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the sound buffer from a file in memory. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Data</td><td>: Pointer to the file data in memory </td></tr>
    <tr><td class="paramname">SizeInBytes</td><td>: Size of the data to load, in bytes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading has been successful </dd></dl>

</div>
</div>
<a class="anchor" id="a5efd0d42e07a4c7841b6d4f30849d7dc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::SoundBuffer::LoadFromSamples </td>
          <td>(</td>
          <td class="paramtype">const Int16 *&#160;</td>
          <td class="paramname"><em>Samples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>SamplesCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ChannelsCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>SampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Load the sound buffer from an array of samples - assumed format for samples is 16 bits signed integer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Samples</td><td>: Pointer to the samples in memory </td></tr>
    <tr><td class="paramname">SamplesCount</td><td>: Number of samples pointed by Samples </td></tr>
    <tr><td class="paramname">ChannelsCount</td><td>: Number of channels (1 = mono, 2 = stereo, ...) </td></tr>
    <tr><td class="paramname">SampleRate</td><td>: Frequency (number of samples to play per second)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading has been successful </dd></dl>

</div>
</div>
<a class="anchor" id="a71326b777a73a40aecc52403cd2932da"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a>&amp; sf::SoundBuffer::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>: Instance to assign</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to the sound buffer </dd></dl>

</div>
</div>
<a class="anchor" id="af4515a797138382cf98a4d9cd5047239"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::SoundBuffer::SaveToFile </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>Filename</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Save the sound buffer to a file. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Filename</td><td>: Path of the sound file to write</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if saving has been successful </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundBuffer_8hpp_source.php">SoundBuffer.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
