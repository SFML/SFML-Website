<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::Sound Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Sound.php">Sound</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classsf_1_1Sound-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::Sound Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> defines the properties of a sound such as position, volume, pitch, etc.  
 <a href="classsf_1_1Sound.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Sound_8hpp_source.php">Sound.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::Sound:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classsf_1_1Sound.png" usemap="#sf::Sound_map" alt=""/>
  <map id="sf::Sound_map" name="sf::Sound_map">
<area href="classsf_1_1AudioResource.php" title="Abstract base class for every class that owns a device-dependant resource â€“ allow them to initialize ..." alt="sf::AudioResource" shape="rect" coords="0,0,115,24"/>
<area href="classsf_1_1SoundStream.php" title="SoundStream is a streamed sound, ie samples are acquired while the sound is playing." alt="sf::SoundStream" shape="rect" coords="0,112,115,136"/>
<area href="classsf_1_1Music.php" title="Music defines a big sound played using streaming, so usually what we call a music :)..." alt="sf::Music" shape="rect" coords="0,168,115,192"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a28ad2186cde78fed2c79c867b9622195"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">Status</a> { <br/>
&#160;&#160;<a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195a39fd53aa83db9189ca2fff82e0553cf9">Stopped</a>, 
<br/>
&#160;&#160;<a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195ac9fedbd48103548431e7851d16be5f4f">Paused</a>, 
<br/>
&#160;&#160;<a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195a16657b221888cf11e2a076f5b2783288">Playing</a>
<br/>
 }</td></tr>
<tr class="memdesc:a28ad2186cde78fed2c79c867b9622195"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enumeration of the sound states.  <a href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">More...</a><br/></td></tr>
<tr class="separator:a28ad2186cde78fed2c79c867b9622195"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a36ab74beaaa953d9879c933ddd246282"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a36ab74beaaa953d9879c933ddd246282">Sound</a> ()</td></tr>
<tr class="memdesc:a36ab74beaaa953d9879c933ddd246282"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a36ab74beaaa953d9879c933ddd246282"></a><br/></td></tr>
<tr class="separator:a36ab74beaaa953d9879c933ddd246282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45aff03dc5bf87647eba6bed7c1ced29"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a45aff03dc5bf87647eba6bed7c1ced29">Sound</a> (const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;Buffer, bool Loop=false, float Pitch=1.f, float Volume=100.f, const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;Position=<a class="el" href="classsf_1_1Vector3.php">Vector3f</a>(0, 0, 0))</td></tr>
<tr class="memdesc:a45aff03dc5bf87647eba6bed7c1ced29"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the sound from its parameters.  <a href="#a45aff03dc5bf87647eba6bed7c1ced29"></a><br/></td></tr>
<tr class="separator:a45aff03dc5bf87647eba6bed7c1ced29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa930dcf53775f501ce43d44bf54c0ce4"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#aa930dcf53775f501ce43d44bf54c0ce4">Sound</a> (const <a class="el" href="classsf_1_1Sound.php">Sound</a> &amp;Copy)</td></tr>
<tr class="memdesc:aa930dcf53775f501ce43d44bf54c0ce4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#aa930dcf53775f501ce43d44bf54c0ce4"></a><br/></td></tr>
<tr class="separator:aa930dcf53775f501ce43d44bf54c0ce4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0792c35310eba2dffd8489c80fad076"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ad0792c35310eba2dffd8489c80fad076">~Sound</a> ()</td></tr>
<tr class="memdesc:ad0792c35310eba2dffd8489c80fad076"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#ad0792c35310eba2dffd8489c80fad076"></a><br/></td></tr>
<tr class="separator:ad0792c35310eba2dffd8489c80fad076"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdafa7970587f04d3833b4095c2de1db"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#afdafa7970587f04d3833b4095c2de1db">Play</a> ()</td></tr>
<tr class="memdesc:afdafa7970587f04d3833b4095c2de1db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Play the sound.  <a href="#afdafa7970587f04d3833b4095c2de1db"></a><br/></td></tr>
<tr class="separator:afdafa7970587f04d3833b4095c2de1db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a712910ac1340f32e3ec3a04295ebd3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a6a712910ac1340f32e3ec3a04295ebd3">Pause</a> ()</td></tr>
<tr class="memdesc:a6a712910ac1340f32e3ec3a04295ebd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pause the sound.  <a href="#a6a712910ac1340f32e3ec3a04295ebd3"></a><br/></td></tr>
<tr class="separator:a6a712910ac1340f32e3ec3a04295ebd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1f5f103f737c52ceb0b1a067b4d0630"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ab1f5f103f737c52ceb0b1a067b4d0630">Stop</a> ()</td></tr>
<tr class="memdesc:ab1f5f103f737c52ceb0b1a067b4d0630"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop the sound.  <a href="#ab1f5f103f737c52ceb0b1a067b4d0630"></a><br/></td></tr>
<tr class="separator:ab1f5f103f737c52ceb0b1a067b4d0630"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dbc27c54f0ee633c831a0b6e24ecc55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a9dbc27c54f0ee633c831a0b6e24ecc55">SetBuffer</a> (const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;Buffer)</td></tr>
<tr class="memdesc:a9dbc27c54f0ee633c831a0b6e24ecc55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the source buffer.  <a href="#a9dbc27c54f0ee633c831a0b6e24ecc55"></a><br/></td></tr>
<tr class="separator:a9dbc27c54f0ee633c831a0b6e24ecc55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4eb9966b7289c69623a39cc0125012f4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a4eb9966b7289c69623a39cc0125012f4">SetLoop</a> (bool Loop)</td></tr>
<tr class="memdesc:a4eb9966b7289c69623a39cc0125012f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound loop state.  <a href="#a4eb9966b7289c69623a39cc0125012f4"></a><br/></td></tr>
<tr class="separator:a4eb9966b7289c69623a39cc0125012f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af93301feb88770789ba7cd993c9dd3a0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af93301feb88770789ba7cd993c9dd3a0">SetPitch</a> (float Pitch)</td></tr>
<tr class="memdesc:af93301feb88770789ba7cd993c9dd3a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound pitch.  <a href="#af93301feb88770789ba7cd993c9dd3a0"></a><br/></td></tr>
<tr class="separator:af93301feb88770789ba7cd993c9dd3a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1536095045923a2332dd9eed6bf8e96a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a1536095045923a2332dd9eed6bf8e96a">SetVolume</a> (float Volume)</td></tr>
<tr class="memdesc:a1536095045923a2332dd9eed6bf8e96a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound volume.  <a href="#a1536095045923a2332dd9eed6bf8e96a"></a><br/></td></tr>
<tr class="separator:a1536095045923a2332dd9eed6bf8e96a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab445e8738218525d8dd067628bc70c78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ab445e8738218525d8dd067628bc70c78">SetPosition</a> (float X, float Y, float Z)</td></tr>
<tr class="memdesc:ab445e8738218525d8dd067628bc70c78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound position (take 3 values).  <a href="#ab445e8738218525d8dd067628bc70c78"></a><br/></td></tr>
<tr class="separator:ab445e8738218525d8dd067628bc70c78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d8c6f11281a574b781c53d62a4af776"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a0d8c6f11281a574b781c53d62a4af776">SetPosition</a> (const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;Position)</td></tr>
<tr class="memdesc:a0d8c6f11281a574b781c53d62a4af776"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound position (take a 3D vector).  <a href="#a0d8c6f11281a574b781c53d62a4af776"></a><br/></td></tr>
<tr class="separator:a0d8c6f11281a574b781c53d62a4af776"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7604f576d184ba8031789beee96d04d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a7604f576d184ba8031789beee96d04d3">SetRelativeToListener</a> (bool Relative)</td></tr>
<tr class="memdesc:a7604f576d184ba8031789beee96d04d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make the sound's position relative to the listener's position, or absolute.  <a href="#a7604f576d184ba8031789beee96d04d3"></a><br/></td></tr>
<tr class="separator:a7604f576d184ba8031789beee96d04d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a545d8dca68d85a03390f6da7c446a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a0a545d8dca68d85a03390f6da7c446a9">SetMinDistance</a> (float MinDistance)</td></tr>
<tr class="memdesc:a0a545d8dca68d85a03390f6da7c446a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the minimum distance - closer than this distance, the listener will hear the sound at its maximum volume.  <a href="#a0a545d8dca68d85a03390f6da7c446a9"></a><br/></td></tr>
<tr class="separator:a0a545d8dca68d85a03390f6da7c446a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3743f1fb53bf9818fbab6e9220bd7b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ac3743f1fb53bf9818fbab6e9220bd7b9">SetAttenuation</a> (float Attenuation)</td></tr>
<tr class="memdesc:ac3743f1fb53bf9818fbab6e9220bd7b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the attenuation factor - the higher the attenuation, the more the sound will be attenuated with distance from listener.  <a href="#ac3743f1fb53bf9818fbab6e9220bd7b9"></a><br/></td></tr>
<tr class="separator:ac3743f1fb53bf9818fbab6e9220bd7b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae779b4fa3d8d98a1490334dbd32e8d62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ae779b4fa3d8d98a1490334dbd32e8d62">SetPlayingOffset</a> (float TimeOffset)</td></tr>
<tr class="memdesc:ae779b4fa3d8d98a1490334dbd32e8d62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the current playing position of the sound.  <a href="#ae779b4fa3d8d98a1490334dbd32e8d62"></a><br/></td></tr>
<tr class="separator:ae779b4fa3d8d98a1490334dbd32e8d62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af07d9979b14afda0e7fb396fd1c52c21"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af07d9979b14afda0e7fb396fd1c52c21">GetBuffer</a> () const </td></tr>
<tr class="memdesc:af07d9979b14afda0e7fb396fd1c52c21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the source buffer.  <a href="#af07d9979b14afda0e7fb396fd1c52c21"></a><br/></td></tr>
<tr class="separator:af07d9979b14afda0e7fb396fd1c52c21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cdc44ade7bda8db2d0431701d72495e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a5cdc44ade7bda8db2d0431701d72495e">GetLoop</a> () const </td></tr>
<tr class="memdesc:a5cdc44ade7bda8db2d0431701d72495e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell whether or not the sound is looping.  <a href="#a5cdc44ade7bda8db2d0431701d72495e"></a><br/></td></tr>
<tr class="separator:a5cdc44ade7bda8db2d0431701d72495e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42333202ed0586f434d852cc35b9d4ef"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a42333202ed0586f434d852cc35b9d4ef">GetPitch</a> () const </td></tr>
<tr class="memdesc:a42333202ed0586f434d852cc35b9d4ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pitch.  <a href="#a42333202ed0586f434d852cc35b9d4ef"></a><br/></td></tr>
<tr class="separator:a42333202ed0586f434d852cc35b9d4ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a018e78cd6c50d653fffff1005a350782"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a018e78cd6c50d653fffff1005a350782">GetVolume</a> () const </td></tr>
<tr class="memdesc:a018e78cd6c50d653fffff1005a350782"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the volume.  <a href="#a018e78cd6c50d653fffff1005a350782"></a><br/></td></tr>
<tr class="separator:a018e78cd6c50d653fffff1005a350782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1adb173ee12a86f261fb765be050643"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Vector3.php">Vector3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ab1adb173ee12a86f261fb765be050643">GetPosition</a> () const </td></tr>
<tr class="memdesc:ab1adb173ee12a86f261fb765be050643"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sound position.  <a href="#ab1adb173ee12a86f261fb765be050643"></a><br/></td></tr>
<tr class="separator:ab1adb173ee12a86f261fb765be050643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0278152abf6e3f195353ce3c270f34e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af0278152abf6e3f195353ce3c270f34e">IsRelativeToListener</a> () const </td></tr>
<tr class="memdesc:af0278152abf6e3f195353ce3c270f34e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell if the sound's position is relative to the listener's position, or if it's absolute.  <a href="#af0278152abf6e3f195353ce3c270f34e"></a><br/></td></tr>
<tr class="separator:af0278152abf6e3f195353ce3c270f34e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07f37119f7b3b00f274ac0263a4bc58b"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a07f37119f7b3b00f274ac0263a4bc58b">GetMinDistance</a> () const </td></tr>
<tr class="memdesc:a07f37119f7b3b00f274ac0263a4bc58b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the minimum distance.  <a href="#a07f37119f7b3b00f274ac0263a4bc58b"></a><br/></td></tr>
<tr class="separator:a07f37119f7b3b00f274ac0263a4bc58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af594211c35d6ac7a9df083c226749c42"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af594211c35d6ac7a9df083c226749c42">GetAttenuation</a> () const </td></tr>
<tr class="memdesc:af594211c35d6ac7a9df083c226749c42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the attenuation factor.  <a href="#af594211c35d6ac7a9df083c226749c42"></a><br/></td></tr>
<tr class="separator:af594211c35d6ac7a9df083c226749c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7fa47e4b14f62a876788698fef150665"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a7fa47e4b14f62a876788698fef150665">GetStatus</a> () const </td></tr>
<tr class="memdesc:a7fa47e4b14f62a876788698fef150665"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the status of the sound (stopped, paused, playing)  <a href="#a7fa47e4b14f62a876788698fef150665"></a><br/></td></tr>
<tr class="separator:a7fa47e4b14f62a876788698fef150665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e80c736a6865123be0c19e99f36467f"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a0e80c736a6865123be0c19e99f36467f">GetPlayingOffset</a> () const </td></tr>
<tr class="memdesc:a0e80c736a6865123be0c19e99f36467f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current playing position of the sound.  <a href="#a0e80c736a6865123be0c19e99f36467f"></a><br/></td></tr>
<tr class="separator:a0e80c736a6865123be0c19e99f36467f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4115769f723a405f5561b4c68f2f45e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Sound.php">Sound</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af4115769f723a405f5561b4c68f2f45e">operator=</a> (const <a class="el" href="classsf_1_1Sound.php">Sound</a> &amp;Other)</td></tr>
<tr class="memdesc:af4115769f723a405f5561b4c68f2f45e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator.  <a href="#af4115769f723a405f5561b4c68f2f45e"></a><br/></td></tr>
<tr class="separator:af4115769f723a405f5561b4c68f2f45e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fe562f8a52994658398c61796cde331"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a0fe562f8a52994658398c61796cde331">ResetBuffer</a> ()</td></tr>
<tr class="memdesc:a0fe562f8a52994658398c61796cde331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the internal buffer.  <a href="#a0fe562f8a52994658398c61796cde331"></a><br/></td></tr>
<tr class="separator:a0fe562f8a52994658398c61796cde331"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a22d0a4fe764bba1f30b58224b1f8855e"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a22d0a4fe764bba1f30b58224b1f8855e"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>SoundStream</b></td></tr>
<tr class="separator:a22d0a4fe764bba1f30b58224b1f8855e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> defines the properties of a sound such as position, volume, pitch, etc. </p>

<p>Definition at line <a class="el" href="Sound_8hpp_source.php#l00045">45</a> of file <a class="el" href="Sound_8hpp_source.php">Sound.hpp</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a28ad2186cde78fed2c79c867b9622195"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">sf::Sound::Status</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enumeration of the sound states. </p>
<dl><dt><b>Enumerator: </b></dt><dd><table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" id="a28ad2186cde78fed2c79c867b9622195a39fd53aa83db9189ca2fff82e0553cf9"></a>Stopped</em>&nbsp;</td><td>
<p><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> is not playing. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a28ad2186cde78fed2c79c867b9622195ac9fedbd48103548431e7851d16be5f4f"></a>Paused</em>&nbsp;</td><td>
<p><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> is paused. </p>
</td></tr>
<tr><td valign="top"><em><a class="anchor" id="a28ad2186cde78fed2c79c867b9622195a16657b221888cf11e2a076f5b2783288"></a>Playing</em>&nbsp;</td><td>
<p><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> is playing. </p>
</td></tr>
</table>
</dd>
</dl>

<p>Definition at line <a class="el" href="Sound_8hpp_source.php#l00052">52</a> of file <a class="el" href="Sound_8hpp_source.php">Sound.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a36ab74beaaa953d9879c933ddd246282"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Sound::Sound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="a45aff03dc5bf87647eba6bed7c1ced29"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sf::Sound::Sound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>Buffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Loop</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Pitch</em> = <code>1.f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Volume</em> = <code>100.f</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em> = <code><a class="el" href="classsf_1_1Vector3.php">Vector3f</a>(0,&#160;0,&#160;0)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct the sound from its parameters. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>: <a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> buffer to play (NULL by default) </td></tr>
    <tr><td class="paramname">Loop</td><td>: Loop flag (false by default) </td></tr>
    <tr><td class="paramname">Pitch</td><td>: Value of the pitch (1 by default) </td></tr>
    <tr><td class="paramname">Volume</td><td>: Volume (100 by default) </td></tr>
    <tr><td class="paramname">Position</td><td>: Position (0, 0, 0 by default) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="aa930dcf53775f501ce43d44bf54c0ce4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Sound::Sound </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Sound.php">Sound</a> &amp;&#160;</td>
          <td class="paramname"><em>Copy</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Copy constructor. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Copy</td><td>: Instance to copy </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ad0792c35310eba2dffd8489c80fad076"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Sound::~Sound </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="af594211c35d6ac7a9df083c226749c42"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Sound::GetAttenuation </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the attenuation factor. </p>
<dl class="section return"><dt>Returns</dt><dd>Attenuation factor of the sound </dd></dl>

</div>
</div>
<a class="anchor" id="af07d9979b14afda0e7fb396fd1c52c21"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a>* sf::Sound::GetBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the source buffer. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> buffer bound to the sound (can be NULL) </dd></dl>

</div>
</div>
<a class="anchor" id="a5cdc44ade7bda8db2d0431701d72495e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Sound::GetLoop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tell whether or not the sound is looping. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the sound is looping, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="a07f37119f7b3b00f274ac0263a4bc58b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Sound::GetMinDistance </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the minimum distance. </p>
<dl class="section return"><dt>Returns</dt><dd>Minimum distance for the sound </dd></dl>

</div>
</div>
<a class="anchor" id="a42333202ed0586f434d852cc35b9d4ef"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Sound::GetPitch </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the pitch. </p>
<dl class="section return"><dt>Returns</dt><dd>Pitch value </dd></dl>

</div>
</div>
<a class="anchor" id="a0e80c736a6865123be0c19e99f36467f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Sound::GetPlayingOffset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current playing position of the sound. </p>
<dl class="section return"><dt>Returns</dt><dd>Current playing position, expressed in seconds </dd></dl>

</div>
</div>
<a class="anchor" id="ab1adb173ee12a86f261fb765be050643"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Vector3.php">Vector3f</a> sf::Sound::GetPosition </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the sound position. </p>
<dl class="section return"><dt>Returns</dt><dd>Position of the sound in the world </dd></dl>

</div>
</div>
<a class="anchor" id="a7fa47e4b14f62a876788698fef150665"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">Status</a> sf::Sound::GetStatus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the status of the sound (stopped, paused, playing) </p>
<dl class="section return"><dt>Returns</dt><dd>Current status of the sound </dd></dl>

</div>
</div>
<a class="anchor" id="a018e78cd6c50d653fffff1005a350782"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Sound::GetVolume </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the volume. </p>
<dl class="section return"><dt>Returns</dt><dd>Volume value (in range [1, 100]) </dd></dl>

</div>
</div>
<a class="anchor" id="af0278152abf6e3f195353ce3c270f34e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Sound::IsRelativeToListener </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tell if the sound's position is relative to the listener's position, or if it's absolute. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the position is relative, false if it's absolute </dd></dl>

</div>
</div>
<a class="anchor" id="af4115769f723a405f5561b4c68f2f45e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Sound.php">Sound</a>&amp; sf::Sound::operator= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Sound.php">Sound</a> &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Assignment operator. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>: Instance to assign</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to the sound </dd></dl>

</div>
</div>
<a class="anchor" id="a6a712910ac1340f32e3ec3a04295ebd3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::Pause </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Pause the sound. </p>

</div>
</div>
<a class="anchor" id="afdafa7970587f04d3833b4095c2de1db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::Play </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Play the sound. </p>

</div>
</div>
<a class="anchor" id="a0fe562f8a52994658398c61796cde331"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::ResetBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reset the internal buffer. </p>
<p>This function is for internal use only, you don't have to use it. </p>

</div>
</div>
<a class="anchor" id="ac3743f1fb53bf9818fbab6e9220bd7b9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetAttenuation </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Attenuation</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the attenuation factor - the higher the attenuation, the more the sound will be attenuated with distance from listener. </p>
<p>The default attenuation factor 1.0</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Attenuation</td><td>: New attenuation factor for the sound </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9dbc27c54f0ee633c831a0b6e24ecc55"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;&#160;</td>
          <td class="paramname"><em>Buffer</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the source buffer. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Buffer</td><td>: New sound buffer to bind to the sound </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4eb9966b7289c69623a39cc0125012f4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetLoop </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Loop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the sound loop state. </p>
<p>This parameter is disabled by default</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Loop</td><td>: True to play in loop, false to play once </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0a545d8dca68d85a03390f6da7c446a9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetMinDistance </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>MinDistance</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the minimum distance - closer than this distance, the listener will hear the sound at its maximum volume. </p>
<p>The default minimum distance is 1.0</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">MinDistance</td><td>: New minimum distance for the sound </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="af93301feb88770789ba7cd993c9dd3a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetPitch </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Pitch</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the sound pitch. </p>
<p>The default pitch is 1</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pitch</td><td>: New pitch </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae779b4fa3d8d98a1490334dbd32e8d62"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetPlayingOffset </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>TimeOffset</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the current playing position of the sound. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">TimeOffset</td><td>: New playing position, expressed in seconds </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab445e8738218525d8dd067628bc70c78"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetPosition </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>X</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Y</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Z</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the sound position (take 3 values). </p>
<p>The default position is (0, 0, 0)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">X,Y,Z</td><td>: Position of the sound in the world </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a0d8c6f11281a574b781c53d62a4af776"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetPosition </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;&#160;</td>
          <td class="paramname"><em>Position</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the sound position (take a 3D vector). </p>
<p>The default position is (0, 0, 0)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Position</td><td>: Position of the sound in the world </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a7604f576d184ba8031789beee96d04d3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetRelativeToListener </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Relative</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Make the sound's position relative to the listener's position, or absolute. </p>
<p>The default value is false (absolute)</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Relative</td><td>: True to set the position relative, false to set it absolute </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a1536095045923a2332dd9eed6bf8e96a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::SetVolume </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Volume</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the sound volume. </p>
<p>The default volume is 100</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Volume</td><td>: Volume (in range [0, 100]) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ab1f5f103f737c52ceb0b1a067b4d0630"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::Sound::Stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop the sound. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Sound_8hpp_source.php">Sound.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
