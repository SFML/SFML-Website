<?php
    $version = '2.2'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'ThreadLocalPtr.hpp Source File'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.8.8 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_7107138a9ca528d5a30fb6c42d13b481.php">SFML</a></li><li class="navelem"><a class="el" href="dir_186e0dcb96ed2747fde77bc4d13d2016.php">include</a></li><li class="navelem"><a class="el" href="dir_8300c2a4f3c47520e59b1ed4cebc1d64.php">SFML</a></li><li class="navelem"><a class="el" href="dir_e77bc78cd1600c86c90e2a8e6a2ca7d9.php">System</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ThreadLocalPtr.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">// SFML - Simple and Fast Multimedia Library</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">// Copyright (C) 2007-2014 Laurent Gomila (laurent.gom@gmail.com)</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// This software is provided &#39;as-is&#39;, without any express or implied warranty.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// In no event will the authors be held liable for any damages arising from the use of this software.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">// Permission is granted to anyone to use this software for any purpose,</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">// including commercial applications, and to alter it and redistribute it freely,</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">// subject to the following restrictions:</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">// 1. The origin of this software must not be misrepresented;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">//    you must not claim that you wrote the original software.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">//    If you use this software in a product, an acknowledgment</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">//    in the product documentation would be appreciated but is not required.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">// 2. Altered source versions must be plainly marked as such,</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">//    and must not be misrepresented as being the original software.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">// 3. This notice may not be removed or altered from any source distribution.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">//</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"></span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#ifndef SFML_THREADLOCALPTR_HPP</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#define SFML_THREADLOCALPTR_HPP</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment">// Headers</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span><span class="preprocessor">#include &lt;SFML/System/ThreadLocal.hpp&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">namespace </span><a class="code" href="namespacesf.php">sf</a></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="classsf_1_1ThreadLocalPtr.php">   41</a></span>&#160;<span class="keyword">class </span><a class="code" href="classsf_1_1ThreadLocalPtr.php">ThreadLocalPtr</a> : <span class="keyword">private</span> <a class="code" href="classsf_1_1ThreadLocal.php">ThreadLocal</a></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <a class="code" href="classsf_1_1ThreadLocalPtr.php#a8c678211d7828d2a8c41cb534422d649">ThreadLocalPtr</a>(T* value = NULL);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    T&amp; <a class="code" href="classsf_1_1ThreadLocalPtr.php#a601856258cf668c345b63217a9cd2c07">operator *</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    T* <a class="code" href="classsf_1_1ThreadLocalPtr.php#aecebc50c4c0ed75bcf246707d54c4d4b">operator -&gt;</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">operator</span> T*() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="classsf_1_1ThreadLocalPtr.php">ThreadLocalPtr&lt;T&gt;</a>&amp; <a class="code" href="classsf_1_1ThreadLocalPtr.php#a2adfc2e37f437e53acd9d1abd377ef2e">operator =</a>(T* value);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <a class="code" href="classsf_1_1ThreadLocalPtr.php">ThreadLocalPtr&lt;T&gt;</a>&amp; <a class="code" href="classsf_1_1ThreadLocalPtr.php#a2adfc2e37f437e53acd9d1abd377ef2e">operator =</a>(<span class="keyword">const</span> <a class="code" href="classsf_1_1ThreadLocalPtr.php">ThreadLocalPtr&lt;T&gt;</a>&amp; right);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;};</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;} <span class="comment">// namespace sf</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">#include &lt;SFML/System/ThreadLocalPtr.inl&gt;</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">#endif // SFML_THREADLOCALPTR_HPP</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div>
<div class="ttc" id="classsf_1_1ThreadLocalPtr_php"><div class="ttname"><a href="classsf_1_1ThreadLocalPtr.php">sf::ThreadLocalPtr</a></div><div class="ttdoc">Pointer to a thread-local variable. </div><div class="ttdef"><b>Definition:</b> <a href="ThreadLocalPtr_8hpp_source.php#l00041">ThreadLocalPtr.hpp:41</a></div></div>
<div class="ttc" id="namespacesf_php"><div class="ttname"><a href="namespacesf.php">sf</a></div><div class="ttdef"><b>Definition:</b> <a href="Listener_8hpp_source.php#l00035">Listener.hpp:35</a></div></div>
<div class="ttc" id="classsf_1_1ThreadLocalPtr_php_aecebc50c4c0ed75bcf246707d54c4d4b"><div class="ttname"><a href="classsf_1_1ThreadLocalPtr.php#aecebc50c4c0ed75bcf246707d54c4d4b">sf::ThreadLocalPtr::operator-&gt;</a></div><div class="ttdeci">T * operator-&gt;() const </div><div class="ttdoc">Overload of operator -> </div></div>
<div class="ttc" id="classsf_1_1ThreadLocalPtr_php_a601856258cf668c345b63217a9cd2c07"><div class="ttname"><a href="classsf_1_1ThreadLocalPtr.php#a601856258cf668c345b63217a9cd2c07">sf::ThreadLocalPtr::operator*</a></div><div class="ttdeci">T &amp; operator*() const </div><div class="ttdoc">Overload of unary operator *. </div></div>
<div class="ttc" id="classsf_1_1ThreadLocal_php"><div class="ttname"><a href="classsf_1_1ThreadLocal.php">sf::ThreadLocal</a></div><div class="ttdoc">Defines variables with thread-local storage. </div><div class="ttdef"><b>Definition:</b> <a href="ThreadLocal_8hpp_source.php#l00047">ThreadLocal.hpp:47</a></div></div>
<div class="ttc" id="classsf_1_1ThreadLocalPtr_php_a2adfc2e37f437e53acd9d1abd377ef2e"><div class="ttname"><a href="classsf_1_1ThreadLocalPtr.php#a2adfc2e37f437e53acd9d1abd377ef2e">sf::ThreadLocalPtr::operator=</a></div><div class="ttdeci">ThreadLocalPtr&lt; T &gt; &amp; operator=(T *value)</div><div class="ttdoc">Assignment operator for a raw pointer parameter. </div></div>
<div class="ttc" id="classsf_1_1ThreadLocalPtr_php_a8c678211d7828d2a8c41cb534422d649"><div class="ttname"><a href="classsf_1_1ThreadLocalPtr.php#a8c678211d7828d2a8c41cb534422d649">sf::ThreadLocalPtr::ThreadLocalPtr</a></div><div class="ttdeci">ThreadLocalPtr(T *value=NULL)</div><div class="ttdoc">Default constructor. </div></div>
</div><!-- fragment --></div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
