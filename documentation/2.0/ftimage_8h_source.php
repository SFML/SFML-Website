<?php
    $version = '2.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_a0fcb5a19f655e235834e6382998c7e0.php">sfml</a></li><li class="navelem"><a class="el" href="dir_29bf4fae8a8e962aff98775afacdab0f.php">sfml</a></li><li class="navelem"><a class="el" href="dir_793f6ba77cf4e8a5d963fd5c095c876f.php">extlibs</a></li><li class="navelem"><a class="el" href="dir_68d8c18478ca54c694885cb8cbc52e5a.php">headers</a></li><li class="navelem"><a class="el" href="dir_1659f8737ee18542010349efee4175b2.php">libfreetype</a></li><li class="navelem"><a class="el" href="dir_8d72d6c3adad3bcfb58fa15e2b0d2e4e.php">windows</a></li><li class="navelem"><a class="el" href="dir_80e8051d9d307039295ff8d82b0d0825.php">freetype</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ftimage.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/*  ftimage.h                                                              */</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/*    FreeType glyph image formats and default raster interface            */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/*    (specification).                                                     */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">/*  Copyright 1996-2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,   */</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">/*            2010 by                                                      */</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">/*  This file is part of the FreeType project, and may only be used,       */</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/*  modified, and distributed under the terms of the FreeType project      */</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/*  this file you indicate that you have read the license and              */</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">/*  understand and accept it fully.                                        */</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="comment">/* Note: A `raster&#39; is simply a scan-line converter, used to render      */</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="comment">/*       FT_Outlines into FT_Bitmaps.                                    */</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#ifndef __FTIMAGE_H__</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __FTIMAGE_H__</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="comment">/* _STANDALONE_ is from ftgrays.c */</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#ifndef _STANDALONE_</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;ft2build.h&gt;</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;FT_BEGIN_HEADER</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="comment">/* &lt;Section&gt;                                                             */</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="comment">/*    basic_types                                                        */</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="comment">/* &lt;Type&gt;                                                                */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="comment">/*    FT_Pos                                                             */</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="comment">/*    The type FT_Pos is used to store vectorial coordinates.  Depending */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="comment">/*    on the context, these can represent distances in integer font      */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="comment">/*    units, or 16.16, or 26.6 fixed float pixel coordinates.            */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keyword">typedef</span> <span class="keywordtype">signed</span> <span class="keywordtype">long</span>  FT_Pos;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="comment">/*    FT_Vector                                                          */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="comment">/*    A simple structure used to store a 2D vector; coordinates are of   */</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="comment">/*    the FT_Pos type.                                                   */</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">/*    x :: The horizontal coordinate.                                    */</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="comment">/*    y :: The vertical coordinate.                                      */</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="code" href="structFT__Vector__.php">   75</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__Vector__.php">FT_Vector_</a></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    FT_Pos  x;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    FT_Pos  y;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  } <a class="code" href="structFT__Vector__.php">FT_Vector</a>;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="comment">/*    FT_BBox                                                            */</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="comment">/*    A structure used to hold an outline&#39;s bounding box, i.e., the      */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="comment">/*    coordinates of its extrema in the horizontal and vertical          */</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="comment">/*    directions.                                                        */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="comment">/*    xMin :: The horizontal minimum (left-most).                        */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="comment">/*    yMin :: The vertical minimum (bottom-most).                        */</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="comment">/*    xMax :: The horizontal maximum (right-most).                       */</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="comment">/*    yMax :: The vertical maximum (top-most).                           */</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="comment">/*    The bounding box is specified with the coordinates of the lower    */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="comment">/*    left and the upper right corner.  In PostScript, those values are  */</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="comment">/*    often called (llx,lly) and (urx,ury), respectively.                */</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="comment">/*    If `yMin&#39; is negative, this value gives the glyph&#39;s descender.     */</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">/*    Otherwise, the glyph doesn&#39;t descend below the baseline.           */</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="comment">/*    Similarly, if `ymax&#39; is positive, this value gives the glyph&#39;s     */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="comment">/*    ascender.                                                          */</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="comment">/*    `xMin&#39; gives the horizontal distance from the glyph&#39;s origin to    */</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="comment">/*    the left edge of the glyph&#39;s bounding box.  If `xMin&#39; is negative, */</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="comment">/*    the glyph extends to the left of the origin.                       */</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00116"></a><span class="lineno"><a class="code" href="structFT__BBox__.php">  116</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__BBox__.php">FT_BBox_</a></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    FT_Pos  xMin, yMin;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    FT_Pos  xMax, yMax;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  } <a class="code" href="structFT__BBox__.php">FT_BBox</a>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="comment">/* &lt;Enum&gt;                                                                */</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="comment">/*    FT_Pixel_Mode                                                      */</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="comment">/*    An enumeration type used to describe the format of pixels in a     */</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="comment">/*    given bitmap.  Note that additional formats may be added in the    */</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="comment">/*    future.                                                            */</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="comment">/* &lt;Values&gt;                                                              */</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">/*    FT_PIXEL_MODE_NONE ::                                              */</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="comment">/*      Value~0 is reserved.                                             */</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="comment">/*    FT_PIXEL_MODE_MONO ::                                              */</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="comment">/*      A monochrome bitmap, using 1~bit per pixel.  Note that pixels    */</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">/*      are stored in most-significant order (MSB), which means that     */</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="comment">/*      the left-most pixel in a byte has value 128.                     */</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="comment">/*    FT_PIXEL_MODE_GRAY ::                                              */</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="comment">/*      An 8-bit bitmap, generally used to represent anti-aliased glyph  */</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="comment">/*      images.  Each pixel is stored in one byte.  Note that the number */</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="comment">/*      of `gray&#39; levels is stored in the `num_grays&#39; field of the       */</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="comment">/*      @FT_Bitmap structure (it generally is 256).                      */</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">/*    FT_PIXEL_MODE_GRAY2 ::                                             */</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="comment">/*      A 2-bit per pixel bitmap, used to represent embedded             */</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="comment">/*      anti-aliased bitmaps in font files according to the OpenType     */</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="comment">/*      specification.  We haven&#39;t found a single font using this        */</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="comment">/*      format, however.                                                 */</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="comment">/*    FT_PIXEL_MODE_GRAY4 ::                                             */</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="comment">/*      A 4-bit per pixel bitmap, representing embedded anti-aliased     */</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="comment">/*      bitmaps in font files according to the OpenType specification.   */</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="comment">/*      We haven&#39;t found a single font using this format, however.       */</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="comment">/*    FT_PIXEL_MODE_LCD ::                                               */</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="comment">/*      An 8-bit bitmap, representing RGB or BGR decimated glyph images  */</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="comment">/*      used for display on LCD displays; the bitmap is three times      */</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="comment">/*      wider than the original glyph image.  See also                   */</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="comment">/*      @FT_RENDER_MODE_LCD.                                             */</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="comment">/*    FT_PIXEL_MODE_LCD_V ::                                             */</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="comment">/*      An 8-bit bitmap, representing RGB or BGR decimated glyph images  */</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="comment">/*      used for display on rotated LCD displays; the bitmap is three    */</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="comment">/*      times taller than the original glyph image.  See also            */</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="comment">/*      @FT_RENDER_MODE_LCD_V.                                           */</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">typedef</span> <span class="keyword">enum</span>  FT_Pixel_Mode_</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  {</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    FT_PIXEL_MODE_NONE = 0,</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    FT_PIXEL_MODE_MONO,</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    FT_PIXEL_MODE_GRAY,</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    FT_PIXEL_MODE_GRAY2,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    FT_PIXEL_MODE_GRAY4,</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    FT_PIXEL_MODE_LCD,</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    FT_PIXEL_MODE_LCD_V,</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    FT_PIXEL_MODE_MAX      <span class="comment">/* do not remove */</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  } FT_Pixel_Mode;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="comment">/* &lt;Enum&gt;                                                                */</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="comment">/*    ft_pixel_mode_xxx                                                  */</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="comment">/*    A list of deprecated constants.  Use the corresponding             */</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="comment">/*    @FT_Pixel_Mode values instead.                                     */</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="comment">/* &lt;Values&gt;                                                              */</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="comment">/*    ft_pixel_mode_none  :: See @FT_PIXEL_MODE_NONE.                    */</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="comment">/*    ft_pixel_mode_mono  :: See @FT_PIXEL_MODE_MONO.                    */</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="comment">/*    ft_pixel_mode_grays :: See @FT_PIXEL_MODE_GRAY.                    */</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="comment">/*    ft_pixel_mode_pal2  :: See @FT_PIXEL_MODE_GRAY2.                   */</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="comment">/*    ft_pixel_mode_pal4  :: See @FT_PIXEL_MODE_GRAY4.                   */</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor">#define ft_pixel_mode_none   FT_PIXEL_MODE_NONE</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_pixel_mode_mono   FT_PIXEL_MODE_MONO</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_pixel_mode_grays  FT_PIXEL_MODE_GRAY</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_pixel_mode_pal2   FT_PIXEL_MODE_GRAY2</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_pixel_mode_pal4   FT_PIXEL_MODE_GRAY4</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; <span class="comment">/* */</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">#if 0</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="comment">/* &lt;Enum&gt;                                                                */</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="comment">/*    FT_Palette_Mode                                                    */</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="comment">/*    THIS TYPE IS DEPRECATED.  DO NOT USE IT!                           */</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="comment">/*    An enumeration type to describe the format of a bitmap palette,    */</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="comment">/*    used with ft_pixel_mode_pal4 and ft_pixel_mode_pal8.               */</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="comment">/* &lt;Values&gt;                                                              */</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="comment">/*    ft_palette_mode_rgb  :: The palette is an array of 3-byte RGB      */</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="comment">/*                            records.                                   */</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="comment">/*    ft_palette_mode_rgba :: The palette is an array of 4-byte RGBA     */</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="comment">/*                            records.                                   */</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  <span class="comment">/*    As ft_pixel_mode_pal2, pal4 and pal8 are currently unused by       */</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="comment">/*    FreeType, these types are not handled by the library itself.       */</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keyword">typedef</span> <span class="keyword">enum</span>  FT_Palette_Mode_</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    ft_palette_mode_rgb = 0,</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    ft_palette_mode_rgba,</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    ft_palette_mode_max   <span class="comment">/* do not remove */</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  } FT_Palette_Mode;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="comment">/* */</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="comment">/*    FT_Bitmap                                                          */</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="comment">/*    A structure used to describe a bitmap or pixmap to the raster.     */</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="comment">/*    Note that we now manage pixmaps of various depths through the      */</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="comment">/*    `pixel_mode&#39; field.                                                */</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="comment">/*    rows         :: The number of bitmap rows.                         */</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="comment">/*    width        :: The number of pixels in bitmap row.                */</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="comment">/*    pitch        :: The pitch&#39;s absolute value is the number of bytes  */</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="comment">/*                    taken by one bitmap row, including padding.        */</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="comment">/*                    However, the pitch is positive when the bitmap has */</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="comment">/*                    a `down&#39; flow, and negative when it has an `up&#39;    */</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <span class="comment">/*                    flow.  In all cases, the pitch is an offset to add */</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="comment">/*                    to a bitmap pointer in order to go down one row.   */</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="comment">/*                    Note that `padding&#39; means the alignment of a       */</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="comment">/*                    bitmap to a byte border, and FreeType functions    */</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="comment">/*                    normally align to the smallest possible integer    */</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="comment">/*                    value.                                             */</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  <span class="comment">/*                    For the B/W rasterizer, `pitch&#39; is always an even  */</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="comment">/*                    number.                                            */</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="comment">/*                    To change the pitch of a bitmap (say, to make it a */</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="comment">/*                    multiple of 4), use @FT_Bitmap_Convert.            */</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="comment">/*                    Alternatively, you might use callback functions to */</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <span class="comment">/*                    directly render to the application&#39;s surface; see  */</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="comment">/*                    the file `example2.cpp&#39; in the tutorial for a      */</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="comment">/*                    demonstration.                                     */</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="comment">/*    buffer       :: A typeless pointer to the bitmap buffer.  This     */</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <span class="comment">/*                    value should be aligned on 32-bit boundaries in    */</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="comment">/*                    most cases.                                        */</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="comment">/*    num_grays    :: This field is only used with                       */</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <span class="comment">/*                    @FT_PIXEL_MODE_GRAY; it gives the number of gray   */</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="comment">/*                    levels used in the bitmap.                         */</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  <span class="comment">/*    pixel_mode   :: The pixel mode, i.e., how pixel bits are stored.   */</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  <span class="comment">/*                    See @FT_Pixel_Mode for possible values.            */</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="comment">/*    palette_mode :: This field is intended for paletted pixel modes;   */</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="comment">/*                    it indicates how the palette is stored.  Not       */</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="comment">/*                    used currently.                                    */</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="comment">/*    palette      :: A typeless pointer to the bitmap palette; this     */</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="comment">/*                    field is intended for paletted pixel modes.  Not   */</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="comment">/*                    used currently.                                    */</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="comment">/*   For now, the only pixel modes supported by FreeType are mono and    */</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="comment">/*   grays.  However, drivers might be added in the future to support    */</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  <span class="comment">/*   more `colorful&#39; options.                                            */</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00310"></a><span class="lineno"><a class="code" href="structFT__Bitmap__.php">  310</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__Bitmap__.php">FT_Bitmap_</a></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;    <span class="keywordtype">int</span>             rows;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;    <span class="keywordtype">int</span>             width;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;    <span class="keywordtype">int</span>             pitch;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*  buffer;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordtype">short</span>           num_grays;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;    <span class="keywordtype">char</span>            pixel_mode;</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keywordtype">char</span>            palette_mode;</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    <span class="keywordtype">void</span>*           palette;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  } <a class="code" href="structFT__Bitmap__.php">FT_Bitmap</a>;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="comment">/* &lt;Section&gt;                                                             */</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <span class="comment">/*    outline_processing                                                 */</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <span class="comment">/*    FT_Outline                                                         */</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="comment">/*    This structure is used to describe an outline to the scan-line     */</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="comment">/*    converter.                                                         */</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  <span class="comment">/*    n_contours :: The number of contours in the outline.               */</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  <span class="comment">/*    n_points   :: The number of points in the outline.                 */</span></div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;  <span class="comment">/*    points     :: A pointer to an array of `n_points&#39; @FT_Vector       */</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  <span class="comment">/*                  elements, giving the outline&#39;s point coordinates.    */</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  <span class="comment">/*    tags       :: A pointer to an array of `n_points&#39; chars, giving    */</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  <span class="comment">/*                  each outline point&#39;s type.                           */</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  <span class="comment">/*                  If bit~0 is unset, the point is `off&#39; the curve,     */</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <span class="comment">/*                  i.e., a Bézier control point, while it is `on&#39; if    */</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <span class="comment">/*                  set.                                                 */</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  <span class="comment">/*                  Bit~1 is meaningful for `off&#39; points only.  If set,  */</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  <span class="comment">/*                  it indicates a third-order Bézier arc control point; */</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  <span class="comment">/*                  and a second-order control point if unset.           */</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;  <span class="comment">/*                  If bit~2 is set, bits 5-7 contain the drop-out mode  */</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  <span class="comment">/*                  (as defined in the OpenType specification; the value */</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  <span class="comment">/*                  is the same as the argument to the SCANMODE          */</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <span class="comment">/*                  instruction).                                        */</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  <span class="comment">/*                  Bits 3 and~4 are reserved for internal purposes.     */</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="comment">/*    contours   :: An array of `n_contours&#39; shorts, giving the end      */</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  <span class="comment">/*                  point of each contour within the outline.  For       */</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  <span class="comment">/*                  example, the first contour is defined by the points  */</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  <span class="comment">/*                  `0&#39; to `contours[0]&#39;, the second one is defined by   */</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  <span class="comment">/*                  the points `contours[0]+1&#39; to `contours[1]&#39;, etc.    */</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  <span class="comment">/*    flags      :: A set of bit flags used to characterize the outline  */</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  <span class="comment">/*                  and give hints to the scan-converter and hinter on   */</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  <span class="comment">/*                  how to convert/grid-fit it.  See @FT_OUTLINE_FLAGS.  */</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="comment">/*    The B/W rasterizer only checks bit~2 in the `tags&#39; array for the   */</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <span class="comment">/*    first point of each contour.  The drop-out mode as given with      */</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <span class="comment">/*    @FT_OUTLINE_IGNORE_DROPOUTS, @FT_OUTLINE_SMART_DROPOUTS, and       */</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="comment">/*    @FT_OUTLINE_INCLUDE_STUBS in `flags&#39; is then overridden.           */</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00383"></a><span class="lineno"><a class="code" href="structFT__Outline__.php">  383</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__Outline__.php">FT_Outline_</a></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  {</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    <span class="keywordtype">short</span>       n_contours;      <span class="comment">/* number of contours in glyph        */</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;    <span class="keywordtype">short</span>       n_points;        <span class="comment">/* number of points in the glyph      */</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  points;          <span class="comment">/* the outline&#39;s points               */</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    <span class="keywordtype">char</span>*       tags;            <span class="comment">/* the points flags                   */</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    <span class="keywordtype">short</span>*      contours;        <span class="comment">/* the contour end points             */</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;    <span class="keywordtype">int</span>         flags;           <span class="comment">/* outline masks                      */</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  } <a class="code" href="structFT__Outline__.php">FT_Outline</a>;</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  <span class="comment">/* Following limits must be consistent with */</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  <span class="comment">/* FT_Outline.{n_contours,n_points}         */</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="preprocessor">#define FT_OUTLINE_CONTOURS_MAX  SHRT_MAX</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_POINTS_MAX    SHRT_MAX</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="comment">/* &lt;Enum&gt;                                                                */</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  <span class="comment">/*    FT_OUTLINE_FLAGS                                                   */</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  <span class="comment">/*    A list of bit-field constants use for the flags in an outline&#39;s    */</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="comment">/*    `flags&#39; field.                                                     */</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="comment">/* &lt;Values&gt;                                                              */</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  <span class="comment">/*    FT_OUTLINE_NONE ::                                                 */</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  <span class="comment">/*      Value~0 is reserved.                                             */</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;  <span class="comment">/*    FT_OUTLINE_OWNER ::                                                */</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  <span class="comment">/*      If set, this flag indicates that the outline&#39;s field arrays      */</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  <span class="comment">/*      (i.e., `points&#39;, `flags&#39;, and `contours&#39;) are `owned&#39; by the     */</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  <span class="comment">/*      outline object, and should thus be freed when it is destroyed.   */</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  <span class="comment">/*    FT_OUTLINE_EVEN_ODD_FILL ::                                        */</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  <span class="comment">/*      By default, outlines are filled using the non-zero winding rule. */</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="comment">/*      If set to 1, the outline will be filled using the even-odd fill  */</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="comment">/*      rule (only works with the smooth rasterizer).                    */</span></div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="comment">/*    FT_OUTLINE_REVERSE_FILL ::                                         */</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="comment">/*      By default, outside contours of an outline are oriented in       */</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="comment">/*      clock-wise direction, as defined in the TrueType specification.  */</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  <span class="comment">/*      This flag is set if the outline uses the opposite direction      */</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="comment">/*      (typically for Type~1 fonts).  This flag is ignored by the scan  */</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  <span class="comment">/*      converter.                                                       */</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  <span class="comment">/*    FT_OUTLINE_IGNORE_DROPOUTS ::                                      */</span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  <span class="comment">/*      By default, the scan converter will try to detect drop-outs in   */</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  <span class="comment">/*      an outline and correct the glyph bitmap to ensure consistent     */</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="comment">/*      shape continuity.  If set, this flag hints the scan-line         */</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="comment">/*      converter to ignore such cases.  See below for more information. */</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  <span class="comment">/*    FT_OUTLINE_SMART_DROPOUTS ::                                       */</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  <span class="comment">/*      Select smart dropout control.  If unset, use simple dropout      */</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  <span class="comment">/*      control.  Ignored if @FT_OUTLINE_IGNORE_DROPOUTS is set.  See    */</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  <span class="comment">/*      below for more information.                                      */</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  <span class="comment">/*    FT_OUTLINE_INCLUDE_STUBS ::                                        */</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  <span class="comment">/*      If set, turn pixels on for `stubs&#39;, otherwise exclude them.      */</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;  <span class="comment">/*      Ignored if @FT_OUTLINE_IGNORE_DROPOUTS is set.  See below for    */</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;  <span class="comment">/*      more information.                                                */</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;  <span class="comment">/*    FT_OUTLINE_HIGH_PRECISION ::                                       */</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;  <span class="comment">/*      This flag indicates that the scan-line converter should try to   */</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;  <span class="comment">/*      convert this outline to bitmaps with the highest possible        */</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;  <span class="comment">/*      quality.  It is typically set for small character sizes.  Note   */</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;  <span class="comment">/*      that this is only a hint that might be completely ignored by a   */</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="comment">/*      given scan-converter.                                            */</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;  <span class="comment">/*    FT_OUTLINE_SINGLE_PASS ::                                          */</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;  <span class="comment">/*      This flag is set to force a given scan-converter to only use a   */</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;  <span class="comment">/*      single pass over the outline to render a bitmap glyph image.     */</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  <span class="comment">/*      Normally, it is set for very large character sizes.  It is only  */</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;  <span class="comment">/*      a hint that might be completely ignored by a given               */</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  <span class="comment">/*      scan-converter.                                                  */</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  <span class="comment">/*    The flags @FT_OUTLINE_IGNORE_DROPOUTS, @FT_OUTLINE_SMART_DROPOUTS, */</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="comment">/*    and @FT_OUTLINE_INCLUDE_STUBS are ignored by the smooth            */</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  <span class="comment">/*    rasterizer.                                                        */</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;  <span class="comment">/*    There exists a second mechanism to pass the drop-out mode to the   */</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  <span class="comment">/*    B/W rasterizer; see the `tags&#39; field in @FT_Outline.               */</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;  <span class="comment">/*    Please refer to the description of the `SCANTYPE&#39; instruction in   */</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  <span class="comment">/*    the OpenType specification (in file `ttinst1.doc&#39;) how simple      */</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  <span class="comment">/*    drop-outs, smart drop-outs, and stubs are defined.                 */</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="preprocessor">#define FT_OUTLINE_NONE             0x0</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_OWNER            0x1</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_EVEN_ODD_FILL    0x2</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_REVERSE_FILL     0x4</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_IGNORE_DROPOUTS  0x8</span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_SMART_DROPOUTS   0x10</span></div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_INCLUDE_STUBS    0x20</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;<span class="preprocessor">#define FT_OUTLINE_HIGH_PRECISION   0x100</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_OUTLINE_SINGLE_PASS      0x200</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160; <span class="comment">/*************************************************************************</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;<span class="comment">  *</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;<span class="comment">  * @enum:</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="comment">  *   ft_outline_flags</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;<span class="comment">  *</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;<span class="comment">  * @description:</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;<span class="comment">  *   These constants are deprecated.  Please use the corresponding</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;<span class="comment">  *   @FT_OUTLINE_FLAGS values.</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;<span class="comment">  *</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="comment">  * @values:</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;<span class="comment">  *   ft_outline_none            :: See @FT_OUTLINE_NONE.</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;<span class="comment">  *   ft_outline_owner           :: See @FT_OUTLINE_OWNER.</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="comment">  *   ft_outline_even_odd_fill   :: See @FT_OUTLINE_EVEN_ODD_FILL.</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="comment">  *   ft_outline_reverse_fill    :: See @FT_OUTLINE_REVERSE_FILL.</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="comment">  *   ft_outline_ignore_dropouts :: See @FT_OUTLINE_IGNORE_DROPOUTS.</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="comment">  *   ft_outline_high_precision  :: See @FT_OUTLINE_HIGH_PRECISION.</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;<span class="comment">  *   ft_outline_single_pass     :: See @FT_OUTLINE_SINGLE_PASS.</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;<span class="comment">  */</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="preprocessor">#define ft_outline_none             FT_OUTLINE_NONE</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_outline_owner            FT_OUTLINE_OWNER</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_outline_even_odd_fill    FT_OUTLINE_EVEN_ODD_FILL</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_outline_reverse_fill     FT_OUTLINE_REVERSE_FILL</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_outline_ignore_dropouts  FT_OUTLINE_IGNORE_DROPOUTS</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_outline_high_precision   FT_OUTLINE_HIGH_PRECISION</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_outline_single_pass      FT_OUTLINE_SINGLE_PASS</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;  <span class="comment">/* */</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;</div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;<span class="preprocessor">#define FT_CURVE_TAG( flag )  ( flag &amp; 3 )</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;<span class="preprocessor">#define FT_CURVE_TAG_ON            1</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_CURVE_TAG_CONIC         0</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_CURVE_TAG_CUBIC         2</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;<span class="preprocessor">#define FT_CURVE_TAG_HAS_SCANMODE  4</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;<span class="preprocessor">#define FT_CURVE_TAG_TOUCH_X       8  </span><span class="comment">/* reserved for the TrueType hinter */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_CURVE_TAG_TOUCH_Y      16  </span><span class="comment">/* reserved for the TrueType hinter */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;<span class="preprocessor">#define FT_CURVE_TAG_TOUCH_BOTH    ( FT_CURVE_TAG_TOUCH_X | \</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;<span class="preprocessor">                                     FT_CURVE_TAG_TOUCH_Y )</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;<span class="preprocessor">#define FT_Curve_Tag_On       FT_CURVE_TAG_ON</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_Curve_Tag_Conic    FT_CURVE_TAG_CONIC</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_Curve_Tag_Cubic    FT_CURVE_TAG_CUBIC</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_Curve_Tag_Touch_X  FT_CURVE_TAG_TOUCH_X</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_Curve_Tag_Touch_Y  FT_CURVE_TAG_TOUCH_Y</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;  <span class="comment">/*    FT_Outline_MoveToFunc                                              */</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  <span class="comment">/*    A function pointer type used to describe the signature of a `move  */</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;  <span class="comment">/*    to&#39; function during outline walking/decomposition.                 */</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  <span class="comment">/*    A `move to&#39; is emitted to start a new contour in an outline.       */</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  <span class="comment">/*    to   :: A pointer to the target point of the `move to&#39;.            */</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  <span class="comment">/*    user :: A typeless pointer which is passed from the caller of the  */</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;  <span class="comment">/*            decomposition function.                                    */</span></div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  <span class="comment">/*    Error code.  0~means success.                                      */</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  (*FT_Outline_MoveToFunc)( <span class="keyword">const</span> <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  to,</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                            <span class="keywordtype">void</span>*             user );</div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;</div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;<span class="preprocessor">#define FT_Outline_MoveTo_Func  FT_Outline_MoveToFunc</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;  <span class="comment">/*    FT_Outline_LineToFunc                                              */</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;  <span class="comment">/*    A function pointer type used to describe the signature of a `line  */</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;  <span class="comment">/*    to&#39; function during outline walking/decomposition.                 */</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;  <span class="comment">/*    A `line to&#39; is emitted to indicate a segment in the outline.       */</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;  <span class="comment">/*    to   :: A pointer to the target point of the `line to&#39;.            */</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;  <span class="comment">/*    user :: A typeless pointer which is passed from the caller of the  */</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;  <span class="comment">/*            decomposition function.                                    */</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;  <span class="comment">/*    Error code.  0~means success.                                      */</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;  (*FT_Outline_LineToFunc)( <span class="keyword">const</span> <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  to,</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;                            <span class="keywordtype">void</span>*             user );</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;</div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;<span class="preprocessor">#define FT_Outline_LineTo_Func  FT_Outline_LineToFunc</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;  <span class="comment">/*    FT_Outline_ConicToFunc                                             */</span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;  <span class="comment">/*    A function pointer type used to describe the signature of a `conic */</span></div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;  <span class="comment">/*    to&#39; function during outline walking or decomposition.              */</span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;  <span class="comment">/*    A `conic to&#39; is emitted to indicate a second-order Bézier arc in   */</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;  <span class="comment">/*    the outline.                                                       */</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;  <span class="comment">/*    control :: An intermediate control point between the last position */</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;  <span class="comment">/*               and the new target in `to&#39;.                             */</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;  <span class="comment">/*    to      :: A pointer to the target end point of the conic arc.     */</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;  <span class="comment">/*    user    :: A typeless pointer which is passed from the caller of   */</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;  <span class="comment">/*               the decomposition function.                             */</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;  <span class="comment">/*    Error code.  0~means success.                                      */</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;  (*FT_Outline_ConicToFunc)( <span class="keyword">const</span> <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  control,</div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  to,</div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;                             <span class="keywordtype">void</span>*             user );</div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;</div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="preprocessor">#define FT_Outline_ConicTo_Func  FT_Outline_ConicToFunc</span></div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;</div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  <span class="comment">/*    FT_Outline_CubicToFunc                                             */</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;  <span class="comment">/*    A function pointer type used to describe the signature of a `cubic */</span></div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;  <span class="comment">/*    to&#39; function during outline walking or decomposition.              */</span></div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;  <span class="comment">/*    A `cubic to&#39; is emitted to indicate a third-order Bézier arc.      */</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;  <span class="comment">/*    control1 :: A pointer to the first Bézier control point.           */</span></div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;  <span class="comment">/*    control2 :: A pointer to the second Bézier control point.          */</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;  <span class="comment">/*    to       :: A pointer to the target end point.                     */</span></div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;  <span class="comment">/*    user     :: A typeless pointer which is passed from the caller of  */</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;  <span class="comment">/*                the decomposition function.                            */</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;  <span class="comment">/*    Error code.  0~means success.                                      */</span></div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;  (*FT_Outline_CubicToFunc)( <span class="keyword">const</span> <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  control1,</div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  control2,</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;                             <span class="keyword">const</span> <a class="code" href="structFT__Vector__.php">FT_Vector</a>*  to,</div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;                             <span class="keywordtype">void</span>*             user );</div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;<span class="preprocessor">#define FT_Outline_CubicTo_Func  FT_Outline_CubicToFunc</span></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;  <span class="comment">/*    FT_Outline_Funcs                                                   */</span></div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;  <span class="comment">/*    A structure to hold various function pointers used during outline  */</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;  <span class="comment">/*    decomposition in order to emit segments, conic, and cubic Béziers. */</span></div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;  <span class="comment">/*    move_to  :: The `move to&#39; emitter.                                 */</span></div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;  <span class="comment">/*    line_to  :: The segment emitter.                                   */</span></div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;  <span class="comment">/*    conic_to :: The second-order Bézier arc emitter.                   */</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;  <span class="comment">/*    cubic_to :: The third-order Bézier arc emitter.                    */</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;  <span class="comment">/*    shift    :: The shift that is applied to coordinates before they   */</span></div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  <span class="comment">/*                are sent to the emitter.                               */</span></div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;  <span class="comment">/*    delta    :: The delta that is applied to coordinates before they   */</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;  <span class="comment">/*                are sent to the emitter, but after the shift.          */</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;  <span class="comment">/*    The point coordinates sent to the emitters are the transformed     */</span></div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;  <span class="comment">/*    version of the original coordinates (this is important for high    */</span></div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;  <span class="comment">/*    accuracy during scan-conversion).  The transformation is simple:   */</span></div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;  <span class="comment">/*    {                                                                  */</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;  <span class="comment">/*      x&#39; = (x &lt;&lt; shift) - delta                                        */</span></div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;  <span class="comment">/*      y&#39; = (x &lt;&lt; shift) - delta                                        */</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;  <span class="comment">/*    }                                                                  */</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;  <span class="comment">/*    Set the values of `shift&#39; and `delta&#39; to~0 to get the original     */</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;  <span class="comment">/*    point coordinates.                                                 */</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00691"></a><span class="lineno"><a class="code" href="structFT__Outline__Funcs__.php">  691</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__Outline__Funcs__.php">FT_Outline_Funcs_</a></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;  {</div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;    FT_Outline_MoveToFunc   move_to;</div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;    FT_Outline_LineToFunc   line_to;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;    FT_Outline_ConicToFunc  conic_to;</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;    FT_Outline_CubicToFunc  cubic_to;</div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;</div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;    <span class="keywordtype">int</span>                     shift;</div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;    FT_Pos                  delta;</div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;</div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;  } <a class="code" href="structFT__Outline__Funcs__.php">FT_Outline_Funcs</a>;</div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;</div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;</div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;  <span class="comment">/* &lt;Section&gt;                                                             */</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;  <span class="comment">/*    basic_types                                                        */</span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;  <span class="comment">/* &lt;Macro&gt;                                                               */</span></div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;  <span class="comment">/*    FT_IMAGE_TAG                                                       */</span></div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;  <span class="comment">/*    This macro converts four-letter tags to an unsigned long type.     */</span></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;  <span class="comment">/*    Since many 16-bit compilers don&#39;t like 32-bit enumerations, you    */</span></div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;  <span class="comment">/*    should redefine this macro in case of problems to something like   */</span></div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;  <span class="comment">/*    this:                                                              */</span></div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;  <span class="comment">/*    {                                                                  */</span></div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;  <span class="comment">/*      #define FT_IMAGE_TAG( value, _x1, _x2, _x3, _x4 )  value         */</span></div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;  <span class="comment">/*    }                                                                  */</span></div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;  <span class="comment">/*    to get a simple enumeration without assigning special numbers.     */</span></div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;<span class="preprocessor">#ifndef FT_IMAGE_TAG</span></div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_IMAGE_TAG( value, _x1, _x2, _x3, _x4 )  \</span></div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="preprocessor">          value = ( ( (unsigned long)_x1 &lt;&lt; 24 ) | \</span></div>
<div class="line"><a name="l00734"></a><span class="lineno">  734</span>&#160;<span class="preprocessor">                    ( (unsigned long)_x2 &lt;&lt; 16 ) | \</span></div>
<div class="line"><a name="l00735"></a><span class="lineno">  735</span>&#160;<span class="preprocessor">                    ( (unsigned long)_x3 &lt;&lt; 8  ) | \</span></div>
<div class="line"><a name="l00736"></a><span class="lineno">  736</span>&#160;<span class="preprocessor">                      (unsigned long)_x4         )</span></div>
<div class="line"><a name="l00737"></a><span class="lineno">  737</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* FT_IMAGE_TAG */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00738"></a><span class="lineno">  738</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00739"></a><span class="lineno">  739</span>&#160;</div>
<div class="line"><a name="l00740"></a><span class="lineno">  740</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00741"></a><span class="lineno">  741</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;  <span class="comment">/* &lt;Enum&gt;                                                                */</span></div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160;  <span class="comment">/*    FT_Glyph_Format                                                    */</span></div>
<div class="line"><a name="l00744"></a><span class="lineno">  744</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00745"></a><span class="lineno">  745</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00746"></a><span class="lineno">  746</span>&#160;  <span class="comment">/*    An enumeration type used to describe the format of a given glyph   */</span></div>
<div class="line"><a name="l00747"></a><span class="lineno">  747</span>&#160;  <span class="comment">/*    image.  Note that this version of FreeType only supports two image */</span></div>
<div class="line"><a name="l00748"></a><span class="lineno">  748</span>&#160;  <span class="comment">/*    formats, even though future font drivers will be able to register  */</span></div>
<div class="line"><a name="l00749"></a><span class="lineno">  749</span>&#160;  <span class="comment">/*    their own format.                                                  */</span></div>
<div class="line"><a name="l00750"></a><span class="lineno">  750</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00751"></a><span class="lineno">  751</span>&#160;  <span class="comment">/* &lt;Values&gt;                                                              */</span></div>
<div class="line"><a name="l00752"></a><span class="lineno">  752</span>&#160;  <span class="comment">/*    FT_GLYPH_FORMAT_NONE ::                                            */</span></div>
<div class="line"><a name="l00753"></a><span class="lineno">  753</span>&#160;  <span class="comment">/*      The value~0 is reserved.                                         */</span></div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;  <span class="comment">/*    FT_GLYPH_FORMAT_COMPOSITE ::                                       */</span></div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;  <span class="comment">/*      The glyph image is a composite of several other images.  This    */</span></div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160;  <span class="comment">/*      format is _only_ used with @FT_LOAD_NO_RECURSE, and is used to   */</span></div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;  <span class="comment">/*      report compound glyphs (like accented characters).               */</span></div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;  <span class="comment">/*    FT_GLYPH_FORMAT_BITMAP ::                                          */</span></div>
<div class="line"><a name="l00761"></a><span class="lineno">  761</span>&#160;  <span class="comment">/*      The glyph image is a bitmap, and can be described as an          */</span></div>
<div class="line"><a name="l00762"></a><span class="lineno">  762</span>&#160;  <span class="comment">/*      @FT_Bitmap.  You generally need to access the `bitmap&#39; field of  */</span></div>
<div class="line"><a name="l00763"></a><span class="lineno">  763</span>&#160;  <span class="comment">/*      the @FT_GlyphSlotRec structure to read it.                       */</span></div>
<div class="line"><a name="l00764"></a><span class="lineno">  764</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00765"></a><span class="lineno">  765</span>&#160;  <span class="comment">/*    FT_GLYPH_FORMAT_OUTLINE ::                                         */</span></div>
<div class="line"><a name="l00766"></a><span class="lineno">  766</span>&#160;  <span class="comment">/*      The glyph image is a vectorial outline made of line segments     */</span></div>
<div class="line"><a name="l00767"></a><span class="lineno">  767</span>&#160;  <span class="comment">/*      and Bézier arcs; it can be described as an @FT_Outline; you      */</span></div>
<div class="line"><a name="l00768"></a><span class="lineno">  768</span>&#160;  <span class="comment">/*      generally want to access the `outline&#39; field of the              */</span></div>
<div class="line"><a name="l00769"></a><span class="lineno">  769</span>&#160;  <span class="comment">/*      @FT_GlyphSlotRec structure to read it.                           */</span></div>
<div class="line"><a name="l00770"></a><span class="lineno">  770</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00771"></a><span class="lineno">  771</span>&#160;  <span class="comment">/*    FT_GLYPH_FORMAT_PLOTTER ::                                         */</span></div>
<div class="line"><a name="l00772"></a><span class="lineno">  772</span>&#160;  <span class="comment">/*      The glyph image is a vectorial path with no inside and outside   */</span></div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;  <span class="comment">/*      contours.  Some Type~1 fonts, like those in the Hershey family,  */</span></div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;  <span class="comment">/*      contain glyphs in this format.  These are described as           */</span></div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160;  <span class="comment">/*      @FT_Outline, but FreeType isn&#39;t currently capable of rendering   */</span></div>
<div class="line"><a name="l00776"></a><span class="lineno">  776</span>&#160;  <span class="comment">/*      them correctly.                                                  */</span></div>
<div class="line"><a name="l00777"></a><span class="lineno">  777</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00778"></a><span class="lineno">  778</span>&#160;  <span class="keyword">typedef</span> <span class="keyword">enum</span>  FT_Glyph_Format_</div>
<div class="line"><a name="l00779"></a><span class="lineno">  779</span>&#160;  {</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160;    FT_IMAGE_TAG( FT_GLYPH_FORMAT_NONE, 0, 0, 0, 0 ),</div>
<div class="line"><a name="l00781"></a><span class="lineno">  781</span>&#160;</div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;    FT_IMAGE_TAG( FT_GLYPH_FORMAT_COMPOSITE, <span class="charliteral">&#39;c&#39;</span>, <span class="charliteral">&#39;o&#39;</span>, <span class="charliteral">&#39;m&#39;</span>, <span class="charliteral">&#39;p&#39;</span> ),</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160;    FT_IMAGE_TAG( FT_GLYPH_FORMAT_BITMAP,    <span class="charliteral">&#39;b&#39;</span>, <span class="charliteral">&#39;i&#39;</span>, <span class="charliteral">&#39;t&#39;</span>, <span class="charliteral">&#39;s&#39;</span> ),</div>
<div class="line"><a name="l00784"></a><span class="lineno">  784</span>&#160;    FT_IMAGE_TAG( FT_GLYPH_FORMAT_OUTLINE,   <span class="charliteral">&#39;o&#39;</span>, <span class="charliteral">&#39;u&#39;</span>, <span class="charliteral">&#39;t&#39;</span>, <span class="charliteral">&#39;l&#39;</span> ),</div>
<div class="line"><a name="l00785"></a><span class="lineno">  785</span>&#160;    FT_IMAGE_TAG( FT_GLYPH_FORMAT_PLOTTER,   <span class="charliteral">&#39;p&#39;</span>, <span class="charliteral">&#39;l&#39;</span>, <span class="charliteral">&#39;o&#39;</span>, <span class="charliteral">&#39;t&#39;</span> )</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160;</div>
<div class="line"><a name="l00787"></a><span class="lineno">  787</span>&#160;  } FT_Glyph_Format;</div>
<div class="line"><a name="l00788"></a><span class="lineno">  788</span>&#160;</div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;</div>
<div class="line"><a name="l00790"></a><span class="lineno">  790</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00791"></a><span class="lineno">  791</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160;  <span class="comment">/* &lt;Enum&gt;                                                                */</span></div>
<div class="line"><a name="l00793"></a><span class="lineno">  793</span>&#160;  <span class="comment">/*    ft_glyph_format_xxx                                                */</span></div>
<div class="line"><a name="l00794"></a><span class="lineno">  794</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00796"></a><span class="lineno">  796</span>&#160;  <span class="comment">/*    A list of deprecated constants.  Use the corresponding             */</span></div>
<div class="line"><a name="l00797"></a><span class="lineno">  797</span>&#160;  <span class="comment">/*    @FT_Glyph_Format values instead.                                   */</span></div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00799"></a><span class="lineno">  799</span>&#160;  <span class="comment">/* &lt;Values&gt;                                                              */</span></div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;  <span class="comment">/*    ft_glyph_format_none      :: See @FT_GLYPH_FORMAT_NONE.            */</span></div>
<div class="line"><a name="l00801"></a><span class="lineno">  801</span>&#160;  <span class="comment">/*    ft_glyph_format_composite :: See @FT_GLYPH_FORMAT_COMPOSITE.       */</span></div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160;  <span class="comment">/*    ft_glyph_format_bitmap    :: See @FT_GLYPH_FORMAT_BITMAP.          */</span></div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;  <span class="comment">/*    ft_glyph_format_outline   :: See @FT_GLYPH_FORMAT_OUTLINE.         */</span></div>
<div class="line"><a name="l00804"></a><span class="lineno">  804</span>&#160;  <span class="comment">/*    ft_glyph_format_plotter   :: See @FT_GLYPH_FORMAT_PLOTTER.         */</span></div>
<div class="line"><a name="l00805"></a><span class="lineno">  805</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00806"></a><span class="lineno">  806</span>&#160;<span class="preprocessor">#define ft_glyph_format_none       FT_GLYPH_FORMAT_NONE</span></div>
<div class="line"><a name="l00807"></a><span class="lineno">  807</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_glyph_format_composite  FT_GLYPH_FORMAT_COMPOSITE</span></div>
<div class="line"><a name="l00808"></a><span class="lineno">  808</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_glyph_format_bitmap     FT_GLYPH_FORMAT_BITMAP</span></div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_glyph_format_outline    FT_GLYPH_FORMAT_OUTLINE</span></div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_glyph_format_plotter    FT_GLYPH_FORMAT_PLOTTER</span></div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;  <span class="comment">/*****                                                               *****/</span></div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160;  <span class="comment">/*****            R A S T E R   D E F I N I T I O N S                *****/</span></div>
<div class="line"><a name="l00818"></a><span class="lineno">  818</span>&#160;  <span class="comment">/*****                                                               *****/</span></div>
<div class="line"><a name="l00819"></a><span class="lineno">  819</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00820"></a><span class="lineno">  820</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00821"></a><span class="lineno">  821</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00822"></a><span class="lineno">  822</span>&#160;</div>
<div class="line"><a name="l00823"></a><span class="lineno">  823</span>&#160;</div>
<div class="line"><a name="l00824"></a><span class="lineno">  824</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00825"></a><span class="lineno">  825</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00826"></a><span class="lineno">  826</span>&#160;  <span class="comment">/* A raster is a scan converter, in charge of rendering an outline into  */</span></div>
<div class="line"><a name="l00827"></a><span class="lineno">  827</span>&#160;  <span class="comment">/* a a bitmap.  This section contains the public API for rasters.        */</span></div>
<div class="line"><a name="l00828"></a><span class="lineno">  828</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00829"></a><span class="lineno">  829</span>&#160;  <span class="comment">/* Note that in FreeType 2, all rasters are now encapsulated within      */</span></div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;  <span class="comment">/* specific modules called `renderers&#39;.  See `freetype/ftrender.h&#39; for   */</span></div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;  <span class="comment">/* more details on renderers.                                            */</span></div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;</div>
<div class="line"><a name="l00836"></a><span class="lineno">  836</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00837"></a><span class="lineno">  837</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00838"></a><span class="lineno">  838</span>&#160;  <span class="comment">/* &lt;Section&gt;                                                             */</span></div>
<div class="line"><a name="l00839"></a><span class="lineno">  839</span>&#160;  <span class="comment">/*    raster                                                             */</span></div>
<div class="line"><a name="l00840"></a><span class="lineno">  840</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00841"></a><span class="lineno">  841</span>&#160;  <span class="comment">/* &lt;Title&gt;                                                               */</span></div>
<div class="line"><a name="l00842"></a><span class="lineno">  842</span>&#160;  <span class="comment">/*    Scanline Converter                                                 */</span></div>
<div class="line"><a name="l00843"></a><span class="lineno">  843</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00844"></a><span class="lineno">  844</span>&#160;  <span class="comment">/* &lt;Abstract&gt;                                                            */</span></div>
<div class="line"><a name="l00845"></a><span class="lineno">  845</span>&#160;  <span class="comment">/*    How vectorial outlines are converted into bitmaps and pixmaps.     */</span></div>
<div class="line"><a name="l00846"></a><span class="lineno">  846</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00847"></a><span class="lineno">  847</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;  <span class="comment">/*    This section contains technical definitions.                       */</span></div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00851"></a><span class="lineno">  851</span>&#160;</div>
<div class="line"><a name="l00852"></a><span class="lineno">  852</span>&#160;</div>
<div class="line"><a name="l00853"></a><span class="lineno">  853</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00854"></a><span class="lineno">  854</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00855"></a><span class="lineno">  855</span>&#160;  <span class="comment">/* &lt;Type&gt;                                                                */</span></div>
<div class="line"><a name="l00856"></a><span class="lineno">  856</span>&#160;  <span class="comment">/*    FT_Raster                                                          */</span></div>
<div class="line"><a name="l00857"></a><span class="lineno">  857</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00858"></a><span class="lineno">  858</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00859"></a><span class="lineno">  859</span>&#160;  <span class="comment">/*    A handle (pointer) to a raster object.  Each object can be used    */</span></div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;  <span class="comment">/*    independently to convert an outline into a bitmap or pixmap.       */</span></div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00862"></a><span class="lineno">  862</span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct </span>FT_RasterRec_*  FT_Raster;</div>
<div class="line"><a name="l00863"></a><span class="lineno">  863</span>&#160;</div>
<div class="line"><a name="l00864"></a><span class="lineno">  864</span>&#160;</div>
<div class="line"><a name="l00865"></a><span class="lineno">  865</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00866"></a><span class="lineno">  866</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00867"></a><span class="lineno">  867</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l00868"></a><span class="lineno">  868</span>&#160;  <span class="comment">/*    FT_Span                                                            */</span></div>
<div class="line"><a name="l00869"></a><span class="lineno">  869</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00870"></a><span class="lineno">  870</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00871"></a><span class="lineno">  871</span>&#160;  <span class="comment">/*    A structure used to model a single span of gray (or black) pixels  */</span></div>
<div class="line"><a name="l00872"></a><span class="lineno">  872</span>&#160;  <span class="comment">/*    when rendering a monochrome or anti-aliased bitmap.                */</span></div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;  <span class="comment">/*    x        :: The span&#39;s horizontal start position.                  */</span></div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00877"></a><span class="lineno">  877</span>&#160;  <span class="comment">/*    len      :: The span&#39;s length in pixels.                           */</span></div>
<div class="line"><a name="l00878"></a><span class="lineno">  878</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00879"></a><span class="lineno">  879</span>&#160;  <span class="comment">/*    coverage :: The span color/coverage, ranging from 0 (background)   */</span></div>
<div class="line"><a name="l00880"></a><span class="lineno">  880</span>&#160;  <span class="comment">/*                to 255 (foreground).  Only used for anti-aliased       */</span></div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160;  <span class="comment">/*                rendering.                                             */</span></div>
<div class="line"><a name="l00882"></a><span class="lineno">  882</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00883"></a><span class="lineno">  883</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00884"></a><span class="lineno">  884</span>&#160;  <span class="comment">/*    This structure is used by the span drawing callback type named     */</span></div>
<div class="line"><a name="l00885"></a><span class="lineno">  885</span>&#160;  <span class="comment">/*    @FT_SpanFunc which takes the y~coordinate of the span as a         */</span></div>
<div class="line"><a name="l00886"></a><span class="lineno">  886</span>&#160;  <span class="comment">/*    a parameter.                                                       */</span></div>
<div class="line"><a name="l00887"></a><span class="lineno">  887</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00888"></a><span class="lineno">  888</span>&#160;  <span class="comment">/*    The coverage value is always between 0 and 255.  If you want less  */</span></div>
<div class="line"><a name="l00889"></a><span class="lineno">  889</span>&#160;  <span class="comment">/*    gray values, the callback function has to reduce them.             */</span></div>
<div class="line"><a name="l00890"></a><span class="lineno">  890</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00891"></a><span class="lineno"><a class="code" href="structFT__Span__.php">  891</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__Span__.php">FT_Span_</a></div>
<div class="line"><a name="l00892"></a><span class="lineno">  892</span>&#160;  {</div>
<div class="line"><a name="l00893"></a><span class="lineno">  893</span>&#160;    <span class="keywordtype">short</span>           x;</div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>  len;</div>
<div class="line"><a name="l00895"></a><span class="lineno">  895</span>&#160;    <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>   coverage;</div>
<div class="line"><a name="l00896"></a><span class="lineno">  896</span>&#160;</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160;  } <a class="code" href="structFT__Span__.php">FT_Span</a>;</div>
<div class="line"><a name="l00898"></a><span class="lineno">  898</span>&#160;</div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;</div>
<div class="line"><a name="l00900"></a><span class="lineno">  900</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160;  <span class="comment">/*    FT_SpanFunc                                                        */</span></div>
<div class="line"><a name="l00904"></a><span class="lineno">  904</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00905"></a><span class="lineno">  905</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00906"></a><span class="lineno">  906</span>&#160;  <span class="comment">/*    A function used as a call-back by the anti-aliased renderer in     */</span></div>
<div class="line"><a name="l00907"></a><span class="lineno">  907</span>&#160;  <span class="comment">/*    order to let client applications draw themselves the gray pixel    */</span></div>
<div class="line"><a name="l00908"></a><span class="lineno">  908</span>&#160;  <span class="comment">/*    spans on each scan line.                                           */</span></div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;  <span class="comment">/*    y     :: The scanline&#39;s y~coordinate.                              */</span></div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;  <span class="comment">/*    count :: The number of spans to draw on this scanline.             */</span></div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;  <span class="comment">/*    spans :: A table of `count&#39; spans to draw on the scanline.         */</span></div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;  <span class="comment">/*    user  :: User-supplied data that is passed to the callback.        */</span></div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00919"></a><span class="lineno">  919</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l00920"></a><span class="lineno">  920</span>&#160;  <span class="comment">/*    This callback allows client applications to directly render the    */</span></div>
<div class="line"><a name="l00921"></a><span class="lineno">  921</span>&#160;  <span class="comment">/*    gray spans of the anti-aliased bitmap to any kind of surfaces.     */</span></div>
<div class="line"><a name="l00922"></a><span class="lineno">  922</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00923"></a><span class="lineno">  923</span>&#160;  <span class="comment">/*    This can be used to write anti-aliased outlines directly to a      */</span></div>
<div class="line"><a name="l00924"></a><span class="lineno">  924</span>&#160;  <span class="comment">/*    given background bitmap, and even perform translucency.            */</span></div>
<div class="line"><a name="l00925"></a><span class="lineno">  925</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00926"></a><span class="lineno">  926</span>&#160;  <span class="comment">/*    Note that the `count&#39; field cannot be greater than a fixed value   */</span></div>
<div class="line"><a name="l00927"></a><span class="lineno">  927</span>&#160;  <span class="comment">/*    defined by the `FT_MAX_GRAY_SPANS&#39; configuration macro in          */</span></div>
<div class="line"><a name="l00928"></a><span class="lineno">  928</span>&#160;  <span class="comment">/*    `ftoption.h&#39;.  By default, this value is set to~32, which means    */</span></div>
<div class="line"><a name="l00929"></a><span class="lineno">  929</span>&#160;  <span class="comment">/*    that if there are more than 32~spans on a given scanline, the      */</span></div>
<div class="line"><a name="l00930"></a><span class="lineno">  930</span>&#160;  <span class="comment">/*    callback is called several times with the same `y&#39; parameter in    */</span></div>
<div class="line"><a name="l00931"></a><span class="lineno">  931</span>&#160;  <span class="comment">/*    order to draw all callbacks.                                       */</span></div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;  <span class="comment">/*    Otherwise, the callback is only called once per scan-line, and     */</span></div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;  <span class="comment">/*    only for those scanlines that do have `gray&#39; pixels on them.       */</span></div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;  <span class="keyword">typedef</span> void</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;  (*FT_SpanFunc)( <span class="keywordtype">int</span>             y,</div>
<div class="line"><a name="l00938"></a><span class="lineno">  938</span>&#160;                  <span class="keywordtype">int</span>             count,</div>
<div class="line"><a name="l00939"></a><span class="lineno">  939</span>&#160;                  <span class="keyword">const</span> <a class="code" href="structFT__Span__.php">FT_Span</a>*  spans,</div>
<div class="line"><a name="l00940"></a><span class="lineno">  940</span>&#160;                  <span class="keywordtype">void</span>*           user );</div>
<div class="line"><a name="l00941"></a><span class="lineno">  941</span>&#160;</div>
<div class="line"><a name="l00942"></a><span class="lineno">  942</span>&#160;<span class="preprocessor">#define FT_Raster_Span_Func  FT_SpanFunc</span></div>
<div class="line"><a name="l00943"></a><span class="lineno">  943</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;  <span class="comment">/*    FT_Raster_BitTest_Func                                             */</span></div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00951"></a><span class="lineno">  951</span>&#160;  <span class="comment">/*    THIS TYPE IS DEPRECATED.  DO NOT USE IT.                           */</span></div>
<div class="line"><a name="l00952"></a><span class="lineno">  952</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160;  <span class="comment">/*    A function used as a call-back by the monochrome scan-converter    */</span></div>
<div class="line"><a name="l00954"></a><span class="lineno">  954</span>&#160;  <span class="comment">/*    to test whether a given target pixel is already set to the drawing */</span></div>
<div class="line"><a name="l00955"></a><span class="lineno">  955</span>&#160;  <span class="comment">/*    `color&#39;.  These tests are crucial to implement drop-out control    */</span></div>
<div class="line"><a name="l00956"></a><span class="lineno">  956</span>&#160;  <span class="comment">/*    per-se the TrueType spec.                                          */</span></div>
<div class="line"><a name="l00957"></a><span class="lineno">  957</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l00959"></a><span class="lineno">  959</span>&#160;  <span class="comment">/*    y     :: The pixel&#39;s y~coordinate.                                 */</span></div>
<div class="line"><a name="l00960"></a><span class="lineno">  960</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00961"></a><span class="lineno">  961</span>&#160;  <span class="comment">/*    x     :: The pixel&#39;s x~coordinate.                                 */</span></div>
<div class="line"><a name="l00962"></a><span class="lineno">  962</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160;  <span class="comment">/*    user  :: User-supplied data that is passed to the callback.        */</span></div>
<div class="line"><a name="l00964"></a><span class="lineno">  964</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00965"></a><span class="lineno">  965</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l00966"></a><span class="lineno">  966</span>&#160;  <span class="comment">/*   1~if the pixel is `set&#39;, 0~otherwise.                               */</span></div>
<div class="line"><a name="l00967"></a><span class="lineno">  967</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l00969"></a><span class="lineno">  969</span>&#160;  (*FT_Raster_BitTest_Func)( <span class="keywordtype">int</span>    y,</div>
<div class="line"><a name="l00970"></a><span class="lineno">  970</span>&#160;                             <span class="keywordtype">int</span>    x,</div>
<div class="line"><a name="l00971"></a><span class="lineno">  971</span>&#160;                             <span class="keywordtype">void</span>*  user );</div>
<div class="line"><a name="l00972"></a><span class="lineno">  972</span>&#160;</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160;</div>
<div class="line"><a name="l00974"></a><span class="lineno">  974</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l00977"></a><span class="lineno">  977</span>&#160;  <span class="comment">/*    FT_Raster_BitSet_Func                                              */</span></div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;  <span class="comment">/*    THIS TYPE IS DEPRECATED.  DO NOT USE IT.                           */</span></div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;  <span class="comment">/*    A function used as a call-back by the monochrome scan-converter    */</span></div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;  <span class="comment">/*    to set an individual target pixel.  This is crucial to implement   */</span></div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;  <span class="comment">/*    drop-out control according to the TrueType specification.          */</span></div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;  <span class="comment">/*    y     :: The pixel&#39;s y~coordinate.                                 */</span></div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;  <span class="comment">/*    x     :: The pixel&#39;s x~coordinate.                                 */</span></div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160;  <span class="comment">/*    user  :: User-supplied data that is passed to the callback.        */</span></div>
<div class="line"><a name="l00992"></a><span class="lineno">  992</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00993"></a><span class="lineno">  993</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l00994"></a><span class="lineno">  994</span>&#160;  <span class="comment">/*    1~if the pixel is `set&#39;, 0~otherwise.                              */</span></div>
<div class="line"><a name="l00995"></a><span class="lineno">  995</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00996"></a><span class="lineno">  996</span>&#160;  <span class="keyword">typedef</span> void</div>
<div class="line"><a name="l00997"></a><span class="lineno">  997</span>&#160;  (*FT_Raster_BitSet_Func)( <span class="keywordtype">int</span>    y,</div>
<div class="line"><a name="l00998"></a><span class="lineno">  998</span>&#160;                            <span class="keywordtype">int</span>    x,</div>
<div class="line"><a name="l00999"></a><span class="lineno">  999</span>&#160;                            <span class="keywordtype">void</span>*  user );</div>
<div class="line"><a name="l01000"></a><span class="lineno"> 1000</span>&#160;</div>
<div class="line"><a name="l01001"></a><span class="lineno"> 1001</span>&#160;</div>
<div class="line"><a name="l01002"></a><span class="lineno"> 1002</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01003"></a><span class="lineno"> 1003</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01004"></a><span class="lineno"> 1004</span>&#160;  <span class="comment">/* &lt;Enum&gt;                                                                */</span></div>
<div class="line"><a name="l01005"></a><span class="lineno"> 1005</span>&#160;  <span class="comment">/*    FT_RASTER_FLAG_XXX                                                 */</span></div>
<div class="line"><a name="l01006"></a><span class="lineno"> 1006</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01007"></a><span class="lineno"> 1007</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01008"></a><span class="lineno"> 1008</span>&#160;  <span class="comment">/*    A list of bit flag constants as used in the `flags&#39; field of a     */</span></div>
<div class="line"><a name="l01009"></a><span class="lineno"> 1009</span>&#160;  <span class="comment">/*    @FT_Raster_Params structure.                                       */</span></div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;  <span class="comment">/* &lt;Values&gt;                                                              */</span></div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;  <span class="comment">/*    FT_RASTER_FLAG_DEFAULT :: This value is 0.                         */</span></div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;  <span class="comment">/*    FT_RASTER_FLAG_AA      :: This flag is set to indicate that an     */</span></div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;  <span class="comment">/*                              anti-aliased glyph image should be       */</span></div>
<div class="line"><a name="l01016"></a><span class="lineno"> 1016</span>&#160;  <span class="comment">/*                              generated.  Otherwise, it will be        */</span></div>
<div class="line"><a name="l01017"></a><span class="lineno"> 1017</span>&#160;  <span class="comment">/*                              monochrome (1-bit).                      */</span></div>
<div class="line"><a name="l01018"></a><span class="lineno"> 1018</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01019"></a><span class="lineno"> 1019</span>&#160;  <span class="comment">/*    FT_RASTER_FLAG_DIRECT  :: This flag is set to indicate direct      */</span></div>
<div class="line"><a name="l01020"></a><span class="lineno"> 1020</span>&#160;  <span class="comment">/*                              rendering.  In this mode, client         */</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"> 1021</span>&#160;  <span class="comment">/*                              applications must provide their own span */</span></div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;  <span class="comment">/*                              callback.  This lets them directly       */</span></div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;  <span class="comment">/*                              draw or compose over an existing bitmap. */</span></div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;  <span class="comment">/*                              If this bit is not set, the target       */</span></div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;  <span class="comment">/*                              pixmap&#39;s buffer _must_ be zeroed before  */</span></div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;  <span class="comment">/*                              rendering.                               */</span></div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160;  <span class="comment">/*                              Note that for now, direct rendering is   */</span></div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;  <span class="comment">/*                              only possible with anti-aliased glyphs.  */</span></div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;  <span class="comment">/*    FT_RASTER_FLAG_CLIP    :: This flag is only used in direct         */</span></div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;  <span class="comment">/*                              rendering mode.  If set, the output will */</span></div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;  <span class="comment">/*                              be clipped to a box specified in the     */</span></div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160;  <span class="comment">/*                              `clip_box&#39; field of the                  */</span></div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;  <span class="comment">/*                              @FT_Raster_Params structure.             */</span></div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;  <span class="comment">/*                              Note that by default, the glyph bitmap   */</span></div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;  <span class="comment">/*                              is clipped to the target pixmap, except  */</span></div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;  <span class="comment">/*                              in direct rendering mode where all spans */</span></div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160;  <span class="comment">/*                              are generated if no clipping box is set. */</span></div>
<div class="line"><a name="l01041"></a><span class="lineno"> 1041</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01042"></a><span class="lineno"> 1042</span>&#160;<span class="preprocessor">#define FT_RASTER_FLAG_DEFAULT  0x0</span></div>
<div class="line"><a name="l01043"></a><span class="lineno"> 1043</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_RASTER_FLAG_AA       0x1</span></div>
<div class="line"><a name="l01044"></a><span class="lineno"> 1044</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_RASTER_FLAG_DIRECT   0x2</span></div>
<div class="line"><a name="l01045"></a><span class="lineno"> 1045</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_RASTER_FLAG_CLIP     0x4</span></div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160;  <span class="comment">/* deprecated */</span></div>
<div class="line"><a name="l01048"></a><span class="lineno"> 1048</span>&#160;<span class="preprocessor">#define ft_raster_flag_default  FT_RASTER_FLAG_DEFAULT</span></div>
<div class="line"><a name="l01049"></a><span class="lineno"> 1049</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_raster_flag_aa       FT_RASTER_FLAG_AA</span></div>
<div class="line"><a name="l01050"></a><span class="lineno"> 1050</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_raster_flag_direct   FT_RASTER_FLAG_DIRECT</span></div>
<div class="line"><a name="l01051"></a><span class="lineno"> 1051</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ft_raster_flag_clip     FT_RASTER_FLAG_CLIP</span></div>
<div class="line"><a name="l01052"></a><span class="lineno"> 1052</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01053"></a><span class="lineno"> 1053</span>&#160;</div>
<div class="line"><a name="l01054"></a><span class="lineno"> 1054</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01055"></a><span class="lineno"> 1055</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;  <span class="comment">/*    FT_Raster_Params                                                   */</span></div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01060"></a><span class="lineno"> 1060</span>&#160;  <span class="comment">/*    A structure to hold the arguments used by a raster&#39;s render        */</span></div>
<div class="line"><a name="l01061"></a><span class="lineno"> 1061</span>&#160;  <span class="comment">/*    function.                                                          */</span></div>
<div class="line"><a name="l01062"></a><span class="lineno"> 1062</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01063"></a><span class="lineno"> 1063</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l01064"></a><span class="lineno"> 1064</span>&#160;  <span class="comment">/*    target      :: The target bitmap.                                  */</span></div>
<div class="line"><a name="l01065"></a><span class="lineno"> 1065</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01066"></a><span class="lineno"> 1066</span>&#160;  <span class="comment">/*    source      :: A pointer to the source glyph image (e.g., an       */</span></div>
<div class="line"><a name="l01067"></a><span class="lineno"> 1067</span>&#160;  <span class="comment">/*                   @FT_Outline).                                       */</span></div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;  <span class="comment">/*    flags       :: The rendering flags.                                */</span></div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160;  <span class="comment">/*    gray_spans  :: The gray span drawing callback.                     */</span></div>
<div class="line"><a name="l01072"></a><span class="lineno"> 1072</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01073"></a><span class="lineno"> 1073</span>&#160;  <span class="comment">/*    black_spans :: The black span drawing callback.  UNIMPLEMENTED!    */</span></div>
<div class="line"><a name="l01074"></a><span class="lineno"> 1074</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01075"></a><span class="lineno"> 1075</span>&#160;  <span class="comment">/*    bit_test    :: The bit test callback.  UNIMPLEMENTED!              */</span></div>
<div class="line"><a name="l01076"></a><span class="lineno"> 1076</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;  <span class="comment">/*    bit_set     :: The bit set callback.  UNIMPLEMENTED!               */</span></div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01079"></a><span class="lineno"> 1079</span>&#160;  <span class="comment">/*    user        :: User-supplied data that is passed to each drawing   */</span></div>
<div class="line"><a name="l01080"></a><span class="lineno"> 1080</span>&#160;  <span class="comment">/*                   callback.                                           */</span></div>
<div class="line"><a name="l01081"></a><span class="lineno"> 1081</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01082"></a><span class="lineno"> 1082</span>&#160;  <span class="comment">/*    clip_box    :: An optional clipping box.  It is only used in       */</span></div>
<div class="line"><a name="l01083"></a><span class="lineno"> 1083</span>&#160;  <span class="comment">/*                   direct rendering mode.  Note that coordinates here  */</span></div>
<div class="line"><a name="l01084"></a><span class="lineno"> 1084</span>&#160;  <span class="comment">/*                   should be expressed in _integer_ pixels (and not in */</span></div>
<div class="line"><a name="l01085"></a><span class="lineno"> 1085</span>&#160;  <span class="comment">/*                   26.6 fixed-point units).                            */</span></div>
<div class="line"><a name="l01086"></a><span class="lineno"> 1086</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01087"></a><span class="lineno"> 1087</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l01088"></a><span class="lineno"> 1088</span>&#160;  <span class="comment">/*    An anti-aliased glyph bitmap is drawn if the @FT_RASTER_FLAG_AA    */</span></div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;  <span class="comment">/*    bit flag is set in the `flags&#39; field, otherwise a monochrome       */</span></div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;  <span class="comment">/*    bitmap is generated.                                               */</span></div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01092"></a><span class="lineno"> 1092</span>&#160;  <span class="comment">/*    If the @FT_RASTER_FLAG_DIRECT bit flag is set in `flags&#39;, the      */</span></div>
<div class="line"><a name="l01093"></a><span class="lineno"> 1093</span>&#160;  <span class="comment">/*    raster will call the `gray_spans&#39; callback to draw gray pixel      */</span></div>
<div class="line"><a name="l01094"></a><span class="lineno"> 1094</span>&#160;  <span class="comment">/*    spans, in the case of an aa glyph bitmap, it will call             */</span></div>
<div class="line"><a name="l01095"></a><span class="lineno"> 1095</span>&#160;  <span class="comment">/*    `black_spans&#39;, and `bit_test&#39; and `bit_set&#39; in the case of a       */</span></div>
<div class="line"><a name="l01096"></a><span class="lineno"> 1096</span>&#160;  <span class="comment">/*    monochrome bitmap.  This allows direct composition over a          */</span></div>
<div class="line"><a name="l01097"></a><span class="lineno"> 1097</span>&#160;  <span class="comment">/*    pre-existing bitmap through user-provided callbacks to perform the */</span></div>
<div class="line"><a name="l01098"></a><span class="lineno"> 1098</span>&#160;  <span class="comment">/*    span drawing/composition.                                          */</span></div>
<div class="line"><a name="l01099"></a><span class="lineno"> 1099</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01100"></a><span class="lineno"> 1100</span>&#160;  <span class="comment">/*    Note that the `bit_test&#39; and `bit_set&#39; callbacks are required when */</span></div>
<div class="line"><a name="l01101"></a><span class="lineno"> 1101</span>&#160;  <span class="comment">/*    rendering a monochrome bitmap, as they are crucial to implement    */</span></div>
<div class="line"><a name="l01102"></a><span class="lineno"> 1102</span>&#160;  <span class="comment">/*    correct drop-out control as defined in the TrueType specification. */</span></div>
<div class="line"><a name="l01103"></a><span class="lineno"> 1103</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01104"></a><span class="lineno"><a class="code" href="structFT__Raster__Params__.php"> 1104</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__Raster__Params__.php">FT_Raster_Params_</a></div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;  {</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;    <span class="keyword">const</span> <a class="code" href="structFT__Bitmap__.php">FT_Bitmap</a>*        target;</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">void</span>*             source;</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160;    <span class="keywordtype">int</span>                     flags;</div>
<div class="line"><a name="l01109"></a><span class="lineno"> 1109</span>&#160;    FT_SpanFunc             gray_spans;</div>
<div class="line"><a name="l01110"></a><span class="lineno"> 1110</span>&#160;    FT_SpanFunc             black_spans;  <span class="comment">/* doesn&#39;t work! */</span></div>
<div class="line"><a name="l01111"></a><span class="lineno"> 1111</span>&#160;    FT_Raster_BitTest_Func  bit_test;     <span class="comment">/* doesn&#39;t work! */</span></div>
<div class="line"><a name="l01112"></a><span class="lineno"> 1112</span>&#160;    FT_Raster_BitSet_Func   bit_set;      <span class="comment">/* doesn&#39;t work! */</span></div>
<div class="line"><a name="l01113"></a><span class="lineno"> 1113</span>&#160;    <span class="keywordtype">void</span>*                   user;</div>
<div class="line"><a name="l01114"></a><span class="lineno"> 1114</span>&#160;    <a class="code" href="structFT__BBox__.php">FT_BBox</a>                 clip_box;</div>
<div class="line"><a name="l01115"></a><span class="lineno"> 1115</span>&#160;</div>
<div class="line"><a name="l01116"></a><span class="lineno"> 1116</span>&#160;  } <a class="code" href="structFT__Raster__Params__.php">FT_Raster_Params</a>;</div>
<div class="line"><a name="l01117"></a><span class="lineno"> 1117</span>&#160;</div>
<div class="line"><a name="l01118"></a><span class="lineno"> 1118</span>&#160;</div>
<div class="line"><a name="l01119"></a><span class="lineno"> 1119</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01120"></a><span class="lineno"> 1120</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;  <span class="comment">/*    FT_Raster_NewFunc                                                  */</span></div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;  <span class="comment">/*    A function used to create a new raster object.                     */</span></div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;  <span class="comment">/*    memory :: A handle to the memory allocator.                        */</span></div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;  <span class="comment">/* &lt;Output&gt;                                                              */</span></div>
<div class="line"><a name="l01131"></a><span class="lineno"> 1131</span>&#160;  <span class="comment">/*    raster :: A handle to the new raster object.                       */</span></div>
<div class="line"><a name="l01132"></a><span class="lineno"> 1132</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01133"></a><span class="lineno"> 1133</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l01134"></a><span class="lineno"> 1134</span>&#160;  <span class="comment">/*    Error code.  0~means success.                                      */</span></div>
<div class="line"><a name="l01135"></a><span class="lineno"> 1135</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01136"></a><span class="lineno"> 1136</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l01137"></a><span class="lineno"> 1137</span>&#160;  <span class="comment">/*    The `memory&#39; parameter is a typeless pointer in order to avoid     */</span></div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;  <span class="comment">/*    un-wanted dependencies on the rest of the FreeType code.  In       */</span></div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;  <span class="comment">/*    practice, it is an @FT_Memory object, i.e., a handle to the        */</span></div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160;  <span class="comment">/*    standard FreeType memory allocator.  However, this field can be    */</span></div>
<div class="line"><a name="l01141"></a><span class="lineno"> 1141</span>&#160;  <span class="comment">/*    completely ignored by a given raster implementation.               */</span></div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;  (*FT_Raster_NewFunc)( <span class="keywordtype">void</span>*       memory,</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;                        FT_Raster*  raster );</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;<span class="preprocessor">#define FT_Raster_New_Func  FT_Raster_NewFunc</span></div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;</div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;  <span class="comment">/*    FT_Raster_DoneFunc                                                 */</span></div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01155"></a><span class="lineno"> 1155</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01156"></a><span class="lineno"> 1156</span>&#160;  <span class="comment">/*    A function used to destroy a given raster object.                  */</span></div>
<div class="line"><a name="l01157"></a><span class="lineno"> 1157</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01158"></a><span class="lineno"> 1158</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l01159"></a><span class="lineno"> 1159</span>&#160;  <span class="comment">/*    raster :: A handle to the raster object.                           */</span></div>
<div class="line"><a name="l01160"></a><span class="lineno"> 1160</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01161"></a><span class="lineno"> 1161</span>&#160;  <span class="keyword">typedef</span> void</div>
<div class="line"><a name="l01162"></a><span class="lineno"> 1162</span>&#160;  (*FT_Raster_DoneFunc)( FT_Raster  raster );</div>
<div class="line"><a name="l01163"></a><span class="lineno"> 1163</span>&#160;</div>
<div class="line"><a name="l01164"></a><span class="lineno"> 1164</span>&#160;<span class="preprocessor">#define FT_Raster_Done_Func  FT_Raster_DoneFunc</span></div>
<div class="line"><a name="l01165"></a><span class="lineno"> 1165</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01166"></a><span class="lineno"> 1166</span>&#160;</div>
<div class="line"><a name="l01167"></a><span class="lineno"> 1167</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01168"></a><span class="lineno"> 1168</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01169"></a><span class="lineno"> 1169</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l01170"></a><span class="lineno"> 1170</span>&#160;  <span class="comment">/*    FT_Raster_ResetFunc                                                */</span></div>
<div class="line"><a name="l01171"></a><span class="lineno"> 1171</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01172"></a><span class="lineno"> 1172</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01173"></a><span class="lineno"> 1173</span>&#160;  <span class="comment">/*    FreeType provides an area of memory called the `render pool&#39;,      */</span></div>
<div class="line"><a name="l01174"></a><span class="lineno"> 1174</span>&#160;  <span class="comment">/*    available to all registered rasters.  This pool can be freely used */</span></div>
<div class="line"><a name="l01175"></a><span class="lineno"> 1175</span>&#160;  <span class="comment">/*    during a given scan-conversion but is shared by all rasters.  Its  */</span></div>
<div class="line"><a name="l01176"></a><span class="lineno"> 1176</span>&#160;  <span class="comment">/*    content is thus transient.                                         */</span></div>
<div class="line"><a name="l01177"></a><span class="lineno"> 1177</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01178"></a><span class="lineno"> 1178</span>&#160;  <span class="comment">/*    This function is called each time the render pool changes, or just */</span></div>
<div class="line"><a name="l01179"></a><span class="lineno"> 1179</span>&#160;  <span class="comment">/*    after a new raster object is created.                              */</span></div>
<div class="line"><a name="l01180"></a><span class="lineno"> 1180</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01181"></a><span class="lineno"> 1181</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l01182"></a><span class="lineno"> 1182</span>&#160;  <span class="comment">/*    raster    :: A handle to the new raster object.                    */</span></div>
<div class="line"><a name="l01183"></a><span class="lineno"> 1183</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01184"></a><span class="lineno"> 1184</span>&#160;  <span class="comment">/*    pool_base :: The address in memory of the render pool.             */</span></div>
<div class="line"><a name="l01185"></a><span class="lineno"> 1185</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;  <span class="comment">/*    pool_size :: The size in bytes of the render pool.                 */</span></div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;  <span class="comment">/*    Rasters can ignore the render pool and rely on dynamic memory      */</span></div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;  <span class="comment">/*    allocation if they want to (a handle to the memory allocator is    */</span></div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;  <span class="comment">/*    passed to the raster constructor).  However, this is not           */</span></div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;  <span class="comment">/*    recommended for efficiency purposes.                               */</span></div>
<div class="line"><a name="l01193"></a><span class="lineno"> 1193</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;  <span class="keyword">typedef</span> void</div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;  (*FT_Raster_ResetFunc)( FT_Raster       raster,</div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;                          <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>*  pool_base,</div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;                          <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>   pool_size );</div>
<div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160;</div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;<span class="preprocessor">#define FT_Raster_Reset_Func  FT_Raster_ResetFunc</span></div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160;  <span class="comment">/*    FT_Raster_SetModeFunc                                              */</span></div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;  <span class="comment">/*    This function is a generic facility to change modes or attributes  */</span></div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;  <span class="comment">/*    in a given raster.  This can be used for debugging purposes, or    */</span></div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;  <span class="comment">/*    simply to allow implementation-specific `features&#39; in a given      */</span></div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;  <span class="comment">/*    raster module.                                                     */</span></div>
<div class="line"><a name="l01212"></a><span class="lineno"> 1212</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01213"></a><span class="lineno"> 1213</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;  <span class="comment">/*    raster :: A handle to the new raster object.                       */</span></div>
<div class="line"><a name="l01215"></a><span class="lineno"> 1215</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01216"></a><span class="lineno"> 1216</span>&#160;  <span class="comment">/*    mode   :: A 4-byte tag used to name the mode or property.          */</span></div>
<div class="line"><a name="l01217"></a><span class="lineno"> 1217</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01218"></a><span class="lineno"> 1218</span>&#160;  <span class="comment">/*    args   :: A pointer to the new mode/property to use.               */</span></div>
<div class="line"><a name="l01219"></a><span class="lineno"> 1219</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01220"></a><span class="lineno"> 1220</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l01221"></a><span class="lineno"> 1221</span>&#160;  (*FT_Raster_SetModeFunc)( FT_Raster      raster,</div>
<div class="line"><a name="l01222"></a><span class="lineno"> 1222</span>&#160;                            <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span>  mode,</div>
<div class="line"><a name="l01223"></a><span class="lineno"> 1223</span>&#160;                            <span class="keywordtype">void</span>*          args );</div>
<div class="line"><a name="l01224"></a><span class="lineno"> 1224</span>&#160;</div>
<div class="line"><a name="l01225"></a><span class="lineno"> 1225</span>&#160;<span class="preprocessor">#define FT_Raster_Set_Mode_Func  FT_Raster_SetModeFunc</span></div>
<div class="line"><a name="l01226"></a><span class="lineno"> 1226</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01227"></a><span class="lineno"> 1227</span>&#160;</div>
<div class="line"><a name="l01228"></a><span class="lineno"> 1228</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01229"></a><span class="lineno"> 1229</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01230"></a><span class="lineno"> 1230</span>&#160;  <span class="comment">/* &lt;FuncType&gt;                                                            */</span></div>
<div class="line"><a name="l01231"></a><span class="lineno"> 1231</span>&#160;  <span class="comment">/*    FT_Raster_RenderFunc                                               */</span></div>
<div class="line"><a name="l01232"></a><span class="lineno"> 1232</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01233"></a><span class="lineno"> 1233</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01234"></a><span class="lineno"> 1234</span>&#160;  <span class="comment">/*    Invoke a given raster to scan-convert a given glyph image into a   */</span></div>
<div class="line"><a name="l01235"></a><span class="lineno"> 1235</span>&#160;  <span class="comment">/*    target bitmap.                                                     */</span></div>
<div class="line"><a name="l01236"></a><span class="lineno"> 1236</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01237"></a><span class="lineno"> 1237</span>&#160;  <span class="comment">/* &lt;Input&gt;                                                               */</span></div>
<div class="line"><a name="l01238"></a><span class="lineno"> 1238</span>&#160;  <span class="comment">/*    raster :: A handle to the raster object.                           */</span></div>
<div class="line"><a name="l01239"></a><span class="lineno"> 1239</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01240"></a><span class="lineno"> 1240</span>&#160;  <span class="comment">/*    params :: A pointer to an @FT_Raster_Params structure used to      */</span></div>
<div class="line"><a name="l01241"></a><span class="lineno"> 1241</span>&#160;  <span class="comment">/*              store the rendering parameters.                          */</span></div>
<div class="line"><a name="l01242"></a><span class="lineno"> 1242</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01243"></a><span class="lineno"> 1243</span>&#160;  <span class="comment">/* &lt;Return&gt;                                                              */</span></div>
<div class="line"><a name="l01244"></a><span class="lineno"> 1244</span>&#160;  <span class="comment">/*    Error code.  0~means success.                                      */</span></div>
<div class="line"><a name="l01245"></a><span class="lineno"> 1245</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01246"></a><span class="lineno"> 1246</span>&#160;  <span class="comment">/* &lt;Note&gt;                                                                */</span></div>
<div class="line"><a name="l01247"></a><span class="lineno"> 1247</span>&#160;  <span class="comment">/*    The exact format of the source image depends on the raster&#39;s glyph */</span></div>
<div class="line"><a name="l01248"></a><span class="lineno"> 1248</span>&#160;  <span class="comment">/*    format defined in its @FT_Raster_Funcs structure.  It can be an    */</span></div>
<div class="line"><a name="l01249"></a><span class="lineno"> 1249</span>&#160;  <span class="comment">/*    @FT_Outline or anything else in order to support a large array of  */</span></div>
<div class="line"><a name="l01250"></a><span class="lineno"> 1250</span>&#160;  <span class="comment">/*    glyph formats.                                                     */</span></div>
<div class="line"><a name="l01251"></a><span class="lineno"> 1251</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01252"></a><span class="lineno"> 1252</span>&#160;  <span class="comment">/*    Note also that the render function can fail and return a           */</span></div>
<div class="line"><a name="l01253"></a><span class="lineno"> 1253</span>&#160;  <span class="comment">/*    `FT_Err_Unimplemented_Feature&#39; error code if the raster used does  */</span></div>
<div class="line"><a name="l01254"></a><span class="lineno"> 1254</span>&#160;  <span class="comment">/*    not support direct composition.                                    */</span></div>
<div class="line"><a name="l01255"></a><span class="lineno"> 1255</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01256"></a><span class="lineno"> 1256</span>&#160;  <span class="comment">/*    XXX: For now, the standard raster doesn&#39;t support direct           */</span></div>
<div class="line"><a name="l01257"></a><span class="lineno"> 1257</span>&#160;  <span class="comment">/*         composition but this should change for the final release (see */</span></div>
<div class="line"><a name="l01258"></a><span class="lineno"> 1258</span>&#160;  <span class="comment">/*         the files `demos/src/ftgrays.c&#39; and `demos/src/ftgrays2.c&#39;    */</span></div>
<div class="line"><a name="l01259"></a><span class="lineno"> 1259</span>&#160;  <span class="comment">/*         for examples of distinct implementations which support direct */</span></div>
<div class="line"><a name="l01260"></a><span class="lineno"> 1260</span>&#160;  <span class="comment">/*         composition).                                                 */</span></div>
<div class="line"><a name="l01261"></a><span class="lineno"> 1261</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01262"></a><span class="lineno"> 1262</span>&#160;  <span class="keyword">typedef</span> int</div>
<div class="line"><a name="l01263"></a><span class="lineno"> 1263</span>&#160;  (*FT_Raster_RenderFunc)( FT_Raster                raster,</div>
<div class="line"><a name="l01264"></a><span class="lineno"> 1264</span>&#160;                           <span class="keyword">const</span> <a class="code" href="structFT__Raster__Params__.php">FT_Raster_Params</a>*  params );</div>
<div class="line"><a name="l01265"></a><span class="lineno"> 1265</span>&#160;</div>
<div class="line"><a name="l01266"></a><span class="lineno"> 1266</span>&#160;<span class="preprocessor">#define FT_Raster_Render_Func  FT_Raster_RenderFunc</span></div>
<div class="line"><a name="l01267"></a><span class="lineno"> 1267</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01268"></a><span class="lineno"> 1268</span>&#160;</div>
<div class="line"><a name="l01269"></a><span class="lineno"> 1269</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l01270"></a><span class="lineno"> 1270</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01271"></a><span class="lineno"> 1271</span>&#160;  <span class="comment">/* &lt;Struct&gt;                                                              */</span></div>
<div class="line"><a name="l01272"></a><span class="lineno"> 1272</span>&#160;  <span class="comment">/*    FT_Raster_Funcs                                                    */</span></div>
<div class="line"><a name="l01273"></a><span class="lineno"> 1273</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01274"></a><span class="lineno"> 1274</span>&#160;  <span class="comment">/* &lt;Description&gt;                                                         */</span></div>
<div class="line"><a name="l01275"></a><span class="lineno"> 1275</span>&#160;  <span class="comment">/*   A structure used to describe a given raster class to the library.   */</span></div>
<div class="line"><a name="l01276"></a><span class="lineno"> 1276</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01277"></a><span class="lineno"> 1277</span>&#160;  <span class="comment">/* &lt;Fields&gt;                                                              */</span></div>
<div class="line"><a name="l01278"></a><span class="lineno"> 1278</span>&#160;  <span class="comment">/*    glyph_format  :: The supported glyph format for this raster.       */</span></div>
<div class="line"><a name="l01279"></a><span class="lineno"> 1279</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01280"></a><span class="lineno"> 1280</span>&#160;  <span class="comment">/*    raster_new    :: The raster constructor.                           */</span></div>
<div class="line"><a name="l01281"></a><span class="lineno"> 1281</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01282"></a><span class="lineno"> 1282</span>&#160;  <span class="comment">/*    raster_reset  :: Used to reset the render pool within the raster.  */</span></div>
<div class="line"><a name="l01283"></a><span class="lineno"> 1283</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01284"></a><span class="lineno"> 1284</span>&#160;  <span class="comment">/*    raster_render :: A function to render a glyph into a given bitmap. */</span></div>
<div class="line"><a name="l01285"></a><span class="lineno"> 1285</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01286"></a><span class="lineno"> 1286</span>&#160;  <span class="comment">/*    raster_done   :: The raster destructor.                            */</span></div>
<div class="line"><a name="l01287"></a><span class="lineno"> 1287</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l01288"></a><span class="lineno"><a class="code" href="structFT__Raster__Funcs__.php"> 1288</a></span>&#160;  <span class="keyword">typedef</span> <span class="keyword">struct  </span><a class="code" href="structFT__Raster__Funcs__.php">FT_Raster_Funcs_</a></div>
<div class="line"><a name="l01289"></a><span class="lineno"> 1289</span>&#160;  {</div>
<div class="line"><a name="l01290"></a><span class="lineno"> 1290</span>&#160;    FT_Glyph_Format        glyph_format;</div>
<div class="line"><a name="l01291"></a><span class="lineno"> 1291</span>&#160;    FT_Raster_NewFunc      raster_new;</div>
<div class="line"><a name="l01292"></a><span class="lineno"> 1292</span>&#160;    FT_Raster_ResetFunc    raster_reset;</div>
<div class="line"><a name="l01293"></a><span class="lineno"> 1293</span>&#160;    FT_Raster_SetModeFunc  raster_set_mode;</div>
<div class="line"><a name="l01294"></a><span class="lineno"> 1294</span>&#160;    FT_Raster_RenderFunc   raster_render;</div>
<div class="line"><a name="l01295"></a><span class="lineno"> 1295</span>&#160;    FT_Raster_DoneFunc     raster_done;</div>
<div class="line"><a name="l01296"></a><span class="lineno"> 1296</span>&#160;</div>
<div class="line"><a name="l01297"></a><span class="lineno"> 1297</span>&#160;  } <a class="code" href="structFT__Raster__Funcs__.php">FT_Raster_Funcs</a>;</div>
<div class="line"><a name="l01298"></a><span class="lineno"> 1298</span>&#160;</div>
<div class="line"><a name="l01299"></a><span class="lineno"> 1299</span>&#160;</div>
<div class="line"><a name="l01300"></a><span class="lineno"> 1300</span>&#160;  <span class="comment">/* */</span></div>
<div class="line"><a name="l01301"></a><span class="lineno"> 1301</span>&#160;</div>
<div class="line"><a name="l01302"></a><span class="lineno"> 1302</span>&#160;</div>
<div class="line"><a name="l01303"></a><span class="lineno"> 1303</span>&#160;FT_END_HEADER</div>
<div class="line"><a name="l01304"></a><span class="lineno"> 1304</span>&#160;</div>
<div class="line"><a name="l01305"></a><span class="lineno"> 1305</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __FTIMAGE_H__ */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l01306"></a><span class="lineno"> 1306</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l01307"></a><span class="lineno"> 1307</span>&#160;</div>
<div class="line"><a name="l01308"></a><span class="lineno"> 1308</span>&#160;<span class="comment">/* END */</span></div>
<div class="line"><a name="l01309"></a><span class="lineno"> 1309</span>&#160;</div>
<div class="line"><a name="l01310"></a><span class="lineno"> 1310</span>&#160;</div>
<div class="line"><a name="l01311"></a><span class="lineno"> 1311</span>&#160;<span class="comment">/* Local Variables: */</span></div>
<div class="line"><a name="l01312"></a><span class="lineno"> 1312</span>&#160;<span class="comment">/* coding: utf-8    */</span></div>
<div class="line"><a name="l01313"></a><span class="lineno"> 1313</span>&#160;<span class="comment">/* End:             */</span></div>
</div><!-- fragment --></div><!-- contents -->
<?php
    require("../footer.php");
?>
