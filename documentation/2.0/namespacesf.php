<?php
    $version = '2.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li class="current"><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="namespaces.php"><span>Namespace&#160;List</span></a></li>
      <li><a href="namespacemembers.php"><span>Namespace&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#enum-members">Enumerations</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">sf Namespace Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacesf_1_1Style"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf_1_1Style.php">Style</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Listener.php">Listener</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The audio listener is the point in the scene from where all the sounds are heard.  <a href="classsf_1_1Listener.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.php">Music</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Streamed music played from an audio file.  <a href="classsf_1_1Music.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php">Sound</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Regular sound that can be played in the audio environment.  <a href="classsf_1_1Sound.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Storage for audio samples defining a sound.  <a href="classsf_1_1SoundBuffer.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBufferRecorder.php">SoundBufferRecorder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized <a class="el" href="classsf_1_1SoundRecorder.php" title="Abstract base class for capturing sound data.">SoundRecorder</a> which stores the captured audio data into a sound buffer.  <a href="classsf_1_1SoundBufferRecorder.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php">SoundRecorder</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for capturing sound data.  <a href="classsf_1_1SoundRecorder.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundSource.php">SoundSource</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class defining a sound's properties.  <a href="classsf_1_1SoundSource.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php">SoundStream</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for streamed audio sources.  <a href="classsf_1_1SoundStream.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1CircleShape.php">CircleShape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a circle.  <a href="classsf_1_1CircleShape.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Color.php">Color</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class for manpulating RGBA colors.  <a href="classsf_1_1Color.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1ConvexShape.php">ConvexShape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a convex polygon.  <a href="classsf_1_1ConvexShape.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.php">Drawable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for objects that can be drawn to a render target.  <a href="classsf_1_1Drawable.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Font.php">Font</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for loading and manipulating character fonts.  <a href="classsf_1_1Font.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Glyph.php">Glyph</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure describing a glyph.  <a href="classsf_1_1Glyph.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Image.php">Image</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for loading, manipulating and saving images.  <a href="classsf_1_1Image.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php">Rect</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class for manipulating 2D axis aligned rectangles.  <a href="classsf_1_1Rect.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RectangleShape.php">RectangleShape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a rectangle.  <a href="classsf_1_1RectangleShape.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderStates.php">RenderStates</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define the states used for drawing to a <a class="el" href="classsf_1_1RenderTarget.php" title="Base class for all render targets (window, texture, ...)">RenderTarget</a>.  <a href="classsf_1_1RenderStates.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderTarget.php">RenderTarget</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all render targets (window, texture, ...)  <a href="classsf_1_1RenderTarget.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderTexture.php">RenderTexture</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Target for off-screen 2D rendering into a texture.  <a href="classsf_1_1RenderTexture.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderWindow.php">RenderWindow</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Window.php" title="Window that serves as a target for OpenGL rendering.">Window</a> that can serve as a target for 2D drawing.  <a href="classsf_1_1RenderWindow.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Shader.php">Shader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Shader.php" title="Shader class (vertex and fragment)">Shader</a> class (vertex and fragment)  <a href="classsf_1_1Shader.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Shape.php">Shape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for textured shapes with outline.  <a href="classsf_1_1Shape.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.php">Sprite</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Drawable.php" title="Abstract base class for objects that can be drawn to a render target.">Drawable</a> representation of a texture, with its own transformations, color, etc.  <a href="classsf_1_1Sprite.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Text.php">Text</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Graphical text that can be drawn to a render target.  <a href="classsf_1_1Text.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Texture.php">Texture</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Image.php" title="Class for loading, manipulating and saving images.">Image</a> living on the graphics card that can be used for drawing.  <a href="classsf_1_1Texture.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Transform.php">Transform</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a 3x3 transform matrix.  <a href="classsf_1_1Transform.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Transformable.php">Transformable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decomposed transform defined by a position, a rotation and a scale.  <a href="classsf_1_1Transformable.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Vertex.php">Vertex</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a point with color and texture coordinates.  <a href="classsf_1_1Vertex.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VertexArray.php">VertexArray</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a set of one or more 2D primitives.  <a href="classsf_1_1VertexArray.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php">View</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">2D camera that defines what region is shown on screen  <a href="classsf_1_1View.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Ftp.php">Ftp</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A FTP client.  <a href="classsf_1_1Ftp.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Http.php">Http</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A HTTP client.  <a href="classsf_1_1Http.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1IpAddress.php">IpAddress</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encapsulate an IPv4 network address.  <a href="classsf_1_1IpAddress.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Packet.php">Packet</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class to build blocks of data to transfer over the network.  <a href="classsf_1_1Packet.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Socket.php">Socket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all the socket types.  <a href="classsf_1_1Socket.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SocketSelector.php">SocketSelector</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplexer that allows to read from multiple sockets.  <a href="classsf_1_1SocketSelector.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1TcpListener.php">TcpListener</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Socket.php" title="Base class for all the socket types.">Socket</a> that listens to new TCP connections.  <a href="classsf_1_1TcpListener.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1TcpSocket.php">TcpSocket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized socket using the TCP protocol.  <a href="classsf_1_1TcpSocket.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1UdpSocket.php">UdpSocket</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized socket using the UDP protocol.  <a href="classsf_1_1UdpSocket.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Clock.php">Clock</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class that measures the elapsed time.  <a href="classsf_1_1Clock.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1InputStream.php">InputStream</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract class for custom file input streams.  <a href="classsf_1_1InputStream.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Lock.php">Lock</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Automatic wrapper for locking and unlocking mutexes.  <a href="classsf_1_1Lock.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Mutex.php">Mutex</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blocks concurrent access to shared resources from multiple threads.  <a href="classsf_1_1Mutex.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1NonCopyable.php">NonCopyable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class that makes any derived class non-copyable.  <a href="classsf_1_1NonCopyable.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1String.php">String</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility string class that automatically handles conversions between types and encodings.  <a href="classsf_1_1String.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Thread.php">Thread</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class to manipulate threads.  <a href="classsf_1_1Thread.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1ThreadLocal.php">ThreadLocal</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines variables with thread-local storage.  <a href="classsf_1_1ThreadLocal.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1ThreadLocalPtr.php">ThreadLocalPtr</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pointer to a thread-local variable.  <a href="classsf_1_1ThreadLocalPtr.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Time.php">Time</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents a time value.  <a href="classsf_1_1Time.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_018_01_4.php">Utf&lt; 8 &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of the <a class="el" href="classsf_1_1Utf.php" title="Utility class providing generic functions for UTF conversions.">Utf</a> template for UTF-8.  <a href="classsf_1_1Utf_3_018_01_4.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0116_01_4.php">Utf&lt; 16 &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of the <a class="el" href="classsf_1_1Utf.php" title="Utility class providing generic functions for UTF conversions.">Utf</a> template for UTF-16.  <a href="classsf_1_1Utf_3_0116_01_4.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf_3_0132_01_4.php">Utf&lt; 32 &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialization of the <a class="el" href="classsf_1_1Utf.php" title="Utility class providing generic functions for UTF conversions.">Utf</a> template for UTF-32.  <a href="classsf_1_1Utf_3_0132_01_4.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Vector2.php">Vector2</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility template class for manipulating 2-dimensional vectors.  <a href="classsf_1_1Vector2.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Vector3.php">Vector3</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility template class for manipulating 3-dimensional vectors.  <a href="classsf_1_1Vector3.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Context.php">Context</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class holding a valid drawing context.  <a href="classsf_1_1Context.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsf_1_1ContextSettings.php">ContextSettings</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure defining the settings of the OpenGL context attached to a window.  <a href="structsf_1_1ContextSettings.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Event.php">Event</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines a system event and its parameters.  <a href="classsf_1_1Event.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1GlResource.php">GlResource</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for classes that require an OpenGL context.  <a href="classsf_1_1GlResource.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Joystick.php">Joystick</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Give access to the real-time state of the joysticks.  <a href="classsf_1_1Joystick.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Keyboard.php">Keyboard</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Give access to the real-time state of the keyboard.  <a href="classsf_1_1Keyboard.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Mouse.php">Mouse</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Give access to the real-time state of the mouse.  <a href="classsf_1_1Mouse.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php">VideoMode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1VideoMode.php" title="VideoMode defines a video mode (width, height, bpp)">VideoMode</a> defines a video mode (width, height, bpp)  <a href="classsf_1_1VideoMode.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Window.php">Window</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Window.php" title="Window that serves as a target for OpenGL rendering.">Window</a> that serves as a target for OpenGL rendering.  <a href="classsf_1_1Window.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Utf.php">Utf</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class providing generic functions for UTF conversions.  <a href="classsf_1_1Utf.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a69b109973eac74e22b97e5339bdb68dd"><td class="memItemLeft" align="right" valign="top">typedef signed char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a69b109973eac74e22b97e5339bdb68dd">Int8</a></td></tr>
<tr class="separator:a69b109973eac74e22b97e5339bdb68dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ef3d630785c4f296f9b4f274c33d78e"><td class="memItemLeft" align="right" valign="top">typedef unsigned char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a4ef3d630785c4f296f9b4f274c33d78e">Uint8</a></td></tr>
<tr class="separator:a4ef3d630785c4f296f9b4f274c33d78e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c8e10435e2a310a7741755e66b5c94e"><td class="memItemLeft" align="right" valign="top">typedef signed short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a3c8e10435e2a310a7741755e66b5c94e">Int16</a></td></tr>
<tr class="separator:a3c8e10435e2a310a7741755e66b5c94e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fcaf787248b0b83dfb6b145ca348246"><td class="memItemLeft" align="right" valign="top">typedef unsigned short&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a2fcaf787248b0b83dfb6b145ca348246">Uint16</a></td></tr>
<tr class="separator:a2fcaf787248b0b83dfb6b145ca348246"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2dfd4952377a26dee4750e2e4a30a15"><td class="memItemLeft" align="right" valign="top">typedef signed int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#ac2dfd4952377a26dee4750e2e4a30a15">Int32</a></td></tr>
<tr class="separator:ac2dfd4952377a26dee4750e2e4a30a15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa746fb1ddef4410bddf198ebb27e727c"><td class="memItemLeft" align="right" valign="top">typedef unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#aa746fb1ddef4410bddf198ebb27e727c">Uint32</a></td></tr>
<tr class="separator:aa746fb1ddef4410bddf198ebb27e727c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2840579fed3494d9f330baf7a5a19903"><td class="memItemLeft" align="right" valign="top">typedef signed long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a2840579fed3494d9f330baf7a5a19903">Int64</a></td></tr>
<tr class="separator:a2840579fed3494d9f330baf7a5a19903"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add9ac83466d96b9f50a009b9f4064266"><td class="memItemLeft" align="right" valign="top">typedef unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#add9ac83466d96b9f50a009b9f4064266">Uint64</a></td></tr>
<tr class="separator:add9ac83466d96b9f50a009b9f4064266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae67411782674934f78d55fa3af18403"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Rect.php">Rect</a>&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#aae67411782674934f78d55fa3af18403">IntRect</a></td></tr>
<tr class="separator:aae67411782674934f78d55fa3af18403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed4e58f586b2eed2621c0365d0b7554e"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Rect.php">Rect</a>&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#aed4e58f586b2eed2621c0365d0b7554e">FloatRect</a></td></tr>
<tr class="separator:aed4e58f586b2eed2621c0365d0b7554e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefabb521d8f5eec9e6a9b521271d20d1"><td class="memItemLeft" align="right" valign="top">typedef int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#aefabb521d8f5eec9e6a9b521271d20d1">SocketHandle</a></td></tr>
<tr class="separator:aefabb521d8f5eec9e6a9b521271d20d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab78b7f576a82034d14eab92becc15301"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Utf.php">Utf</a>&lt; 8 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#ab78b7f576a82034d14eab92becc15301">Utf8</a></td></tr>
<tr class="separator:ab78b7f576a82034d14eab92becc15301"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae30b6ea05a1723d608853ebc3043e53d"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Utf.php">Utf</a>&lt; 16 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#ae30b6ea05a1723d608853ebc3043e53d">Utf16</a></td></tr>
<tr class="separator:ae30b6ea05a1723d608853ebc3043e53d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51a40f697607908d2e9f58e67f4c89a3"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Utf.php">Utf</a>&lt; 32 &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a51a40f697607908d2e9f58e67f4c89a3">Utf32</a></td></tr>
<tr class="separator:a51a40f697607908d2e9f58e67f4c89a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace09dd1447d74c6e9ba56ae874c094e1"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Vector2.php">Vector2</a>&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#ace09dd1447d74c6e9ba56ae874c094e1">Vector2i</a></td></tr>
<tr class="separator:ace09dd1447d74c6e9ba56ae874c094e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa02ba42bf79b001a376fe9d79254cb3"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Vector2.php">Vector2</a>&lt; unsigned int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#aaa02ba42bf79b001a376fe9d79254cb3">Vector2u</a></td></tr>
<tr class="separator:aaa02ba42bf79b001a376fe9d79254cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acf03098c2577b869e2fa6836cc48f1a0"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Vector2.php">Vector2</a>&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#acf03098c2577b869e2fa6836cc48f1a0">Vector2f</a></td></tr>
<tr class="separator:acf03098c2577b869e2fa6836cc48f1a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad066a8774efaf7b623df8909ba219dc7"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Vector3.php">Vector3</a>&lt; int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#ad066a8774efaf7b623df8909ba219dc7">Vector3i</a></td></tr>
<tr class="separator:ad066a8774efaf7b623df8909ba219dc7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af97357d7d32e7d6a700d03be2f3b4811"><td class="memItemLeft" align="right" valign="top">typedef <a class="el" href="classsf_1_1Vector3.php">Vector3</a>&lt; float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#af97357d7d32e7d6a700d03be2f3b4811">Vector3f</a></td></tr>
<tr class="separator:af97357d7d32e7d6a700d03be2f3b4811"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga80c52fe2f7050d7f7573b7ed3c995388"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.php#ga80c52fe2f7050d7f7573b7ed3c995388">BlendMode</a> { <br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga80c52fe2f7050d7f7573b7ed3c995388aaf30f92cf1471a031fce5d61e8674996">BlendAlpha</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga80c52fe2f7050d7f7573b7ed3c995388afc35de7c9fe26776b839cfe0027b16da">BlendAdd</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga80c52fe2f7050d7f7573b7ed3c995388a8adc43071db8f20e508c35e172195234">BlendMultiply</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga80c52fe2f7050d7f7573b7ed3c995388abe282fb5f49c20b6439cbec9d4f63722">BlendNone</a>
<br/>
 }</td></tr>
<tr class="memdesc:ga80c52fe2f7050d7f7573b7ed3c995388"><td class="mdescLeft">&#160;</td><td class="mdescRight">Available blending modes for drawing.  <a href="group__graphics.php#ga80c52fe2f7050d7f7573b7ed3c995388">More...</a><br/></td></tr>
<tr class="separator:ga80c52fe2f7050d7f7573b7ed3c995388"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5ee56ac1339984909610713096283b1b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.php#ga5ee56ac1339984909610713096283b1b">PrimitiveType</a> { <br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1bac7097d3e01778b9318def1f7ac35a785">Points</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba2bf015eeff9f798dfc3d6d744d669f1e">Lines</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba5b09910f5d0f39641342184ccd0d1de3">LinesStrip</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba880a7aa72c20b9f9beb7eb64d2434670">Triangles</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba66643dbbb24bbacb405973ed80eebae0">TrianglesStrip</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba5338a2c6d922151fe50f235036af8a20">TrianglesFan</a>, 
<br/>
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba5041359b76b4bd3d3e6ef738826b8743">Quads</a>
<br/>
 }</td></tr>
<tr class="memdesc:ga5ee56ac1339984909610713096283b1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Types of primitives that a <a class="el" href="classsf_1_1VertexArray.php" title="Define a set of one or more 2D primitives.">sf::VertexArray</a> can render.  <a href="group__graphics.php#ga5ee56ac1339984909610713096283b1b">More...</a><br/></td></tr>
<tr class="separator:ga5ee56ac1339984909610713096283b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1c7342603d3a758144298b70d8166923"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a1c7342603d3a758144298b70d8166923">operator==</a> (const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;left, const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;right)</td></tr>
<tr class="memdesc:a1c7342603d3a758144298b70d8166923"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of == operator to compare two IP addresses.  <a href="#a1c7342603d3a758144298b70d8166923"></a><br/></td></tr>
<tr class="separator:a1c7342603d3a758144298b70d8166923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e9416575ff1e62467c692e00a3290e1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a7e9416575ff1e62467c692e00a3290e1">operator!=</a> (const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;left, const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;right)</td></tr>
<tr class="memdesc:a7e9416575ff1e62467c692e00a3290e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of != operator to compare two IP addresses.  <a href="#a7e9416575ff1e62467c692e00a3290e1"></a><br/></td></tr>
<tr class="separator:a7e9416575ff1e62467c692e00a3290e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae761c09191acb8e31cce343197fec0b9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#ae761c09191acb8e31cce343197fec0b9">operator&lt;</a> (const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;left, const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;right)</td></tr>
<tr class="memdesc:ae761c09191acb8e31cce343197fec0b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &lt; operator to compare two IP addresses.  <a href="#ae761c09191acb8e31cce343197fec0b9"></a><br/></td></tr>
<tr class="separator:ae761c09191acb8e31cce343197fec0b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af142e40929bb8cc96d79c48af19bd045"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#af142e40929bb8cc96d79c48af19bd045">operator&gt;</a> (const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;left, const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;right)</td></tr>
<tr class="memdesc:af142e40929bb8cc96d79c48af19bd045"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &gt; operator to compare two IP addresses.  <a href="#af142e40929bb8cc96d79c48af19bd045"></a><br/></td></tr>
<tr class="separator:af142e40929bb8cc96d79c48af19bd045"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c0477225ec01865c550da5b3b2b6cc5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a9c0477225ec01865c550da5b3b2b6cc5">operator&lt;=</a> (const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;left, const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;right)</td></tr>
<tr class="memdesc:a9c0477225ec01865c550da5b3b2b6cc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &lt;= operator to compare two IP addresses.  <a href="#a9c0477225ec01865c550da5b3b2b6cc5"></a><br/></td></tr>
<tr class="separator:a9c0477225ec01865c550da5b3b2b6cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68124f60ee7ee08073bd1894d69b0ed2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a68124f60ee7ee08073bd1894d69b0ed2">operator&gt;=</a> (const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;left, const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;right)</td></tr>
<tr class="memdesc:a68124f60ee7ee08073bd1894d69b0ed2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &gt;= operator to compare two IP addresses.  <a href="#a68124f60ee7ee08073bd1894d69b0ed2"></a><br/></td></tr>
<tr class="separator:a68124f60ee7ee08073bd1894d69b0ed2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ee5a340ca1772a7d8287372906f2aec"><td class="memItemLeft" align="right" valign="top">std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a3ee5a340ca1772a7d8287372906f2aec">operator&gt;&gt;</a> (std::istream &amp;stream, <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;address)</td></tr>
<tr class="memdesc:a3ee5a340ca1772a7d8287372906f2aec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &gt;&gt; operator to extract an IP address from an input stream.  <a href="#a3ee5a340ca1772a7d8287372906f2aec"></a><br/></td></tr>
<tr class="separator:a3ee5a340ca1772a7d8287372906f2aec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a187b51844c6f96798fc68771c8dc8b27"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a187b51844c6f96798fc68771c8dc8b27">operator&lt;&lt;</a> (std::ostream &amp;stream, const <a class="el" href="classsf_1_1IpAddress.php">IpAddress</a> &amp;address)</td></tr>
<tr class="memdesc:a187b51844c6f96798fc68771c8dc8b27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &lt;&lt; operator to print an IP address to an output stream.  <a href="#a187b51844c6f96798fc68771c8dc8b27"></a><br/></td></tr>
<tr class="separator:a187b51844c6f96798fc68771c8dc8b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7fe7f475639e26334606b5142c29551f"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__system.php#ga7fe7f475639e26334606b5142c29551f">err</a> ()</td></tr>
<tr class="memdesc:ga7fe7f475639e26334606b5142c29551f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard stream used by SFML to output warnings and errors.  <a href="group__system.php#ga7fe7f475639e26334606b5142c29551f"></a><br/></td></tr>
<tr class="separator:ga7fe7f475639e26334606b5142c29551f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab8c0d1f966b4e5110fd370b662d8c11b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__system.php#gab8c0d1f966b4e5110fd370b662d8c11b">sleep</a> (<a class="el" href="classsf_1_1Time.php">Time</a> duration)</td></tr>
<tr class="memdesc:gab8c0d1f966b4e5110fd370b662d8c11b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make the current thread sleep for a given duration.  <a href="group__system.php#gab8c0d1f966b4e5110fd370b662d8c11b"></a><br/></td></tr>
<tr class="separator:gab8c0d1f966b4e5110fd370b662d8c11b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Typedef Documentation</h2>
<a class="anchor" id="aed4e58f586b2eed2621c0365d0b7554e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Rect.php">Rect</a>&lt;float&gt; <a class="el" href="namespacesf.php#aed4e58f586b2eed2621c0365d0b7554e">sf::FloatRect</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Rect_8hpp_source.php#l00191">191</a> of file <a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a3c8e10435e2a310a7741755e66b5c94e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef signed short <a class="el" href="namespacesf.php#a3c8e10435e2a310a7741755e66b5c94e">sf::Int16</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00140">140</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac2dfd4952377a26dee4750e2e4a30a15"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef signed int <a class="el" href="namespacesf.php#ac2dfd4952377a26dee4750e2e4a30a15">sf::Int32</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00144">144</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2840579fed3494d9f330baf7a5a19903"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef signed long long <a class="el" href="namespacesf.php#a2840579fed3494d9f330baf7a5a19903">sf::Int64</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00152">152</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a69b109973eac74e22b97e5339bdb68dd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef signed char <a class="el" href="namespacesf.php#a69b109973eac74e22b97e5339bdb68dd">sf::Int8</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00136">136</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aae67411782674934f78d55fa3af18403"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Rect.php">Rect</a>&lt;int&gt; <a class="el" href="namespacesf.php#aae67411782674934f78d55fa3af18403">sf::IntRect</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Rect_8hpp_source.php#l00190">190</a> of file <a class="el" href="Rect_8hpp_source.php">Rect.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aefabb521d8f5eec9e6a9b521271d20d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef int <a class="el" href="namespacesf.php#aefabb521d8f5eec9e6a9b521271d20d1">sf::SocketHandle</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="SocketHandle_8hpp_source.php#l00050">50</a> of file <a class="el" href="SocketHandle_8hpp_source.php">SocketHandle.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a2fcaf787248b0b83dfb6b145ca348246"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned short <a class="el" href="namespacesf.php#a2fcaf787248b0b83dfb6b145ca348246">sf::Uint16</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00141">141</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aa746fb1ddef4410bddf198ebb27e727c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned int <a class="el" href="namespacesf.php#aa746fb1ddef4410bddf198ebb27e727c">sf::Uint32</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00145">145</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="add9ac83466d96b9f50a009b9f4064266"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned long long <a class="el" href="namespacesf.php#add9ac83466d96b9f50a009b9f4064266">sf::Uint64</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00153">153</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a4ef3d630785c4f296f9b4f274c33d78e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef unsigned char <a class="el" href="namespacesf.php#a4ef3d630785c4f296f9b4f274c33d78e">sf::Uint8</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Config_8hpp_source.php#l00137">137</a> of file <a class="el" href="Config_8hpp_source.php">Config.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ae30b6ea05a1723d608853ebc3043e53d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Utf.php">Utf</a>&lt;16&gt; <a class="el" href="namespacesf.php#ae30b6ea05a1723d608853ebc3043e53d">sf::Utf16</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Utf_8hpp_source.php#l00735">735</a> of file <a class="el" href="Utf_8hpp_source.php">Utf.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="a51a40f697607908d2e9f58e67f4c89a3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Utf.php">Utf</a>&lt;32&gt; <a class="el" href="namespacesf.php#a51a40f697607908d2e9f58e67f4c89a3">sf::Utf32</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Utf_8hpp_source.php#l00736">736</a> of file <a class="el" href="Utf_8hpp_source.php">Utf.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ab78b7f576a82034d14eab92becc15301"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Utf.php">Utf</a>&lt;8&gt; <a class="el" href="namespacesf.php#ab78b7f576a82034d14eab92becc15301">sf::Utf8</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Utf_8hpp_source.php#l00734">734</a> of file <a class="el" href="Utf_8hpp_source.php">Utf.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="acf03098c2577b869e2fa6836cc48f1a0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Vector2.php">Vector2</a>&lt;float&gt; <a class="el" href="namespacesf.php#acf03098c2577b869e2fa6836cc48f1a0">sf::Vector2f</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Vector2_8hpp_source.php#l00255">255</a> of file <a class="el" href="Vector2_8hpp_source.php">Vector2.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ace09dd1447d74c6e9ba56ae874c094e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Vector2.php">Vector2</a>&lt;int&gt; <a class="el" href="namespacesf.php#ace09dd1447d74c6e9ba56ae874c094e1">sf::Vector2i</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Vector2_8hpp_source.php#l00253">253</a> of file <a class="el" href="Vector2_8hpp_source.php">Vector2.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="aaa02ba42bf79b001a376fe9d79254cb3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Vector2.php">Vector2</a>&lt;unsigned int&gt; <a class="el" href="namespacesf.php#aaa02ba42bf79b001a376fe9d79254cb3">sf::Vector2u</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Vector2_8hpp_source.php#l00254">254</a> of file <a class="el" href="Vector2_8hpp_source.php">Vector2.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="af97357d7d32e7d6a700d03be2f3b4811"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Vector3.php">Vector3</a>&lt;float&gt; <a class="el" href="namespacesf.php#af97357d7d32e7d6a700d03be2f3b4811">sf::Vector3f</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Vector3_8hpp_source.php#l00256">256</a> of file <a class="el" href="Vector3_8hpp_source.php">Vector3.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ad066a8774efaf7b623df8909ba219dc7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef <a class="el" href="classsf_1_1Vector3.php">Vector3</a>&lt;int&gt; <a class="el" href="namespacesf.php#ad066a8774efaf7b623df8909ba219dc7">sf::Vector3i</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Definition at line <a class="el" href="Vector3_8hpp_source.php#l00255">255</a> of file <a class="el" href="Vector3_8hpp_source.php">Vector3.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="a7e9416575ff1e62467c692e00a3290e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::operator!= </td>
          <td>(</td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of != operator to compare two IP addresses. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand (a IP address) </td></tr>
    <tr><td class="paramname">right</td><td>Right operand (a IP address)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if both addresses are different </dd></dl>

</div>
</div>
<a class="anchor" id="ae761c09191acb8e31cce343197fec0b9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::operator&lt; </td>
          <td>(</td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of &lt; operator to compare two IP addresses. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand (a IP address) </td></tr>
    <tr><td class="paramname">right</td><td>Right operand (a IP address)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if <em>left</em> is lesser than <em>right</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a187b51844c6f96798fc68771c8dc8b27"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::ostream&amp; sf::operator&lt;&lt; </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>address</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of &lt;&lt; operator to print an IP address to an output stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>Output stream </td></tr>
    <tr><td class="paramname">address</td><td>IP address to print</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to the output stream </dd></dl>

</div>
</div>
<a class="anchor" id="a9c0477225ec01865c550da5b3b2b6cc5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::operator&lt;= </td>
          <td>(</td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of &lt;= operator to compare two IP addresses. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand (a IP address) </td></tr>
    <tr><td class="paramname">right</td><td>Right operand (a IP address)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if <em>left</em> is lesser or equal than <em>right</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a1c7342603d3a758144298b70d8166923"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::operator== </td>
          <td>(</td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of == operator to compare two IP addresses. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand (a IP address) </td></tr>
    <tr><td class="paramname">right</td><td>Right operand (a IP address)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if both addresses are equal </dd></dl>

</div>
</div>
<a class="anchor" id="af142e40929bb8cc96d79c48af19bd045"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::operator&gt; </td>
          <td>(</td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of &gt; operator to compare two IP addresses. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand (a IP address) </td></tr>
    <tr><td class="paramname">right</td><td>Right operand (a IP address)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if <em>left</em> is greater than <em>right</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a68124f60ee7ee08073bd1894d69b0ed2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::operator&gt;= </td>
          <td>(</td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const IpAddress &amp;&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of &gt;= operator to compare two IP addresses. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Left operand (a IP address) </td></tr>
    <tr><td class="paramname">right</td><td>Right operand (a IP address)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if <em>left</em> is greater or equal than <em>right</em> </dd></dl>

</div>
</div>
<a class="anchor" id="a3ee5a340ca1772a7d8287372906f2aec"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">std::istream&amp; sf::operator&gt;&gt; </td>
          <td>(</td>
          <td class="paramtype">std::istream &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">IpAddress &amp;&#160;</td>
          <td class="paramname"><em>address</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Overload of &gt;&gt; operator to extract an IP address from an input stream. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">stream</td><td>Input stream </td></tr>
    <tr><td class="paramname">address</td><td>IP address to extract</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Reference to the input stream </dd></dl>

</div>
</div>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
