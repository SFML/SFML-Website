<?php
    $version = '2.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_a0fcb5a19f655e235834e6382998c7e0.php">sfml</a></li><li class="navelem"><a class="el" href="dir_29bf4fae8a8e962aff98775afacdab0f.php">sfml</a></li><li class="navelem"><a class="el" href="dir_793f6ba77cf4e8a5d963fd5c095c876f.php">extlibs</a></li><li class="navelem"><a class="el" href="dir_68d8c18478ca54c694885cb8cbc52e5a.php">headers</a></li><li class="navelem"><a class="el" href="dir_5b6a7874b801642b9fbb81237cbdcc3a.php">jpeg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">jerror.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * jerror.h</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * Copyright (C) 1994-1997, Thomas G. Lane.</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * Modified 1997-2009 by Guido Vollbeding.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * This file is part of the Independent JPEG Group&#39;s software.</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> * For conditions of distribution and use, see the accompanying README file.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> * This file defines the error and message codes for the JPEG library.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> * Edit this file to add new codes, or to translate the message strings to</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> * some other language.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> * A set of error-reporting macros are defined too.  Some applications using</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> * the JPEG library may wish to include this file to get the error codes</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> * and/or the macros.</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> * To define the enum list of message codes, include this file without</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> * defining macro JMESSAGE.  To create a message string table, include it</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> * again with a suitable JMESSAGE definition (see jerror.c for an example).</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef JMESSAGE</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#ifndef JERROR_H</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor"></span><span class="comment">/* First time through, define the enum list */</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#define JMAKE_ENUM_LIST</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#else</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor"></span><span class="comment">/* Repeated inclusions of this file are no-ops unless JMESSAGE is defined */</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#define JMESSAGE(code,string)</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* JERROR_H */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* JMESSAGE */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#ifdef JMAKE_ENUM_LIST</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">typedef</span> <span class="keyword">enum</span> {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">#define JMESSAGE(code,string)   code ,</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* JMAKE_ENUM_LIST */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;JMESSAGE(JMSG_NOMESSAGE, <span class="stringliteral">&quot;Bogus message code %d&quot;</span>) <span class="comment">/* Must be first entry! */</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="comment">/* For maintenance convenience, list is alphabetical by message code name */</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;JMESSAGE(JERR_BAD_ALIGN_TYPE, &quot;ALIGN_TYPE is wrong, please fix&quot;)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;JMESSAGE(JERR_BAD_ALLOC_CHUNK, &quot;MAX_ALLOC_CHUNK is wrong, please fix&quot;)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;JMESSAGE(JERR_BAD_BUFFER_MODE, &quot;Bogus buffer control mode&quot;)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;JMESSAGE(JERR_BAD_COMPONENT_ID, &quot;Invalid component ID %d in SOS&quot;)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;JMESSAGE(JERR_BAD_CROP_SPEC, &quot;Invalid crop request&quot;)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;JMESSAGE(JERR_BAD_DCT_COEF, &quot;DCT coefficient out of range&quot;)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;JMESSAGE(JERR_BAD_DCTSIZE, &quot;DCT scaled block size %dx%d not supported&quot;)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;JMESSAGE(JERR_BAD_DROP_SAMPLING,</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;     &quot;Component index %d: mismatching sampling ratio %d:%d, %d:%d, %c&quot;)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;JMESSAGE(JERR_BAD_HUFF_TABLE, &quot;Bogus Huffman table definition&quot;)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;JMESSAGE(JERR_BAD_IN_COLORSPACE, &quot;Bogus input colorspace&quot;)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;JMESSAGE(JERR_BAD_J_COLORSPACE, &quot;Bogus JPEG colorspace&quot;)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;JMESSAGE(JERR_BAD_LENGTH, &quot;Bogus marker length&quot;)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;JMESSAGE(JERR_BAD_LIB_VERSION,</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;     &quot;Wrong JPEG library version: library is %d, caller expects %d&quot;)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;JMESSAGE(JERR_BAD_MCU_SIZE, &quot;Sampling factors too large for interleaved scan&quot;)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;JMESSAGE(JERR_BAD_POOL_ID, &quot;Invalid memory pool code %d&quot;)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;JMESSAGE(JERR_BAD_PRECISION, &quot;Unsupported JPEG data precision %d&quot;)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;JMESSAGE(JERR_BAD_PROGRESSION,</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;     &quot;Invalid progressive parameters Ss=%d Se=%d Ah=%d Al=%d&quot;)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;JMESSAGE(JERR_BAD_PROG_SCRIPT,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     &quot;Invalid progressive parameters at scan script entry %d&quot;)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;JMESSAGE(JERR_BAD_SAMPLING, &quot;Bogus sampling factors&quot;)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;JMESSAGE(JERR_BAD_SCAN_SCRIPT, &quot;Invalid scan script at entry %d&quot;)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;JMESSAGE(JERR_BAD_STATE, &quot;Improper call to JPEG library in state %d&quot;)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;JMESSAGE(JERR_BAD_STRUCT_SIZE,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;     &quot;JPEG parameter struct mismatch: library thinks size is %u, caller expects %u&quot;)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;JMESSAGE(JERR_BAD_VIRTUAL_ACCESS, &quot;Bogus virtual array access&quot;)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;JMESSAGE(JERR_BUFFER_SIZE, &quot;Buffer passed to JPEG library is too small&quot;)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;JMESSAGE(JERR_CANT_SUSPEND, &quot;Suspension not allowed here&quot;)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;JMESSAGE(JERR_CCIR601_NOTIMPL, &quot;CCIR601 sampling not implemented yet&quot;)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;JMESSAGE(JERR_COMPONENT_COUNT, &quot;Too many color components: %d, max %d&quot;)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;JMESSAGE(JERR_CONVERSION_NOTIMPL, &quot;Unsupported color conversion request&quot;)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;JMESSAGE(JERR_DAC_INDEX, &quot;Bogus DAC index %d&quot;)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;JMESSAGE(JERR_DAC_VALUE, &quot;Bogus DAC value 0x%x&quot;)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;JMESSAGE(JERR_DHT_INDEX, &quot;Bogus DHT index %d&quot;)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;JMESSAGE(JERR_DQT_INDEX, &quot;Bogus DQT index %d&quot;)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;JMESSAGE(JERR_EMPTY_IMAGE, &quot;Empty JPEG image (DNL not supported)&quot;)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;JMESSAGE(JERR_EMS_READ, &quot;Read from EMS failed&quot;)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;JMESSAGE(JERR_EMS_WRITE, &quot;Write to EMS failed&quot;)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;JMESSAGE(JERR_EOI_EXPECTED, &quot;Didn&#39;t expect more than one scan&quot;)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;JMESSAGE(JERR_FILE_READ, &quot;Input file read error&quot;)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;JMESSAGE(JERR_FILE_WRITE, &quot;Output file write error --- out of disk space?&quot;)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;JMESSAGE(JERR_FRACT_SAMPLE_NOTIMPL, &quot;Fractional sampling not implemented yet&quot;)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;JMESSAGE(JERR_HUFF_CLEN_OVERFLOW, &quot;Huffman code size table overflow&quot;)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;JMESSAGE(JERR_HUFF_MISSING_CODE, &quot;Missing Huffman code table entry&quot;)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;JMESSAGE(JERR_IMAGE_TOO_BIG, &quot;Maximum supported image dimension is %u pixels&quot;)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;JMESSAGE(JERR_INPUT_EMPTY, &quot;Empty input file&quot;)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;JMESSAGE(JERR_INPUT_EOF, &quot;Premature end of input file&quot;)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;JMESSAGE(JERR_MISMATCHED_QUANT_TABLE,</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;     &quot;Cannot transcode due to multiple use of quantization table %d&quot;)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;JMESSAGE(JERR_MISSING_DATA, &quot;Scan script does not transmit all data&quot;)</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;JMESSAGE(JERR_MODE_CHANGE, &quot;Invalid color quantization mode change&quot;)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;JMESSAGE(JERR_NOTIMPL, &quot;Not implemented yet&quot;)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;JMESSAGE(JERR_NOT_COMPILED, &quot;Requested feature was omitted at compile time&quot;)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;JMESSAGE(JERR_NO_ARITH_TABLE, &quot;Arithmetic table 0x%02x was not defined&quot;)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;JMESSAGE(JERR_NO_BACKING_STORE, &quot;Backing store not supported&quot;)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;JMESSAGE(JERR_NO_HUFF_TABLE, &quot;Huffman table 0x%02x was not defined&quot;)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;JMESSAGE(JERR_NO_IMAGE, &quot;JPEG datastream contains no image&quot;)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;JMESSAGE(JERR_NO_QUANT_TABLE, &quot;Quantization table 0x%02x was not defined&quot;)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;JMESSAGE(JERR_NO_SOI, &quot;Not a JPEG file: starts with 0x%02x 0x%02x&quot;)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;JMESSAGE(JERR_OUT_OF_MEMORY, &quot;Insufficient memory (case %d)&quot;)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;JMESSAGE(JERR_QUANT_COMPONENTS,</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;     &quot;Cannot quantize more than %d color components&quot;)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;JMESSAGE(JERR_QUANT_FEW_COLORS, &quot;Cannot quantize to fewer than %d colors&quot;)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;JMESSAGE(JERR_QUANT_MANY_COLORS, &quot;Cannot quantize to more than %d colors&quot;)</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;JMESSAGE(JERR_SOF_DUPLICATE, &quot;Invalid JPEG file structure: two SOF markers&quot;)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;JMESSAGE(JERR_SOF_NO_SOS, &quot;Invalid JPEG file structure: missing SOS marker&quot;)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;JMESSAGE(JERR_SOF_UNSUPPORTED, &quot;Unsupported JPEG process: SOF type 0x%02x&quot;)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;JMESSAGE(JERR_SOI_DUPLICATE, &quot;Invalid JPEG file structure: two SOI markers&quot;)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;JMESSAGE(JERR_SOS_NO_SOF, &quot;Invalid JPEG file structure: SOS before SOF&quot;)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;JMESSAGE(JERR_TFILE_CREATE, &quot;Failed to create temporary file %s&quot;)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;JMESSAGE(JERR_TFILE_READ, &quot;Read failed on temporary file&quot;)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;JMESSAGE(JERR_TFILE_SEEK, &quot;Seek failed on temporary file&quot;)</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;JMESSAGE(JERR_TFILE_WRITE,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;     &quot;Write failed on temporary file --- out of disk space?&quot;)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;JMESSAGE(JERR_TOO_LITTLE_DATA, &quot;Application transferred too few scanlines&quot;)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;JMESSAGE(JERR_UNKNOWN_MARKER, &quot;Unsupported marker type 0x%02x&quot;)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;JMESSAGE(JERR_VIRTUAL_BUG, &quot;Virtual array controller messed up&quot;)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;JMESSAGE(JERR_WIDTH_OVERFLOW, &quot;Image too wide for this implementation&quot;)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;JMESSAGE(JERR_XMS_READ, &quot;Read from XMS failed&quot;)</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;JMESSAGE(JERR_XMS_WRITE, &quot;Write to XMS failed&quot;)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;JMESSAGE(JMSG_COPYRIGHT, JCOPYRIGHT)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;JMESSAGE(JMSG_VERSION, JVERSION)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;JMESSAGE(JTRC_16BIT_TABLES,</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;     &quot;Caution: quantization tables are too coarse for baseline JPEG&quot;)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;JMESSAGE(JTRC_ADOBE,</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;     &quot;Adobe APP14 marker: version %d, flags 0x%04x 0x%04x, transform %d&quot;)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;JMESSAGE(JTRC_APP0, &quot;Unknown APP0 marker (not JFIF), length %u&quot;)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;JMESSAGE(JTRC_APP14, &quot;Unknown APP14 marker (not Adobe), length %u&quot;)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;JMESSAGE(JTRC_DAC, &quot;Define Arithmetic Table 0x%02x: 0x%02x&quot;)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;JMESSAGE(JTRC_DHT, &quot;Define Huffman Table 0x%02x&quot;)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;JMESSAGE(JTRC_DQT, &quot;Define Quantization Table %d  precision %d&quot;)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;JMESSAGE(JTRC_DRI, &quot;Define Restart Interval %u&quot;)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;JMESSAGE(JTRC_EMS_CLOSE, &quot;Freed EMS handle %u&quot;)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;JMESSAGE(JTRC_EMS_OPEN, &quot;Obtained EMS handle %u&quot;)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;JMESSAGE(JTRC_EOI, &quot;End Of Image&quot;)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;JMESSAGE(JTRC_HUFFBITS, &quot;        %3d %3d %3d %3d %3d %3d %3d %3d&quot;)</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;JMESSAGE(JTRC_JFIF, &quot;JFIF APP0 marker: version %d.%02d, density %dx%d  %d&quot;)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;JMESSAGE(JTRC_JFIF_BADTHUMBNAILSIZE,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;     &quot;Warning: thumbnail image size does not match data length %u&quot;)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;JMESSAGE(JTRC_JFIF_EXTENSION,</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;     &quot;JFIF extension marker: type 0x%02x, length %u&quot;)</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;JMESSAGE(JTRC_JFIF_THUMBNAIL, &quot;    with %d x %d thumbnail image&quot;)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;JMESSAGE(JTRC_MISC_MARKER, &quot;Miscellaneous marker 0x%02x, length %u&quot;)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;JMESSAGE(JTRC_PARMLESS_MARKER, &quot;Unexpected marker 0x%02x&quot;)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;JMESSAGE(JTRC_QUANTVALS, &quot;        %4u %4u %4u %4u %4u %4u %4u %4u&quot;)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;JMESSAGE(JTRC_QUANT_3_NCOLORS, &quot;Quantizing to %d = %d*%d*%d colors&quot;)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;JMESSAGE(JTRC_QUANT_NCOLORS, &quot;Quantizing to %d colors&quot;)</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;JMESSAGE(JTRC_QUANT_SELECTED, &quot;Selected %d colors for quantization&quot;)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;JMESSAGE(JTRC_RECOVERY_ACTION, &quot;At marker 0x%02x, recovery action %d&quot;)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;JMESSAGE(JTRC_RST, &quot;RST%d&quot;)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;JMESSAGE(JTRC_SMOOTH_NOTIMPL,</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;     &quot;Smoothing not supported with nonstandard sampling ratios&quot;)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;JMESSAGE(JTRC_SOF, &quot;Start Of Frame 0x%02x: width=%u, height=%u, components=%d&quot;)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;JMESSAGE(JTRC_SOF_COMPONENT, &quot;    Component %d: %dhx%dv q=%d&quot;)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;JMESSAGE(JTRC_SOI, &quot;Start of Image&quot;)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;JMESSAGE(JTRC_SOS, &quot;Start Of Scan: %d components&quot;)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;JMESSAGE(JTRC_SOS_COMPONENT, &quot;    Component %d: dc=%d ac=%d&quot;)</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;JMESSAGE(JTRC_SOS_PARAMS, &quot;  Ss=%d, Se=%d, Ah=%d, Al=%d&quot;)</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;JMESSAGE(JTRC_TFILE_CLOSE, &quot;Closed temporary file %s&quot;)</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;JMESSAGE(JTRC_TFILE_OPEN, &quot;Opened temporary file %s&quot;)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;JMESSAGE(JTRC_THUMB_JPEG,</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;     &quot;JFIF extension marker: JPEG-compressed thumbnail image, length %u&quot;)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;JMESSAGE(JTRC_THUMB_PALETTE,</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;     &quot;JFIF extension marker: palette thumbnail image, length %u&quot;)</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;JMESSAGE(JTRC_THUMB_RGB,</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;     &quot;JFIF extension marker: RGB thumbnail image, length %u&quot;)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;JMESSAGE(JTRC_UNKNOWN_IDS,</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;     &quot;Unrecognized component IDs %d %d %d, assuming YCbCr&quot;)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;JMESSAGE(JTRC_XMS_CLOSE, &quot;Freed XMS handle %u&quot;)</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;JMESSAGE(JTRC_XMS_OPEN, &quot;Obtained XMS handle %u&quot;)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;JMESSAGE(JWRN_ADOBE_XFORM, &quot;Unknown Adobe color transform code %d&quot;)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;JMESSAGE(JWRN_ARITH_BAD_CODE, &quot;Corrupt JPEG data: bad arithmetic code&quot;)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;JMESSAGE(JWRN_BOGUS_PROGRESSION,</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;     &quot;Inconsistent progression sequence for component %d coefficient %d&quot;)</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;JMESSAGE(JWRN_EXTRANEOUS_DATA,</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;     &quot;Corrupt JPEG data: %u extraneous bytes before marker 0x%02x&quot;)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;JMESSAGE(JWRN_HIT_MARKER, &quot;Corrupt JPEG data: premature end of data segment&quot;)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;JMESSAGE(JWRN_HUFF_BAD_CODE, &quot;Corrupt JPEG data: bad Huffman code&quot;)</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;JMESSAGE(JWRN_JFIF_MAJOR, &quot;Warning: unknown JFIF revision number %d.%02d&quot;)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;JMESSAGE(JWRN_JPEG_EOF, &quot;Premature end of JPEG file&quot;)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;JMESSAGE(JWRN_MUST_RESYNC,</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;     &quot;Corrupt JPEG data: found marker 0x%02x instead of RST%d&quot;)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;JMESSAGE(JWRN_NOT_SEQUENTIAL, &quot;Invalid SOS parameters for sequential JPEG&quot;)</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;JMESSAGE(JWRN_TOO_MUCH_DATA, &quot;Application transferred too many scanlines&quot;)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#ifdef JMAKE_ENUM_LIST</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  JMSG_LASTMSGCODE</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;} J_MESSAGE_CODE;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="preprocessor">#undef JMAKE_ENUM_LIST</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif </span><span class="comment">/* JMAKE_ENUM_LIST */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="comment">/* Zap JMESSAGE macro so that future re-inclusions do nothing by default */</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">#undef JMESSAGE</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#ifndef JERROR_H</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define JERROR_H</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="comment">/* Macros to simplify using the error and trace message stuff */</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="comment">/* The first parameter is either type of cinfo pointer */</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="comment">/* Fatal errors (print message and exit) */</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor">#define ERREXIT(cinfo,code)  \</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;error_exit) ((j_common_ptr) (cinfo)))</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ERREXIT1(cinfo,code,p1)  \</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;error_exit) ((j_common_ptr) (cinfo)))</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ERREXIT2(cinfo,code,p1,p2)  \</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[1] = (p2), \</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;error_exit) ((j_common_ptr) (cinfo)))</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ERREXIT3(cinfo,code,p1,p2,p3)  \</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[1] = (p2), \</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[2] = (p3), \</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;error_exit) ((j_common_ptr) (cinfo)))</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ERREXIT4(cinfo,code,p1,p2,p3,p4)  \</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[1] = (p2), \</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[2] = (p3), \</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[3] = (p4), \</span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;error_exit) ((j_common_ptr) (cinfo)))</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ERREXIT6(cinfo,code,p1,p2,p3,p4,p5,p6)  \</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[1] = (p2), \</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[2] = (p3), \</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[3] = (p4), \</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[4] = (p5), \</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[5] = (p6), \</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;error_exit) ((j_common_ptr) (cinfo)))</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define ERREXITS(cinfo,code,str)  \</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="preprocessor">   strncpy((cinfo)-&gt;err-&gt;msg_parm.s, (str), JMSG_STR_PARM_MAX), \</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;error_exit) ((j_common_ptr) (cinfo)))</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">#define MAKESTMT(stuff)     do { stuff } while (0)</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="comment">/* Nonfatal errors (we can keep going, but the data is probably corrupt) */</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="preprocessor">#define WARNMS(cinfo,code)  \</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), -1))</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define WARNMS1(cinfo,code,p1)  \</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), -1))</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define WARNMS2(cinfo,code,p1,p2)  \</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[1] = (p2), \</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), -1))</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="comment">/* Informational/debugging messages */</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor">#define TRACEMS(cinfo,lvl,code)  \</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)))</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRACEMS1(cinfo,lvl,code,p1)  \</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)))</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRACEMS2(cinfo,lvl,code,p1,p2)  \</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[0] = (p1), \</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor">   (cinfo)-&gt;err-&gt;msg_parm.i[1] = (p2), \</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)))</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRACEMS3(cinfo,lvl,code,p1,p2,p3)  \</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">  MAKESTMT(int * _mp = (cinfo)-&gt;err-&gt;msg_parm.i; \</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">       _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); \</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor">       (cinfo)-&gt;err-&gt;msg_code = (code); \</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">       (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)); )</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRACEMS4(cinfo,lvl,code,p1,p2,p3,p4)  \</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="preprocessor">  MAKESTMT(int * _mp = (cinfo)-&gt;err-&gt;msg_parm.i; \</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">       _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); _mp[3] = (p4); \</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="preprocessor">       (cinfo)-&gt;err-&gt;msg_code = (code); \</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">       (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)); )</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRACEMS5(cinfo,lvl,code,p1,p2,p3,p4,p5)  \</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">  MAKESTMT(int * _mp = (cinfo)-&gt;err-&gt;msg_parm.i; \</span></div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">       _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); _mp[3] = (p4); \</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">       _mp[4] = (p5); \</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">       (cinfo)-&gt;err-&gt;msg_code = (code); \</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor">       (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)); )</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRACEMS8(cinfo,lvl,code,p1,p2,p3,p4,p5,p6,p7,p8)  \</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">  MAKESTMT(int * _mp = (cinfo)-&gt;err-&gt;msg_parm.i; \</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">       _mp[0] = (p1); _mp[1] = (p2); _mp[2] = (p3); _mp[3] = (p4); \</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">       _mp[4] = (p5); _mp[5] = (p6); _mp[6] = (p7); _mp[7] = (p8); \</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">       (cinfo)-&gt;err-&gt;msg_code = (code); \</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">       (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)); )</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TRACEMSS(cinfo,lvl,code,str)  \</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="preprocessor">  ((cinfo)-&gt;err-&gt;msg_code = (code), \</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="preprocessor">   strncpy((cinfo)-&gt;err-&gt;msg_parm.s, (str), JMSG_STR_PARM_MAX), \</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="preprocessor">   (*(cinfo)-&gt;err-&gt;emit_message) ((j_common_ptr) (cinfo), (lvl)))</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* JERROR_H */</span><span class="preprocessor"></span></div>
</div><!-- fragment --></div><!-- contents -->
<?php
    require("../footer.php");
?>
