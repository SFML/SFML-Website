<?php
    $version = '2.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
      <li><a href="globals.php"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_83ae1a5e8455fc62607b4936b42116e9.php">sfml</a></li><li class="navelem"><a class="el" href="dir_79a044fa5ec8bbf4af7d440d8995a178.php">sfml</a></li><li class="navelem"><a class="el" href="dir_f3190241575fd2bd132a392ae6942f4a.php">include</a></li><li class="navelem"><a class="el" href="dir_692f376662c82a26cfe4cfa3aceebe24.php">SFML</a></li><li class="navelem"><a class="el" href="dir_b9ac88db2949395b3130dd4ffb1be4e1.php">Network</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#namespaces">Namespaces</a> &#124;
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">IpAddress.hpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><code>#include &lt;<a class="el" href="Network_2Export_8hpp_source.php">SFML/Network/Export.hpp</a>&gt;</code><br/>
<code>#include &lt;<a class="el" href="Time_8hpp_source.php">SFML/System/Time.hpp</a>&gt;</code><br/>
<code>#include &lt;istream&gt;</code><br/>
<code>#include &lt;ostream&gt;</code><br/>
<code>#include &lt;string&gt;</code><br/>
</div>
<p><a href="IpAddress_8hpp_source.php">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1IpAddress.php">sf::IpAddress</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Encapsulate an IPv4 network address.  <a href="classsf_1_1IpAddress.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacesf"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php">sf</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a1c7342603d3a758144298b70d8166923"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a1c7342603d3a758144298b70d8166923">sf::operator==</a> (const IpAddress &amp;left, const IpAddress &amp;right)</td></tr>
<tr class="memdesc:a1c7342603d3a758144298b70d8166923"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of == operator to compare two IP addresses.  <a href="#a1c7342603d3a758144298b70d8166923"></a><br/></td></tr>
<tr class="separator:a1c7342603d3a758144298b70d8166923"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e9416575ff1e62467c692e00a3290e1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a7e9416575ff1e62467c692e00a3290e1">sf::operator!=</a> (const IpAddress &amp;left, const IpAddress &amp;right)</td></tr>
<tr class="memdesc:a7e9416575ff1e62467c692e00a3290e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of != operator to compare two IP addresses.  <a href="#a7e9416575ff1e62467c692e00a3290e1"></a><br/></td></tr>
<tr class="separator:a7e9416575ff1e62467c692e00a3290e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae761c09191acb8e31cce343197fec0b9"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#ae761c09191acb8e31cce343197fec0b9">sf::operator&lt;</a> (const IpAddress &amp;left, const IpAddress &amp;right)</td></tr>
<tr class="memdesc:ae761c09191acb8e31cce343197fec0b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &lt; operator to compare two IP addresses.  <a href="#ae761c09191acb8e31cce343197fec0b9"></a><br/></td></tr>
<tr class="separator:ae761c09191acb8e31cce343197fec0b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af142e40929bb8cc96d79c48af19bd045"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#af142e40929bb8cc96d79c48af19bd045">sf::operator&gt;</a> (const IpAddress &amp;left, const IpAddress &amp;right)</td></tr>
<tr class="memdesc:af142e40929bb8cc96d79c48af19bd045"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &gt; operator to compare two IP addresses.  <a href="#af142e40929bb8cc96d79c48af19bd045"></a><br/></td></tr>
<tr class="separator:af142e40929bb8cc96d79c48af19bd045"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c0477225ec01865c550da5b3b2b6cc5"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a9c0477225ec01865c550da5b3b2b6cc5">sf::operator&lt;=</a> (const IpAddress &amp;left, const IpAddress &amp;right)</td></tr>
<tr class="memdesc:a9c0477225ec01865c550da5b3b2b6cc5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &lt;= operator to compare two IP addresses.  <a href="#a9c0477225ec01865c550da5b3b2b6cc5"></a><br/></td></tr>
<tr class="separator:a9c0477225ec01865c550da5b3b2b6cc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68124f60ee7ee08073bd1894d69b0ed2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a68124f60ee7ee08073bd1894d69b0ed2">sf::operator&gt;=</a> (const IpAddress &amp;left, const IpAddress &amp;right)</td></tr>
<tr class="memdesc:a68124f60ee7ee08073bd1894d69b0ed2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &gt;= operator to compare two IP addresses.  <a href="#a68124f60ee7ee08073bd1894d69b0ed2"></a><br/></td></tr>
<tr class="separator:a68124f60ee7ee08073bd1894d69b0ed2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3ee5a340ca1772a7d8287372906f2aec"><td class="memItemLeft" align="right" valign="top">std::istream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a3ee5a340ca1772a7d8287372906f2aec">sf::operator&gt;&gt;</a> (std::istream &amp;stream, IpAddress &amp;address)</td></tr>
<tr class="memdesc:a3ee5a340ca1772a7d8287372906f2aec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &gt;&gt; operator to extract an IP address from an input stream.  <a href="#a3ee5a340ca1772a7d8287372906f2aec"></a><br/></td></tr>
<tr class="separator:a3ee5a340ca1772a7d8287372906f2aec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a187b51844c6f96798fc68771c8dc8b27"><td class="memItemLeft" align="right" valign="top">std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf.php#a187b51844c6f96798fc68771c8dc8b27">sf::operator&lt;&lt;</a> (std::ostream &amp;stream, const IpAddress &amp;address)</td></tr>
<tr class="memdesc:a187b51844c6f96798fc68771c8dc8b27"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of &lt;&lt; operator to print an IP address to an output stream.  <a href="#a187b51844c6f96798fc68771c8dc8b27"></a><br/></td></tr>
<tr class="separator:a187b51844c6f96798fc68771c8dc8b27"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
</div><!-- contents -->
<?php
    require("../footer.php");
?>
