<?php
    $version = '2.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_a0fcb5a19f655e235834e6382998c7e0.php">sfml</a></li><li class="navelem"><a class="el" href="dir_29bf4fae8a8e962aff98775afacdab0f.php">sfml</a></li><li class="navelem"><a class="el" href="dir_793f6ba77cf4e8a5d963fd5c095c876f.php">extlibs</a></li><li class="navelem"><a class="el" href="dir_68d8c18478ca54c694885cb8cbc52e5a.php">headers</a></li><li class="navelem"><a class="el" href="dir_1659f8737ee18542010349efee4175b2.php">libfreetype</a></li><li class="navelem"><a class="el" href="dir_8d72d6c3adad3bcfb58fa15e2b0d2e4e.php">windows</a></li><li class="navelem"><a class="el" href="dir_80e8051d9d307039295ff8d82b0d0825.php">freetype</a></li><li class="navelem"><a class="el" href="dir_68f2a82c7fb3cd35dc78c39d1445073b.php">config</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">ftoption.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/*  ftoption.h                                                             */</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">/*    User-selectable configuration macros (specification only).           */</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">/*  Copyright 1996-2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,   */</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">/*            2010 by                                                      */</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">/*  David Turner, Robert Wilhelm, and Werner Lemberg.                      */</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">/*  This file is part of the FreeType project, and may only be used,       */</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">/*  modified, and distributed under the terms of the FreeType project      */</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">/*  license, LICENSE.TXT.  By continuing to use, modify, or distribute     */</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">/*  this file you indicate that you have read the license and              */</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">/*  understand and accept it fully.                                        */</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">/*                                                                         */</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">/***************************************************************************/</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#ifndef __FTOPTION_H__</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define __FTOPTION_H__</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;ft2build.h&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;FT_BEGIN_HEADER</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="comment">/*                 USER-SELECTABLE CONFIGURATION MACROS                  */</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="comment">/* This file contains the default configuration macro definitions for    */</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="comment">/* a standard build of the FreeType library.  There are three ways to    */</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="comment">/* use this file to build project-specific versions of the library:      */</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="comment">/*  - You can modify this file by hand, but this is not recommended in   */</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">/*    cases where you would like to build several versions of the        */</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="comment">/*    library from a single source directory.                            */</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="comment">/*  - You can put a copy of this file in your build directory, more      */</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="comment">/*    precisely in `$BUILD/freetype/config/ftoption.h&#39;, where `$BUILD&#39;   */</span></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="comment">/*    is the name of a directory that is included _before_ the FreeType  */</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="comment">/*    include path during compilation.                                   */</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="comment">/*    The default FreeType Makefiles and Jamfiles use the build          */</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="comment">/*    directory `builds/&lt;system&gt;&#39; by default, but you can easily change  */</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="comment">/*    that for your own projects.                                        */</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="comment">/*  - Copy the file &lt;ft2build.h&gt; to `$BUILD/ft2build.h&#39; and modify it    */</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="comment">/*    slightly to pre-define the macro FT_CONFIG_OPTIONS_H used to       */</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="comment">/*    locate this file during the build.  For example,                   */</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="comment">/*      #define FT_CONFIG_OPTIONS_H  &lt;myftoptions.h&gt;                     */</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="comment">/*      #include &lt;freetype/config/ftheader.h&gt;                            */</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="comment">/*    will use `$BUILD/myftoptions.h&#39; instead of this file for macro     */</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="comment">/*    definitions.                                                       */</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="comment">/*    Note also that you can similarly pre-define the macro              */</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="comment">/*    FT_CONFIG_MODULES_H used to locate the file listing of the modules */</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="comment">/*    that are statically linked to the library at compile time.  By     */</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="comment">/*    default, this file is &lt;freetype/config/ftmodule.h&gt;.                */</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="comment">/*  We highly recommend using the third method whenever possible.        */</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="comment">/**** G E N E R A L   F R E E T Y P E   2   C O N F I G U R A T I O N ****/</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="comment">/* Uncomment the line below if you want to activate sub-pixel rendering  */</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="comment">/* (a.k.a. LCD rendering, or ClearType) in this build of the library.    */</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="comment">/* Note that this feature is covered by several Microsoft patents        */</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="comment">/* and should not be activated in any default build of the library.      */</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="comment">/* This macro has no impact on the FreeType API, only on its             */</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="comment">/* _implementation_.  For example, using FT_RENDER_MODE_LCD when calling */</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="comment">/* FT_Render_Glyph still generates a bitmap that is 3 times wider than   */</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="comment">/* the original size in case this macro isn&#39;t defined; however, each     */</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="comment">/* triplet of subpixels has R=G=B.                                       */</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="comment">/* This is done to allow FreeType clients to run unmodified, forcing     */</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="comment">/* them to display normal gray-level anti-aliased glyphs.                */</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="comment">/* #define FT_CONFIG_OPTION_SUBPIXEL_RENDERING */</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="comment">/* Many compilers provide a non-ANSI 64-bit data type that can be used   */</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="comment">/* by FreeType to speed up some computations.  However, this will create */</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="comment">/* some problems when compiling the library in strict ANSI mode.         */</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="comment">/* For this reason, the use of 64-bit integers is normally disabled when */</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="comment">/* the __STDC__ macro is defined.  You can however disable this by       */</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="comment">/* defining the macro FT_CONFIG_OPTION_FORCE_INT64 here.                 */</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="comment">/* For most compilers, this will only create compilation warnings when   */</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="comment">/* building the library.                                                 */</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="comment">/* ObNote: The compiler-specific 64-bit integers are detected in the     */</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="comment">/*         file `ftconfig.h&#39; either statically or through the            */</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="comment">/*         `configure&#39; script on supported platforms.                    */</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">#undef FT_CONFIG_OPTION_FORCE_INT64</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="comment">/* If this macro is defined, do not try to use an assembler version of   */</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="comment">/* performance-critical functions (e.g. FT_MulFix).  You should only do  */</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="comment">/* that to verify that the assembler function works properly, or to      */</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="comment">/* execute benchmark tests of the various implementations.               */</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="comment">/* #define FT_CONFIG_OPTION_NO_ASSEMBLER */</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="comment">/* If this macro is defined, try to use an inlined assembler version of  */</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="comment">/* the `FT_MulFix&#39; function, which is a `hotspot&#39; when loading and       */</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="comment">/* hinting glyphs, and which should be executed as fast as possible.     */</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="comment">/* Note that if your compiler or CPU is not supported, this will default */</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">/* to the standard and portable implementation found in `ftcalc.c&#39;.      */</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_INLINE_MULFIX</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="comment">/* LZW-compressed file support.                                          */</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="comment">/*   FreeType now handles font files that have been compressed with the  */</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="comment">/*   `compress&#39; program.  This is mostly used to parse many of the PCF   */</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="comment">/*   files that come with various X11 distributions.  The implementation */</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="comment">/*   uses NetBSD&#39;s `zopen&#39; to partially uncompress the file on the fly   */</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="comment">/*   (see src/lzw/ftgzip.c).                                             */</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="comment">/*   Define this macro if you want to enable this `feature&#39;.             */</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_USE_LZW</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="comment">/* Gzip-compressed file support.                                         */</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="comment">/*   FreeType now handles font files that have been compressed with the  */</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="comment">/*   `gzip&#39; program.  This is mostly used to parse many of the PCF files */</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="comment">/*   that come with XFree86.  The implementation uses `zlib&#39; to          */</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="comment">/*   partially uncompress the file on the fly (see src/gzip/ftgzip.c).   */</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="comment">/*   Define this macro if you want to enable this `feature&#39;.  See also   */</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="comment">/*   the macro FT_CONFIG_OPTION_SYSTEM_ZLIB below.                       */</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_USE_ZLIB</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="comment">/* ZLib library selection                                                */</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="comment">/*   This macro is only used when FT_CONFIG_OPTION_USE_ZLIB is defined.  */</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="comment">/*   It allows FreeType&#39;s `ftgzip&#39; component to link to the system&#39;s     */</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="comment">/*   installation of the ZLib library.  This is useful on systems like   */</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="comment">/*   Unix or VMS where it generally is already available.                */</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="comment">/*   If you let it undefined, the component will use its own copy        */</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="comment">/*   of the zlib sources instead.  These have been modified to be        */</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="comment">/*   included directly within the component and *not* export external    */</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="comment">/*   function names.  This allows you to link any program with FreeType  */</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="comment">/*   _and_ ZLib without linking conflicts.                               */</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="comment">/*   Do not #undef this macro here since the build system might define   */</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="comment">/*   it for certain configurations only.                                 */</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="comment">/* #define FT_CONFIG_OPTION_SYSTEM_ZLIB */</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="comment">/* DLL export compilation                                                */</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="comment">/*   When compiling FreeType as a DLL, some systems/compilers need a     */</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="comment">/*   special keyword in front OR after the return type of function       */</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="comment">/*   declarations.                                                       */</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="comment">/*   Two macros are used within the FreeType source code to define       */</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="comment">/*   exported library functions: FT_EXPORT and FT_EXPORT_DEF.            */</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="comment">/*     FT_EXPORT( return_type )                                          */</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <span class="comment">/*       is used in a function declaration, as in                        */</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="comment">/*         FT_EXPORT( FT_Error )                                         */</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="comment">/*         FT_Init_FreeType( FT_Library*  alibrary );                    */</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="comment">/*     FT_EXPORT_DEF( return_type )                                      */</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="comment">/*       is used in a function definition, as in                         */</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="comment">/*         FT_EXPORT_DEF( FT_Error )                                     */</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="comment">/*         FT_Init_FreeType( FT_Library*  alibrary )                     */</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="comment">/*         {                                                             */</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="comment">/*           ... some code ...                                           */</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="comment">/*           return FT_Err_Ok;                                           */</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="comment">/*         }                                                             */</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="comment">/*   You can provide your own implementation of FT_EXPORT and            */</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="comment">/*   FT_EXPORT_DEF here if you want.  If you leave them undefined, they  */</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="comment">/*   will be later automatically defined as `extern return_type&#39; to      */</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="comment">/*   allow normal compilation.                                           */</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="comment">/*   Do not #undef these macros here since the build system might define */</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="comment">/*   them for certain configurations only.                               */</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="comment">/* #define FT_EXPORT(x)      extern x */</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="comment">/* #define FT_EXPORT_DEF(x)  x */</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="comment">/* Glyph Postscript Names handling                                       */</span></div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="comment">/*   By default, FreeType 2 is compiled with the `psnames&#39; module.  This */</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  <span class="comment">/*   module is in charge of converting a glyph name string into a        */</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="comment">/*   Unicode value, or return a Macintosh standard glyph name for the    */</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="comment">/*   use with the TrueType `post&#39; table.                                 */</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="comment">/*   Undefine this macro if you do not want `psnames&#39; compiled in your   */</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="comment">/*   build of FreeType.  This has the following effects:                 */</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="comment">/*   - The TrueType driver will provide its own set of glyph names,      */</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="comment">/*     if you build it to support postscript names in the TrueType       */</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="comment">/*     `post&#39; table.                                                     */</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="comment">/*   - The Type 1 driver will not be able to synthesize a Unicode        */</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="comment">/*     charmap out of the glyphs found in the fonts.                     */</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="comment">/*   You would normally undefine this configuration macro when building  */</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="comment">/*   a version of FreeType that doesn&#39;t contain a Type 1 or CFF driver.  */</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_POSTSCRIPT_NAMES</span></div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="comment">/* Postscript Names to Unicode Values support                            */</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="comment">/*   By default, FreeType 2 is built with the `PSNames&#39; module compiled  */</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="comment">/*   in.  Among other things, the module is used to convert a glyph name */</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="comment">/*   into a Unicode value.  This is especially useful in order to        */</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="comment">/*   synthesize on the fly a Unicode charmap from the CFF/Type 1 driver  */</span></div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="comment">/*   through a big table named the `Adobe Glyph List&#39; (AGL).             */</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <span class="comment">/*   Undefine this macro if you do not want the Adobe Glyph List         */</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="comment">/*   compiled in your `PSNames&#39; module.  The Type 1 driver will not be   */</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="comment">/*   able to synthesize a Unicode charmap out of the glyphs found in the */</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="comment">/*   fonts.                                                              */</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_ADOBE_GLYPH_LIST</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="comment">/* Support for Mac fonts                                                 */</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="comment">/*   Define this macro if you want support for outline fonts in Mac      */</span></div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="comment">/*   format (mac dfont, mac resource, macbinary containing a mac         */</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <span class="comment">/*   resource) on non-Mac platforms.                                     */</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  <span class="comment">/*   Note that the `FOND&#39; resource isn&#39;t checked.                        */</span></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_MAC_FONTS</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <span class="comment">/* Guessing methods to access embedded resource forks                    */</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="comment">/*   Enable extra Mac fonts support on non-Mac platforms (e.g.           */</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  <span class="comment">/*   GNU/Linux).                                                         */</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="comment">/*   Resource forks which include fonts data are stored sometimes in     */</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="comment">/*   locations which users or developers don&#39;t expected.  In some cases, */</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="comment">/*   resource forks start with some offset from the head of a file.  In  */</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="comment">/*   other cases, the actual resource fork is stored in file different   */</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="comment">/*   from what the user specifies.  If this option is activated,         */</span></div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="comment">/*   FreeType tries to guess whether such offsets or different file      */</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  <span class="comment">/*   names must be used.                                                 */</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="comment">/*   Note that normal, direct access of resource forks is controlled via */</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="comment">/*   the FT_CONFIG_OPTION_MAC_FONTS option.                              */</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="preprocessor">#ifdef FT_CONFIG_OPTION_MAC_FONTS</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_CONFIG_OPTION_GUESSING_EMBEDDED_RFORK</span></div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  <span class="comment">/* Allow the use of FT_Incremental_Interface to load typefaces that      */</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="comment">/* contain no glyph data, but supply it via a callback function.         */</span></div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <span class="comment">/* This is required by clients supporting document formats which         */</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="comment">/* supply font data incrementally as the document is parsed, such        */</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;  <span class="comment">/* as the Ghostscript interpreter for the PostScript language.           */</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_INCREMENTAL</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="comment">/* The size in bytes of the render pool used by the scan-line converter  */</span></div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="comment">/* to do all of its work.                                                */</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  <span class="comment">/* This must be greater than 4KByte if you use FreeType to rasterize     */</span></div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="comment">/* glyphs; otherwise, you may set it to zero to avoid unnecessary        */</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="comment">/* allocation of the render pool.                                        */</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="preprocessor">#define FT_RENDER_POOL_SIZE  16384L</span></div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="comment">/* FT_MAX_MODULES                                                        */</span></div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="comment">/*   The maximum number of modules that can be registered in a single    */</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  <span class="comment">/*   FreeType library object.  32 is the default.                        */</span></div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="preprocessor">#define FT_MAX_MODULES  32</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  <span class="comment">/* Debug level                                                           */</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  <span class="comment">/*   FreeType can be compiled in debug or trace mode.  In debug mode,    */</span></div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  <span class="comment">/*   errors are reported through the `ftdebug&#39; component.  In trace      */</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="comment">/*   mode, additional messages are sent to the standard output during    */</span></div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  <span class="comment">/*   execution.                                                          */</span></div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <span class="comment">/*   Define FT_DEBUG_LEVEL_ERROR to build the library in debug mode.     */</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  <span class="comment">/*   Define FT_DEBUG_LEVEL_TRACE to build it in trace mode.              */</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  <span class="comment">/*   Don&#39;t define any of these macros to compile in `release&#39; mode!      */</span></div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="comment">/*   Do not #undef these macros here since the build system might define */</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;  <span class="comment">/*   them for certain configurations only.                               */</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;<span class="comment">/* #define FT_DEBUG_LEVEL_ERROR */</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="comment">/* #define FT_DEBUG_LEVEL_TRACE */</span></div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  <span class="comment">/* Memory Debugging                                                      */</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  <span class="comment">/*   FreeType now comes with an integrated memory debugger that is       */</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  <span class="comment">/*   capable of detecting simple errors like memory leaks or double      */</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="comment">/*   deletes.  To compile it within your build of the library, you       */</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  <span class="comment">/*   should define FT_DEBUG_MEMORY here.                                 */</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  <span class="comment">/*   Note that the memory debugger is only activated at runtime when     */</span></div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="comment">/*   when the _environment_ variable `FT2_DEBUG_MEMORY&#39; is defined also! */</span></div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  <span class="comment">/*   Do not #undef this macro here since the build system might define   */</span></div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <span class="comment">/*   it for certain configurations only.                                 */</span></div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;<span class="comment">/* #define FT_DEBUG_MEMORY */</span></div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;  <span class="comment">/* Module errors                                                         */</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;  <span class="comment">/*   If this macro is set (which is _not_ the default), the higher byte  */</span></div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  <span class="comment">/*   of an error code gives the module in which the error has occurred,  */</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  <span class="comment">/*   while the lower byte is the real error code.                        */</span></div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  <span class="comment">/*   Setting this macro makes sense for debugging purposes only, since   */</span></div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="comment">/*   it would break source compatibility of certain programs that use    */</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  <span class="comment">/*   FreeType 2.                                                         */</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  <span class="comment">/*   More details can be found in the files ftmoderr.h and fterrors.h.   */</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;<span class="preprocessor">#undef FT_CONFIG_OPTION_USE_MODULE_ERRORS</span></div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  <span class="comment">/* Position Independent Code                                             */</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  <span class="comment">/*   If this macro is set (which is _not_ the default), FreeType2 will   */</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="comment">/*   avoid creating constants that require address fixups.  Instead the  */</span></div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  <span class="comment">/*   constants will be moved into a struct and additional intialization  */</span></div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  <span class="comment">/*   code will be used.                                                  */</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  <span class="comment">/*   Setting this macro is needed for systems that prohibit address      */</span></div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="comment">/*   fixups, such as BREW.                                               */</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;<span class="comment">/* #define FT_CONFIG_OPTION_PIC */</span></div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  <span class="comment">/****        S F N T   D R I V E R    C O N F I G U R A T I O N       ****/</span></div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_EMBEDDED_BITMAPS if you want to support       */</span></div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  <span class="comment">/* embedded bitmaps in all formats using the SFNT module (namely         */</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="comment">/* TrueType &amp; OpenType).                                                 */</span></div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;<span class="preprocessor">#define TT_CONFIG_OPTION_EMBEDDED_BITMAPS</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_POSTSCRIPT_NAMES if you want to be able to    */</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  <span class="comment">/* load and enumerate the glyph Postscript names in a TrueType or        */</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;  <span class="comment">/* OpenType file.                                                        */</span></div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  <span class="comment">/* Note that when you do not compile the `PSNames&#39; module by undefining  */</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  <span class="comment">/* the above FT_CONFIG_OPTION_POSTSCRIPT_NAMES, the `sfnt&#39; module will   */</span></div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;  <span class="comment">/* contain additional code used to read the PS Names table from a font.  */</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  <span class="comment">/* (By default, the module uses `PSNames&#39; to extract glyph names.)       */</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="preprocessor">#define TT_CONFIG_OPTION_POSTSCRIPT_NAMES</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_SFNT_NAMES if your applications need to       */</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;  <span class="comment">/* access the internal name table in a SFNT-based format like TrueType   */</span></div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="comment">/* or OpenType.  The name table contains various strings used to         */</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  <span class="comment">/* describe the font, like family name, copyright, version, etc.  It     */</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;  <span class="comment">/* does not contain any glyph name though.                               */</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;  <span class="comment">/* Accessing SFNT names is done through the functions declared in        */</span></div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  <span class="comment">/* `freetype/ftsnames.h&#39;.                                                */</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;<span class="preprocessor">#define TT_CONFIG_OPTION_SFNT_NAMES</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  <span class="comment">/* TrueType CMap support                                                 */</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;  <span class="comment">/*   Here you can fine-tune which TrueType CMap table format shall be    */</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  <span class="comment">/*   supported.                                                          */</span></div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;<span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_0</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_2</span></div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_4</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_6</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_8</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_10</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_12</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_13</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define TT_CONFIG_CMAP_FORMAT_14</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;  <span class="comment">/****    T R U E T Y P E   D R I V E R    C O N F I G U R A T I O N   ****/</span></div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_BYTECODE_INTERPRETER if you want to compile   */</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;  <span class="comment">/* a bytecode interpreter in the TrueType driver.                        */</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  <span class="comment">/* By undefining this, you will only compile the code necessary to load  */</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;  <span class="comment">/* TrueType glyphs without hinting.                                      */</span></div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;  <span class="comment">/*   Do not #undef this macro here, since the build system might         */</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  <span class="comment">/*   define it for certain configurations only.                          */</span></div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;<span class="preprocessor">#define TT_CONFIG_OPTION_BYTECODE_INTERPRETER</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;</div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  <span class="comment">/* If you define TT_CONFIG_OPTION_UNPATENTED_HINTING, a special version  */</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;  <span class="comment">/* of the TrueType bytecode interpreter is used that doesn&#39;t implement   */</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;  <span class="comment">/* any of the patented opcodes and algorithms.  The patents related to   */</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;  <span class="comment">/* TrueType hinting have expired worldwide since May 2010; this option   */</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  <span class="comment">/* is now deprecated.                                                    */</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;  <span class="comment">/* Note that the TT_CONFIG_OPTION_UNPATENTED_HINTING macro is *ignored*  */</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;  <span class="comment">/* if you define TT_CONFIG_OPTION_BYTECODE_INTERPRETER; in other words,  */</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;  <span class="comment">/* either define TT_CONFIG_OPTION_BYTECODE_INTERPRETER or                */</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;  <span class="comment">/* TT_CONFIG_OPTION_UNPATENTED_HINTING but not both at the same time.    */</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;  <span class="comment">/* This macro is only useful for a small number of font files (mostly    */</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  <span class="comment">/* for Asian scripts) that require bytecode interpretation to properly   */</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;  <span class="comment">/* load glyphs.  For all other fonts, this produces unpleasant results,  */</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;  <span class="comment">/* thus the unpatented interpreter is never used to load glyphs from     */</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;  <span class="comment">/* TrueType fonts unless one of the following two options is used.       */</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;  <span class="comment">/*   - The unpatented interpreter is explicitly activated by the user    */</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;  <span class="comment">/*     through the FT_PARAM_TAG_UNPATENTED_HINTING parameter tag         */</span></div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;  <span class="comment">/*     when opening the FT_Face.                                         */</span></div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;  <span class="comment">/*   - FreeType detects that the FT_Face corresponds to one of the       */</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  <span class="comment">/*     `trick&#39; fonts (e.g., `Mingliu&#39;) it knows about.  The font engine  */</span></div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;  <span class="comment">/*     contains a hard-coded list of font names and other matching       */</span></div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;  <span class="comment">/*     parameters (see function `tt_face_init&#39; in file                   */</span></div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;  <span class="comment">/*     `src/truetype/ttobjs.c&#39;).                                         */</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;  <span class="comment">/* Here a sample code snippet for using FT_PARAM_TAG_UNPATENTED_HINTING. */</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;  <span class="comment">/*   {                                                                   */</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;  <span class="comment">/*     FT_Parameter  parameter;                                          */</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;  <span class="comment">/*     FT_Open_Args  open_args;                                          */</span></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;  <span class="comment">/*     parameter.tag = FT_PARAM_TAG_UNPATENTED_HINTING;                  */</span></div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;  <span class="comment">/*     open_args.flags      = FT_OPEN_PATHNAME | FT_OPEN_PARAMS;         */</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  <span class="comment">/*     open_args.pathname   = my_font_pathname;                          */</span></div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;  <span class="comment">/*     open_args.num_params = 1;                                         */</span></div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;  <span class="comment">/*     open_args.params     = &amp;parameter;                                */</span></div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;  <span class="comment">/*     error = FT_Open_Face( library, &amp;open_args, index, &amp;face );        */</span></div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  <span class="comment">/*     ...                                                               */</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;  <span class="comment">/*   }                                                                   */</span></div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;<span class="comment">/* #define TT_CONFIG_OPTION_UNPATENTED_HINTING */</span></div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_INTERPRETER_SWITCH to compile the TrueType    */</span></div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;  <span class="comment">/* bytecode interpreter with a huge switch statement, rather than a call */</span></div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  <span class="comment">/* table.  This results in smaller and faster code for a number of       */</span></div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;  <span class="comment">/* architectures.                                                        */</span></div>
<div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00559"></a><span class="lineno">  559</span>&#160;  <span class="comment">/* Note however that on some compiler/processor combinations, undefining */</span></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;  <span class="comment">/* this macro will generate faster, though larger, code.                 */</span></div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="preprocessor">#define TT_CONFIG_OPTION_INTERPRETER_SWITCH</span></div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_COMPONENT_OFFSET_SCALED to compile the        */</span></div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160;  <span class="comment">/* TrueType glyph loader to use Apple&#39;s definition of how to handle      */</span></div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;  <span class="comment">/* component offsets in composite glyphs.                                */</span></div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;  <span class="comment">/* Apple and MS disagree on the default behavior of component offsets    */</span></div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;  <span class="comment">/* in composites.  Apple says that they should be scaled by the scaling  */</span></div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  <span class="comment">/* factors in the transformation matrix (roughly, it&#39;s more complex)     */</span></div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;  <span class="comment">/* while MS says they should not.  OpenType defines two bits in the      */</span></div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160;  <span class="comment">/* composite flags array which can be used to disambiguate, but old      */</span></div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;  <span class="comment">/* fonts will not have them.                                             */</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;  <span class="comment">/*   http://partners.adobe.com/asn/developer/opentype/glyf.html          */</span></div>
<div class="line"><a name="l00579"></a><span class="lineno">  579</span>&#160;  <span class="comment">/*   http://fonts.apple.com/TTRefMan/RM06/Chap6glyf.html                 */</span></div>
<div class="line"><a name="l00580"></a><span class="lineno">  580</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00581"></a><span class="lineno">  581</span>&#160;<span class="preprocessor">#undef TT_CONFIG_OPTION_COMPONENT_OFFSET_SCALED</span></div>
<div class="line"><a name="l00582"></a><span class="lineno">  582</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00583"></a><span class="lineno">  583</span>&#160;</div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00586"></a><span class="lineno">  586</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_GX_VAR_SUPPORT if you want to include         */</span></div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;  <span class="comment">/* support for Apple&#39;s distortable font technology (fvar, gvar, cvar,    */</span></div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;  <span class="comment">/* and avar tables).  This has many similarities to Type 1 Multiple      */</span></div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;  <span class="comment">/* Masters support.                                                      */</span></div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="preprocessor">#define TT_CONFIG_OPTION_GX_VAR_SUPPORT</span></div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00595"></a><span class="lineno">  595</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00596"></a><span class="lineno">  596</span>&#160;  <span class="comment">/* Define TT_CONFIG_OPTION_BDF if you want to include support for        */</span></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;  <span class="comment">/* an embedded `BDF &#39; table within SFNT-based bitmap formats.            */</span></div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160;<span class="preprocessor">#define TT_CONFIG_OPTION_BDF</span></div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00601"></a><span class="lineno">  601</span>&#160;</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;  <span class="comment">/****      T Y P E 1   D R I V E R    C O N F I G U R A T I O N       ****/</span></div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;</div>
<div class="line"><a name="l00610"></a><span class="lineno">  610</span>&#160;</div>
<div class="line"><a name="l00611"></a><span class="lineno">  611</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00612"></a><span class="lineno">  612</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00613"></a><span class="lineno">  613</span>&#160;  <span class="comment">/* T1_MAX_DICT_DEPTH is the maximal depth of nest dictionaries and       */</span></div>
<div class="line"><a name="l00614"></a><span class="lineno">  614</span>&#160;  <span class="comment">/* arrays in the Type 1 stream (see t1load.c).  A minimum of 4 is        */</span></div>
<div class="line"><a name="l00615"></a><span class="lineno">  615</span>&#160;  <span class="comment">/* required.                                                             */</span></div>
<div class="line"><a name="l00616"></a><span class="lineno">  616</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00617"></a><span class="lineno">  617</span>&#160;<span class="preprocessor">#define T1_MAX_DICT_DEPTH  5</span></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160;  <span class="comment">/* T1_MAX_SUBRS_CALLS details the maximum number of nested sub-routine   */</span></div>
<div class="line"><a name="l00623"></a><span class="lineno">  623</span>&#160;  <span class="comment">/* calls during glyph loading.                                           */</span></div>
<div class="line"><a name="l00624"></a><span class="lineno">  624</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="preprocessor">#define T1_MAX_SUBRS_CALLS  16</span></div>
<div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00627"></a><span class="lineno">  627</span>&#160;</div>
<div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;  <span class="comment">/* T1_MAX_CHARSTRING_OPERANDS is the charstring stack&#39;s capacity.  A     */</span></div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;  <span class="comment">/* minimum of 16 is required.                                            */</span></div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160;  <span class="comment">/* The Chinese font MingTiEG-Medium (CNS 11643 character set) needs 256. */</span></div>
<div class="line"><a name="l00634"></a><span class="lineno">  634</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;<span class="preprocessor">#define T1_MAX_CHARSTRINGS_OPERANDS  256</span></div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00637"></a><span class="lineno">  637</span>&#160;</div>
<div class="line"><a name="l00638"></a><span class="lineno">  638</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00639"></a><span class="lineno">  639</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;  <span class="comment">/* Define this configuration macro if you want to prevent the            */</span></div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;  <span class="comment">/* compilation of `t1afm&#39;, which is in charge of reading Type 1 AFM      */</span></div>
<div class="line"><a name="l00642"></a><span class="lineno">  642</span>&#160;  <span class="comment">/* files into an existing face.  Note that if set, the T1 driver will be */</span></div>
<div class="line"><a name="l00643"></a><span class="lineno">  643</span>&#160;  <span class="comment">/* unable to produce kerning distances.                                  */</span></div>
<div class="line"><a name="l00644"></a><span class="lineno">  644</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00645"></a><span class="lineno">  645</span>&#160;<span class="preprocessor">#undef T1_CONFIG_OPTION_NO_AFM</span></div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00647"></a><span class="lineno">  647</span>&#160;</div>
<div class="line"><a name="l00648"></a><span class="lineno">  648</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00649"></a><span class="lineno">  649</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;  <span class="comment">/* Define this configuration macro if you want to prevent the            */</span></div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;  <span class="comment">/* compilation of the Multiple Masters font support in the Type 1        */</span></div>
<div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;  <span class="comment">/* driver.                                                               */</span></div>
<div class="line"><a name="l00653"></a><span class="lineno">  653</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160;<span class="preprocessor">#undef T1_CONFIG_OPTION_NO_MM_SUPPORT</span></div>
<div class="line"><a name="l00655"></a><span class="lineno">  655</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00656"></a><span class="lineno">  656</span>&#160;</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160;  <span class="comment">/****    A U T O F I T   M O D U L E    C O N F I G U R A T I O N     ****/</span></div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;  <span class="comment">/****                                                                 ****/</span></div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;</div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;  <span class="comment">/* Compile autofit module with CJK (Chinese, Japanese, Korean) script    */</span></div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;  <span class="comment">/* support.                                                              */</span></div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="preprocessor">#define AF_CONFIG_OPTION_CJK</span></div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;  <span class="comment">/*************************************************************************/</span></div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;  <span class="comment">/* Compile autofit module with Indic script support.                     */</span></div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;  <span class="comment">/*                                                                       */</span></div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="preprocessor">#define AF_CONFIG_OPTION_INDIC</span></div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;  <span class="comment">/* */</span></div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;  <span class="comment">/*</span></div>
<div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="comment">   * Define this variable if you want to keep the layout of internal</span></div>
<div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="comment">   * structures that was used prior to FreeType 2.2.  This also compiles in</span></div>
<div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="comment">   * a few obsolete functions to avoid linking problems on typical Unix</span></div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;<span class="comment">   * distributions.</span></div>
<div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment">   *</span></div>
<div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="comment">   * For embedded systems or building a new distribution from scratch, it</span></div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;<span class="comment">   * is recommended to disable the macro since it reduces the library&#39;s code</span></div>
<div class="line"><a name="l00690"></a><span class="lineno">  690</span>&#160;<span class="comment">   * size and activates a few memory-saving optimizations as well.</span></div>
<div class="line"><a name="l00691"></a><span class="lineno">  691</span>&#160;<span class="comment">   */</span></div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="preprocessor">#define FT_CONFIG_OPTION_OLD_INTERNALS</span></div>
<div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;  <span class="comment">/*</span></div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="comment">   *  To detect legacy cache-lookup call from a rogue client (&lt;= 2.1.7),</span></div>
<div class="line"><a name="l00697"></a><span class="lineno">  697</span>&#160;<span class="comment">   *  we restrict the number of charmaps in a font.  The current API of</span></div>
<div class="line"><a name="l00698"></a><span class="lineno">  698</span>&#160;<span class="comment">   *  FTC_CMapCache_Lookup() takes cmap_index &amp; charcode, but old API</span></div>
<div class="line"><a name="l00699"></a><span class="lineno">  699</span>&#160;<span class="comment">   *  takes charcode only.  To determine the passed value is for cmap_index</span></div>
<div class="line"><a name="l00700"></a><span class="lineno">  700</span>&#160;<span class="comment">   *  or charcode, the possible cmap_index is restricted not to exceed</span></div>
<div class="line"><a name="l00701"></a><span class="lineno">  701</span>&#160;<span class="comment">   *  the minimum possible charcode by a rogue client.  It is also very</span></div>
<div class="line"><a name="l00702"></a><span class="lineno">  702</span>&#160;<span class="comment">   *  unlikely that a rogue client is interested in Unicode values 0 to 15.</span></div>
<div class="line"><a name="l00703"></a><span class="lineno">  703</span>&#160;<span class="comment">   *</span></div>
<div class="line"><a name="l00704"></a><span class="lineno">  704</span>&#160;<span class="comment">   *  NOTE: The original threshold was 4 deduced from popular number of</span></div>
<div class="line"><a name="l00705"></a><span class="lineno">  705</span>&#160;<span class="comment">   *        cmap subtables in UCS-4 TrueType fonts, but now it is not</span></div>
<div class="line"><a name="l00706"></a><span class="lineno">  706</span>&#160;<span class="comment">   *        irregular for OpenType fonts to have more than 4 subtables,</span></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;<span class="comment">   *        because variation selector subtables are available for Apple</span></div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;<span class="comment">   *        and Microsoft platforms.</span></div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;<span class="comment">   */</span></div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;<span class="preprocessor">#ifdef FT_CONFIG_OPTION_OLD_INTERNALS</span></div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define FT_MAX_CHARMAP_CACHEABLE 15</span></div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00714"></a><span class="lineno">  714</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00715"></a><span class="lineno">  715</span>&#160;</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160;  <span class="comment">/*</span></div>
<div class="line"><a name="l00717"></a><span class="lineno">  717</span>&#160;<span class="comment">   * This macro is defined if either unpatented or native TrueType</span></div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;<span class="comment">   * hinting is requested by the definitions above.</span></div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160;<span class="comment">   */</span></div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;<span class="preprocessor">#ifdef TT_CONFIG_OPTION_BYTECODE_INTERPRETER</span></div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define  TT_USE_BYTECODE_INTERPRETER</span></div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#undef   TT_CONFIG_OPTION_UNPATENTED_HINTING</span></div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#elif defined TT_CONFIG_OPTION_UNPATENTED_HINTING</span></div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define  TT_USE_BYTECODE_INTERPRETER</span></div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;FT_END_HEADER</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __FTOPTION_H__ */</span><span class="preprocessor"></span></div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00732"></a><span class="lineno">  732</span>&#160;</div>
<div class="line"><a name="l00733"></a><span class="lineno">  733</span>&#160;<span class="comment">/* END */</span></div>
</div><!-- fragment --></div><!-- contents -->
<?php
    require("../footer.php");
?>
