<?php
    $version = '2.6.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'Graphics module'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.php');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.php"><span>Related&#160;Pages</span></a></li>
      <li class="current"><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#namespaces">Namespaces</a> &#124;
<a href="#nested-classes">Classes</a> &#124;
<a href="#enum-members">Enumerations</a>  </div>
  <div class="headertitle"><div class="title">Graphics module</div></div>
</div><!--header-->
<div class="contents">

<p>2D graphics module: sprites, text, shapes, ...  
<a href="#details">More...</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="namespaces" name="namespaces"></a>
Namespaces</h2></td></tr>
<tr class="memitem:namespacesf_1_1Glsl"><td class="memItemLeft" align="right" valign="top">namespace &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="namespacesf_1_1Glsl.php">sf::Glsl</a></td></tr>
<tr class="memdesc:namespacesf_1_1Glsl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Namespace with GLSL types. <br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsf_1_1BlendMode.php">sf::BlendMode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Blending modes for drawing.  <a href="structsf_1_1BlendMode.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1CircleShape.php">sf::CircleShape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a circle.  <a href="classsf_1_1CircleShape.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Color.php">sf::Color</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class for manipulating RGBA colors.  <a href="classsf_1_1Color.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1ConvexShape.php">sf::ConvexShape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a convex polygon.  <a href="classsf_1_1ConvexShape.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Drawable.php">sf::Drawable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Abstract base class for objects that can be drawn to a render target.  <a href="classsf_1_1Drawable.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Font.php">sf::Font</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for loading and manipulating character fonts.  <a href="classsf_1_1Font.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Glyph.php">sf::Glyph</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure describing a glyph.  <a href="classsf_1_1Glyph.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Image.php">sf::Image</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Class for loading, manipulating and saving images.  <a href="classsf_1_1Image.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Rect.php">sf::Rect&lt; T &gt;</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Utility class for manipulating 2D axis aligned rectangles.  <a href="classsf_1_1Rect.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RectangleShape.php">sf::RectangleShape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specialized shape representing a rectangle.  <a href="classsf_1_1RectangleShape.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderStates.php">sf::RenderStates</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define the states used for drawing to a <a class="el" href="classsf_1_1RenderTarget.php" title="Base class for all render targets (window, texture, ...)">RenderTarget</a>.  <a href="classsf_1_1RenderStates.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderTarget.php">sf::RenderTarget</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all render targets (window, texture, ...)  <a href="classsf_1_1RenderTarget.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderTexture.php">sf::RenderTexture</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Target for off-screen 2D rendering into a texture.  <a href="classsf_1_1RenderTexture.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1RenderWindow.php">sf::RenderWindow</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Window.php" title="Window that serves as a target for OpenGL rendering.">Window</a> that can serve as a target for 2D drawing.  <a href="classsf_1_1RenderWindow.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Shader.php" title="Shader class (vertex, geometry and fragment)">Shader</a> class (vertex, geometry and fragment)  <a href="classsf_1_1Shader.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Shape.php">sf::Shape</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for textured shapes with outline.  <a href="classsf_1_1Shape.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sprite.php">sf::Sprite</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Drawable.php" title="Abstract base class for objects that can be drawn to a render target.">Drawable</a> representation of a texture, with its own transformations, color, etc.  <a href="classsf_1_1Sprite.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Text.php">sf::Text</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Graphical text that can be drawn to a render target.  <a href="classsf_1_1Text.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Texture.php">sf::Texture</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Image.php" title="Class for loading, manipulating and saving images.">Image</a> living on the graphics card that can be used for drawing.  <a href="classsf_1_1Texture.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Transform.php">sf::Transform</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a 3x3 transform matrix.  <a href="classsf_1_1Transform.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Transformable.php">sf::Transformable</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decomposed transform defined by a position, a rotation and a scale.  <a href="classsf_1_1Transformable.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Vertex.php">sf::Vertex</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a point with color and texture coordinates.  <a href="classsf_1_1Vertex.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VertexArray.php">sf::VertexArray</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Define a set of one or more 2D primitives.  <a href="classsf_1_1VertexArray.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VertexBuffer.php">sf::VertexBuffer</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classsf_1_1Vertex.php" title="Define a point with color and texture coordinates.">Vertex</a> buffer storage for one or more 2D primitives.  <a href="classsf_1_1VertexBuffer.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1View.php">sf::View</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">2D camera that defines what region is shown on screen  <a href="classsf_1_1View.php#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="enum-members" name="enum-members"></a>
Enumerations</h2></td></tr>
<tr class="memitem:ga5ee56ac1339984909610713096283b1b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__graphics.php#ga5ee56ac1339984909610713096283b1b">sf::PrimitiveType</a> { <br />
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1bac7097d3e01778b9318def1f7ac35a785">sf::Points</a>
, <a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba2bf015eeff9f798dfc3d6d744d669f1e">sf::Lines</a>
, <a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba14d9eeec2c7c314f239a57bde35949fa">sf::LineStrip</a>
, <a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba880a7aa72c20b9f9beb7eb64d2434670">sf::Triangles</a>
, <br />
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba05e55fec6d32c2fc8328f94d07f91184">sf::TriangleStrip</a>
, <a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba363f7762b33706c805c6a451ad554f5e">sf::TriangleFan</a>
, <a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba5041359b76b4bd3d3e6ef738826b8743">sf::Quads</a>
, <a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba5b09910f5d0f39641342184ccd0d1de3">sf::LinesStrip</a> = LineStrip
, <br />
&#160;&#160;<a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba66643dbbb24bbacb405973ed80eebae0">sf::TrianglesStrip</a> = TriangleStrip
, <a class="el" href="group__graphics.php#gga5ee56ac1339984909610713096283b1ba5338a2c6d922151fe50f235036af8a20">sf::TrianglesFan</a> = TriangleFan
<br />
 }</td></tr>
<tr class="memdesc:ga5ee56ac1339984909610713096283b1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Types of primitives that a <a class="el" href="classsf_1_1VertexArray.php" title="Define a set of one or more 2D primitives.">sf::VertexArray</a> can render.  <a href="group__graphics.php#ga5ee56ac1339984909610713096283b1b">More...</a><br /></td></tr>
<tr class="separator:ga5ee56ac1339984909610713096283b1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>2D graphics module: sprites, text, shapes, ... </p>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a id="ga5ee56ac1339984909610713096283b1b" name="ga5ee56ac1339984909610713096283b1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ga5ee56ac1339984909610713096283b1b">&#9670;&#160;</a></span>PrimitiveType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__graphics.php#ga5ee56ac1339984909610713096283b1b">sf::PrimitiveType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Types of primitives that a <a class="el" href="classsf_1_1VertexArray.php" title="Define a set of one or more 2D primitives.">sf::VertexArray</a> can render. </p>
<p>Points and lines have no area, therefore their thickness will always be 1 pixel, regardless the current transform and view. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1bac7097d3e01778b9318def1f7ac35a785" name="gga5ee56ac1339984909610713096283b1bac7097d3e01778b9318def1f7ac35a785"></a>Points&#160;</td><td class="fielddoc"><p>List of individual points. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba2bf015eeff9f798dfc3d6d744d669f1e" name="gga5ee56ac1339984909610713096283b1ba2bf015eeff9f798dfc3d6d744d669f1e"></a>Lines&#160;</td><td class="fielddoc"><p>List of individual lines. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba14d9eeec2c7c314f239a57bde35949fa" name="gga5ee56ac1339984909610713096283b1ba14d9eeec2c7c314f239a57bde35949fa"></a>LineStrip&#160;</td><td class="fielddoc"><p>List of connected lines, a point uses the previous point to form a line. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba880a7aa72c20b9f9beb7eb64d2434670" name="gga5ee56ac1339984909610713096283b1ba880a7aa72c20b9f9beb7eb64d2434670"></a>Triangles&#160;</td><td class="fielddoc"><p>List of individual triangles. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba05e55fec6d32c2fc8328f94d07f91184" name="gga5ee56ac1339984909610713096283b1ba05e55fec6d32c2fc8328f94d07f91184"></a>TriangleStrip&#160;</td><td class="fielddoc"><p>List of connected triangles, a point uses the two previous points to form a triangle. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba363f7762b33706c805c6a451ad554f5e" name="gga5ee56ac1339984909610713096283b1ba363f7762b33706c805c6a451ad554f5e"></a>TriangleFan&#160;</td><td class="fielddoc"><p>List of connected triangles, a point uses the common center and the previous point to form a triangle. </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba5041359b76b4bd3d3e6ef738826b8743" name="gga5ee56ac1339984909610713096283b1ba5041359b76b4bd3d3e6ef738826b8743"></a>Quads&#160;</td><td class="fielddoc"><p>List of individual quads (deprecated, don't work with OpenGL ES) </p>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba5b09910f5d0f39641342184ccd0d1de3" name="gga5ee56ac1339984909610713096283b1ba5b09910f5d0f39641342184ccd0d1de3"></a>LinesStrip&#160;</td><td class="fielddoc"><dl class="deprecated"><dt><b><a class="el" href="deprecated.php#_deprecated000001">Deprecated:</a></b></dt><dd>Use LineStrip instead </dd></dl>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba66643dbbb24bbacb405973ed80eebae0" name="gga5ee56ac1339984909610713096283b1ba66643dbbb24bbacb405973ed80eebae0"></a>TrianglesStrip&#160;</td><td class="fielddoc"><dl class="deprecated"><dt><b><a class="el" href="deprecated.php#_deprecated000002">Deprecated:</a></b></dt><dd>Use TriangleStrip instead </dd></dl>
</td></tr>
<tr><td class="fieldname"><a id="gga5ee56ac1339984909610713096283b1ba5338a2c6d922151fe50f235036af8a20" name="gga5ee56ac1339984909610713096283b1ba5338a2c6d922151fe50f235036af8a20"></a>TrianglesFan&#160;</td><td class="fielddoc"><dl class="deprecated"><dt><b><a class="el" href="deprecated.php#_deprecated000003">Deprecated:</a></b></dt><dd>Use TriangleFan instead </dd></dl>
</td></tr>
</table>

<p class="definition">Definition at line <a class="el" href="PrimitiveType_8hpp_source.php#l00039">39</a> of file <a class="el" href="PrimitiveType_8hpp_source.php">PrimitiveType.hpp</a>.</p>

</div>
</div>
</div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
