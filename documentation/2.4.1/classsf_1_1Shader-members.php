<?php
    $version = '2.4.1'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'Member List'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.8.10 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Shader.php">Shader</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">sf::Shader Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classsf_1_1Shader.php">sf::Shader</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a09778f78afcbeb854d608c8dacd8ea30">bind</a>(const Shader *shader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a09778f78afcbeb854d608c8dacd8ea30">bind</a>(const Shader *shader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ad679e434fc4f1a1af65f3815b2310fb5">CurrentTexture</a></td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1GlResource.php#ae0efa7935241644608ca32ba47b22a33">ensureGlContext</a>()</td><td class="entry"><a class="el" href="classsf_1_1GlResource.php">sf::GlResource</a></td><td class="entry"><span class="mlabel">private</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3adb35eecade8e954987a1a265125e1845">Fragment</a> enum value</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3ae4df6eca15fba5a8c8b75892009508bc">Geometry</a> enum value</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae205f2ced4bc9198a25b44f00e81c719">getNativeHandle</a>() const </td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae205f2ced4bc9198a25b44f00e81c719">getNativeHandle</a>() const </td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1GlResource.php#ad8fb7a0674f0f77e530dacc2a3b0dc6a">GlResource</a>()</td><td class="entry"><a class="el" href="classsf_1_1GlResource.php">sf::GlResource</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1GlResource.php#ad8fb7a0674f0f77e530dacc2a3b0dc6a">GlResource</a>()</td><td class="entry"><a class="el" href="classsf_1_1GlResource.php">sf::GlResource</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ad22474690bafe4a305c1b9826b1bd86a">isAvailable</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ad22474690bafe4a305c1b9826b1bd86a">isAvailable</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a45db14baf1bbc688577f81813b1fce96">isGeometryAvailable</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a45db14baf1bbc688577f81813b1fce96">isGeometryAvailable</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a053a5632848ebaca2fcd8ba29abe9e6e">loadFromFile</a>(const std::string &amp;filename, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac9d7289966fcef562eeb92271c03e3dc">loadFromFile</a>(const std::string &amp;vertexShaderFilename, const std::string &amp;fragmentShaderFilename)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a295d8468811ca15bf9c5401a7a7d4f54">loadFromFile</a>(const std::string &amp;vertexShaderFilename, const std::string &amp;geometryShaderFilename, const std::string &amp;fragmentShaderFilename)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a053a5632848ebaca2fcd8ba29abe9e6e">loadFromFile</a>(const std::string &amp;filename, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac9d7289966fcef562eeb92271c03e3dc">loadFromFile</a>(const std::string &amp;vertexShaderFilename, const std::string &amp;fragmentShaderFilename)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a295d8468811ca15bf9c5401a7a7d4f54">loadFromFile</a>(const std::string &amp;vertexShaderFilename, const std::string &amp;geometryShaderFilename, const std::string &amp;fragmentShaderFilename)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac92d46bf71dff2d791117e4e472148aa">loadFromMemory</a>(const std::string &amp;shader, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae34e94070d7547a890166b7993658a9b">loadFromMemory</a>(const std::string &amp;vertexShader, const std::string &amp;fragmentShader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab8c8b715b02aba2cf7c0a0e0c0984250">loadFromMemory</a>(const std::string &amp;vertexShader, const std::string &amp;geometryShader, const std::string &amp;fragmentShader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac92d46bf71dff2d791117e4e472148aa">loadFromMemory</a>(const std::string &amp;shader, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae34e94070d7547a890166b7993658a9b">loadFromMemory</a>(const std::string &amp;vertexShader, const std::string &amp;fragmentShader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab8c8b715b02aba2cf7c0a0e0c0984250">loadFromMemory</a>(const std::string &amp;vertexShader, const std::string &amp;geometryShader, const std::string &amp;fragmentShader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a2ee1b130c0606e4f8bcdf65c1efc2a53">loadFromStream</a>(InputStream &amp;stream, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a3b7958159ffb5596c4babc3052e35465">loadFromStream</a>(InputStream &amp;vertexShaderStream, InputStream &amp;fragmentShaderStream)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aa08f1c091806205e6654db9d83197fcd">loadFromStream</a>(InputStream &amp;vertexShaderStream, InputStream &amp;geometryShaderStream, InputStream &amp;fragmentShaderStream)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a2ee1b130c0606e4f8bcdf65c1efc2a53">loadFromStream</a>(InputStream &amp;stream, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a3b7958159ffb5596c4babc3052e35465">loadFromStream</a>(InputStream &amp;vertexShaderStream, InputStream &amp;fragmentShaderStream)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#aa08f1c091806205e6654db9d83197fcd">loadFromStream</a>(InputStream &amp;vertexShaderStream, InputStream &amp;geometryShaderStream, InputStream &amp;fragmentShaderStream)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1NonCopyable.php#a2110add170580fdb946f887719da6860">NonCopyable</a>()</td><td class="entry"><a class="el" href="classsf_1_1NonCopyable.php">sf::NonCopyable</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1NonCopyable.php#a2110add170580fdb946f887719da6860">NonCopyable</a>()</td><td class="entry"><a class="el" href="classsf_1_1NonCopyable.php">sf::NonCopyable</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4d6ec78f6de1a0a2146c93ab09d7d762">setParameter</a>(const std::string &amp;name, float x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a61f5cdb5847fc3b57335b095a2f3dad3">setParameter</a>(const std::string &amp;name, float x, float y)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a1fa0fb11cabd8553ccd37e97c725c992">setParameter</a>(const std::string &amp;name, float x, float y, float z)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a6d6b84575a5f1a869d70a126df8d6478">setParameter</a>(const std::string &amp;name, float x, float y, float z, float w)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aee671dda9a84f607b9b780b2796def74">setParameter</a>(const std::string &amp;name, const Vector2f &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#abf1eb5e74f216c7bcfaf34d08c960ee0">setParameter</a>(const std::string &amp;name, const Vector3f &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a66e68e64c06ef5501e50dd5903cab51c">setParameter</a>(const std::string &amp;name, const Color &amp;color)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a398a802fc5295ab69b0317892b0f0c75">setParameter</a>(const std::string &amp;name, const Transform &amp;transform)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a08c7cafd4f73ab898319c4fd7d8b5501">setParameter</a>(const std::string &amp;name, const Texture &amp;texture)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a0fa7ecad14206e4d5edae1d6aa87f553">setParameter</a>(const std::string &amp;name, CurrentTextureType)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4d6ec78f6de1a0a2146c93ab09d7d762">setParameter</a>(const std::string &amp;name, float x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a61f5cdb5847fc3b57335b095a2f3dad3">setParameter</a>(const std::string &amp;name, float x, float y)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a1fa0fb11cabd8553ccd37e97c725c992">setParameter</a>(const std::string &amp;name, float x, float y, float z)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a6d6b84575a5f1a869d70a126df8d6478">setParameter</a>(const std::string &amp;name, float x, float y, float z, float w)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aee671dda9a84f607b9b780b2796def74">setParameter</a>(const std::string &amp;name, const Vector2f &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#abf1eb5e74f216c7bcfaf34d08c960ee0">setParameter</a>(const std::string &amp;name, const Vector3f &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a66e68e64c06ef5501e50dd5903cab51c">setParameter</a>(const std::string &amp;name, const Color &amp;color)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a398a802fc5295ab69b0317892b0f0c75">setParameter</a>(const std::string &amp;name, const Transform &amp;transform)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a08c7cafd4f73ab898319c4fd7d8b5501">setParameter</a>(const std::string &amp;name, const Texture &amp;texture)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a0fa7ecad14206e4d5edae1d6aa87f553">setParameter</a>(const std::string &amp;name, CurrentTextureType)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#abf78e3bea1e9b0bab850b6b0a0de29c7">setUniform</a>(const std::string &amp;name, float x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4a2c673c41e37b17d67e4af1298b679f">setUniform</a>(const std::string &amp;name, const Glsl::Vec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aad654ad8de6f0c56191fa7b8cea21db2">setUniform</a>(const std::string &amp;name, const Glsl::Vec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#abc1aee8343800680fd62e1f3d43c24bf">setUniform</a>(const std::string &amp;name, const Glsl::Vec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae4fc8b4c18e6b653952bce5c8c81e4a0">setUniform</a>(const std::string &amp;name, int x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a2ccb5bae59cedc7d6a9b533c97f7d1ed">setUniform</a>(const std::string &amp;name, const Glsl::Ivec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a9e328e3e97cd753fdc7b842f4b0f202e">setUniform</a>(const std::string &amp;name, const Glsl::Ivec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a380e7a5a2896162c5fd08966c4523790">setUniform</a>(const std::string &amp;name, const Glsl::Ivec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#af417027ac72c06e6cfbf30975cd678e9">setUniform</a>(const std::string &amp;name, bool x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab2518b8dd0762e682b452a5d5005f2bf">setUniform</a>(const std::string &amp;name, const Glsl::Bvec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab06830875c82476fbb9c975cdeb78a11">setUniform</a>(const std::string &amp;name, const Glsl::Bvec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac8db3e0adf1129abf24f0a51a7ec36f4">setUniform</a>(const std::string &amp;name, const Glsl::Bvec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac1198ae0152d439bc05781046883e281">setUniform</a>(const std::string &amp;name, const Glsl::Mat3 &amp;matrix)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#aca5c55c4a3b23d21e33dbdaab7990755">setUniform</a>(const std::string &amp;name, const Glsl::Mat4 &amp;matrix)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a7806a29ffbd0ee9251256a9e7265d479">setUniform</a>(const std::string &amp;name, const Texture &amp;texture)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab18f531e1f726b88fec1cf5a1e6af26d">setUniform</a>(const std::string &amp;name, CurrentTextureType)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#abf78e3bea1e9b0bab850b6b0a0de29c7">setUniform</a>(const std::string &amp;name, float x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4a2c673c41e37b17d67e4af1298b679f">setUniform</a>(const std::string &amp;name, const Glsl::Vec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aad654ad8de6f0c56191fa7b8cea21db2">setUniform</a>(const std::string &amp;name, const Glsl::Vec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#abc1aee8343800680fd62e1f3d43c24bf">setUniform</a>(const std::string &amp;name, const Glsl::Vec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae4fc8b4c18e6b653952bce5c8c81e4a0">setUniform</a>(const std::string &amp;name, int x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a2ccb5bae59cedc7d6a9b533c97f7d1ed">setUniform</a>(const std::string &amp;name, const Glsl::Ivec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a9e328e3e97cd753fdc7b842f4b0f202e">setUniform</a>(const std::string &amp;name, const Glsl::Ivec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a380e7a5a2896162c5fd08966c4523790">setUniform</a>(const std::string &amp;name, const Glsl::Ivec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#af417027ac72c06e6cfbf30975cd678e9">setUniform</a>(const std::string &amp;name, bool x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab2518b8dd0762e682b452a5d5005f2bf">setUniform</a>(const std::string &amp;name, const Glsl::Bvec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab06830875c82476fbb9c975cdeb78a11">setUniform</a>(const std::string &amp;name, const Glsl::Bvec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac8db3e0adf1129abf24f0a51a7ec36f4">setUniform</a>(const std::string &amp;name, const Glsl::Bvec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac1198ae0152d439bc05781046883e281">setUniform</a>(const std::string &amp;name, const Glsl::Mat3 &amp;matrix)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#aca5c55c4a3b23d21e33dbdaab7990755">setUniform</a>(const std::string &amp;name, const Glsl::Mat4 &amp;matrix)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a7806a29ffbd0ee9251256a9e7265d479">setUniform</a>(const std::string &amp;name, const Texture &amp;texture)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab18f531e1f726b88fec1cf5a1e6af26d">setUniform</a>(const std::string &amp;name, CurrentTextureType)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a731d3b9953c50fe7d3fb03340b97deff">setUniformArray</a>(const std::string &amp;name, const float *scalarArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab2e2eab45d9a091f3720c0879a5bb026">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec2 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aeae884292fed977bbea5039818f208e7">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec3 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#aa89ac1ea7918c9b1c2232df59affb7fa">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec4 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a69587701d347ba21d506197d0fb9f842">setUniformArray</a>(const std::string &amp;name, const Glsl::Mat3 *matrixArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a066b0ba02e1c1bddc9e2571eca1156ab">setUniformArray</a>(const std::string &amp;name, const Glsl::Mat4 *matrixArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a731d3b9953c50fe7d3fb03340b97deff">setUniformArray</a>(const std::string &amp;name, const float *scalarArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab2e2eab45d9a091f3720c0879a5bb026">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec2 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aeae884292fed977bbea5039818f208e7">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec3 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#aa89ac1ea7918c9b1c2232df59affb7fa">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec4 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a69587701d347ba21d506197d0fb9f842">setUniformArray</a>(const std::string &amp;name, const Glsl::Mat3 *matrixArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a066b0ba02e1c1bddc9e2571eca1156ab">setUniformArray</a>(const std::string &amp;name, const Glsl::Mat4 *matrixArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a1d7f28f26b4122959fcafec871c2c3c5">Shader</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a1d7f28f26b4122959fcafec871c2c3c5">Shader</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3">Type</a> enum name</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3">Type</a> enum name</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3ac6677cff2fb888f93e247591d886a791">Vertex</a> enum value</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1GlResource.php#ab99035b67052331d1e8cf67abd93de98">~GlResource</a>()</td><td class="entry"><a class="el" href="classsf_1_1GlResource.php">sf::GlResource</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1GlResource.php#ab99035b67052331d1e8cf67abd93de98">~GlResource</a>()</td><td class="entry"><a class="el" href="classsf_1_1GlResource.php">sf::GlResource</a></td><td class="entry"><span class="mlabel">private</span></td></tr>
  <tr><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4bac6cc8b046ecd8fb967c145a2380e6">~Shader</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4bac6cc8b046ecd8fb967c145a2380e6">~Shader</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
<?php
    require("../footer.php");
?>
