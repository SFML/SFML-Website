<?php
    $version = '2.6.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'Member List'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header.php');
?>
<!-- Generated by Doxygen 1.9.6 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.php');
/* @license-end */
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <span id="MSearchSelect"                onmouseover="return searchBox.OnSearchSelectShow()"                onmouseout="return searchBox.OnSearchSelectHide()">&#160;</span>
          <input type="text" id="MSearchField" value="" placeholder="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.svg" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Shader.php">Shader</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">sf::Shader Member List</div></div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classsf_1_1Shader.php">sf::Shader</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a09778f78afcbeb854d608c8dacd8ea30">bind</a>(const Shader *shader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac84c7953eec2e19358ea6e2cc5385b8d">CurrentTexture</a></td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3ace6e88eec3a56b2e55ee3c8e64e9b89a">Fragment</a> enum value</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3a812421100fd57456727375938fb62788">Geometry</a> enum value</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac14d0bf7afe7b6bb415d309f9c707188">getNativeHandle</a>() const</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ad22474690bafe4a305c1b9826b1bd86a">isAvailable</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a45db14baf1bbc688577f81813b1fce96">isGeometryAvailable</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a053a5632848ebaca2fcd8ba29abe9e6e">loadFromFile</a>(const std::string &amp;filename, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac9d7289966fcef562eeb92271c03e3dc">loadFromFile</a>(const std::string &amp;vertexShaderFilename, const std::string &amp;fragmentShaderFilename)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a295d8468811ca15bf9c5401a7a7d4f54">loadFromFile</a>(const std::string &amp;vertexShaderFilename, const std::string &amp;geometryShaderFilename, const std::string &amp;fragmentShaderFilename)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac92d46bf71dff2d791117e4e472148aa">loadFromMemory</a>(const std::string &amp;shader, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae34e94070d7547a890166b7993658a9b">loadFromMemory</a>(const std::string &amp;vertexShader, const std::string &amp;fragmentShader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab8c8b715b02aba2cf7c0a0e0c0984250">loadFromMemory</a>(const std::string &amp;vertexShader, const std::string &amp;geometryShader, const std::string &amp;fragmentShader)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a2ee1b130c0606e4f8bcdf65c1efc2a53">loadFromStream</a>(InputStream &amp;stream, Type type)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a3b7958159ffb5596c4babc3052e35465">loadFromStream</a>(InputStream &amp;vertexShaderStream, InputStream &amp;fragmentShaderStream)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aa08f1c091806205e6654db9d83197fcd">loadFromStream</a>(InputStream &amp;vertexShaderStream, InputStream &amp;geometryShaderStream, InputStream &amp;fragmentShaderStream)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a47e4dd78f0752ae08664b4ee616db1cf">setParameter</a>(const std::string &amp;name, float x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab8d379f40810b8e3eadebee81aedd231">setParameter</a>(const std::string &amp;name, float x, float y)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a7e36e044d6b8adca8339f40c5a4b1801">setParameter</a>(const std::string &amp;name, float x, float y, float z)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aeb468f1bc2d26750b96b74f1e19027fb">setParameter</a>(const std::string &amp;name, float x, float y, float z, float w)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a3ac473ece2c6fa26dc5032c07fd7288e">setParameter</a>(const std::string &amp;name, const Vector2f &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a87d4a0c6dc70ae68aecc0dda3f343c07">setParameter</a>(const std::string &amp;name, const Vector3f &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aa8618119ed4399df3fd33e78ee96b4fc">setParameter</a>(const std::string &amp;name, const Color &amp;color)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a8599ee1348407025039b89ddf3f7cb62">setParameter</a>(const std::string &amp;name, const Transform &amp;transform)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a7f58ab5c0a1084f238dfcec86602daa1">setParameter</a>(const std::string &amp;name, const Texture &amp;texture)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#af06b4cba0bab915fa01032b063909044">setParameter</a>(const std::string &amp;name, CurrentTextureType)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#abf78e3bea1e9b0bab850b6b0a0de29c7">setUniform</a>(const std::string &amp;name, float x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4a2c673c41e37b17d67e4af1298b679f">setUniform</a>(const std::string &amp;name, const Glsl::Vec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aad654ad8de6f0c56191fa7b8cea21db2">setUniform</a>(const std::string &amp;name, const Glsl::Vec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#abc1aee8343800680fd62e1f3d43c24bf">setUniform</a>(const std::string &amp;name, const Glsl::Vec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ae4fc8b4c18e6b653952bce5c8c81e4a0">setUniform</a>(const std::string &amp;name, int x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a2ccb5bae59cedc7d6a9b533c97f7d1ed">setUniform</a>(const std::string &amp;name, const Glsl::Ivec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a9e328e3e97cd753fdc7b842f4b0f202e">setUniform</a>(const std::string &amp;name, const Glsl::Ivec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a380e7a5a2896162c5fd08966c4523790">setUniform</a>(const std::string &amp;name, const Glsl::Ivec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#af417027ac72c06e6cfbf30975cd678e9">setUniform</a>(const std::string &amp;name, bool x)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab2518b8dd0762e682b452a5d5005f2bf">setUniform</a>(const std::string &amp;name, const Glsl::Bvec2 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab06830875c82476fbb9c975cdeb78a11">setUniform</a>(const std::string &amp;name, const Glsl::Bvec3 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac8db3e0adf1129abf24f0a51a7ec36f4">setUniform</a>(const std::string &amp;name, const Glsl::Bvec4 &amp;vector)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ac1198ae0152d439bc05781046883e281">setUniform</a>(const std::string &amp;name, const Glsl::Mat3 &amp;matrix)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aca5c55c4a3b23d21e33dbdaab7990755">setUniform</a>(const std::string &amp;name, const Glsl::Mat4 &amp;matrix)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a7806a29ffbd0ee9251256a9e7265d479">setUniform</a>(const std::string &amp;name, const Texture &amp;texture)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab18f531e1f726b88fec1cf5a1e6af26d">setUniform</a>(const std::string &amp;name, CurrentTextureType)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a731d3b9953c50fe7d3fb03340b97deff">setUniformArray</a>(const std::string &amp;name, const float *scalarArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#ab2e2eab45d9a091f3720c0879a5bb026">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec2 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aeae884292fed977bbea5039818f208e7">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec3 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#aa89ac1ea7918c9b1c2232df59affb7fa">setUniformArray</a>(const std::string &amp;name, const Glsl::Vec4 *vectorArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a69587701d347ba21d506197d0fb9f842">setUniformArray</a>(const std::string &amp;name, const Glsl::Mat3 *matrixArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a066b0ba02e1c1bddc9e2571eca1156ab">setUniformArray</a>(const std::string &amp;name, const Glsl::Mat4 *matrixArray, std::size_t length)</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a1d7f28f26b4122959fcafec871c2c3c5">Shader</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3">Type</a> enum name</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classsf_1_1Shader.php#afaa1aa65e5de37b74d047da9def9f9b3a8718008f827eb32e29bbdd1791c62dce">Vertex</a> enum value</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
  <tr class="odd"><td class="entry"><a class="el" href="classsf_1_1Shader.php#a4bac6cc8b046ecd8fb967c145a2380e6">~Shader</a>()</td><td class="entry"><a class="el" href="classsf_1_1Shader.php">sf::Shader</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
<?php
    require("../footer.php");
?>
