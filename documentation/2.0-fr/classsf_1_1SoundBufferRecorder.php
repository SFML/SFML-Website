<?php
    $version = '2.0'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::SoundBufferRecorder Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1SoundBufferRecorder.php">SoundBufferRecorder</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classsf_1_1SoundBufferRecorder-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::SoundBufferRecorder Class Reference<div class="ingroups"><a class="el" href="group__audio.php">Audio module</a></div></div>  </div>
</div><!--header-->
<div class="contents">

<p>Specialized <a class="el" href="classsf_1_1SoundRecorder.php" title="Abstract base class for capturing sound data.">SoundRecorder</a> which stores the captured audio data into a sound buffer.  
 <a href="classsf_1_1SoundBufferRecorder.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundBufferRecorder_8hpp_source.php">SoundBufferRecorder.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::SoundBufferRecorder:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classsf_1_1SoundBufferRecorder.png" usemap="#sf::SoundBufferRecorder_map" alt=""/>
  <map id="sf::SoundBufferRecorder_map" name="sf::SoundBufferRecorder_map">
<area href="classsf_1_1SoundRecorder.php" title="Abstract base class for capturing sound data." alt="sf::SoundRecorder" shape="rect" coords="0,0,152,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a84fd636ad22f434bafe2a7c15a8e5107"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBufferRecorder.php#a84fd636ad22f434bafe2a7c15a8e5107">getBuffer</a> () const </td></tr>
<tr class="memdesc:a84fd636ad22f434bafe2a7c15a8e5107"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sound buffer containing the captured audio data.  <a href="#a84fd636ad22f434bafe2a7c15a8e5107"></a><br/></td></tr>
<tr class="separator:a84fd636ad22f434bafe2a7c15a8e5107"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a777e633114f7221cd7554a6ed486259e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#a777e633114f7221cd7554a6ed486259e">start</a> (unsigned int sampleRate=44100)</td></tr>
<tr class="memdesc:a777e633114f7221cd7554a6ed486259e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start the capture.  <a href="#a777e633114f7221cd7554a6ed486259e"></a><br/></td></tr>
<tr class="separator:a777e633114f7221cd7554a6ed486259e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d9c8346aa9aa409cfed4a1101159c4c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#a8d9c8346aa9aa409cfed4a1101159c4c">stop</a> ()</td></tr>
<tr class="memdesc:a8d9c8346aa9aa409cfed4a1101159c4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop the capture.  <a href="#a8d9c8346aa9aa409cfed4a1101159c4c"></a><br/></td></tr>
<tr class="separator:a8d9c8346aa9aa409cfed4a1101159c4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f3726cbe0a2b2b291b36beea57960d7"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#a1f3726cbe0a2b2b291b36beea57960d7">getSampleRate</a> () const </td></tr>
<tr class="memdesc:a1f3726cbe0a2b2b291b36beea57960d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sample rate.  <a href="#a1f3726cbe0a2b2b291b36beea57960d7"></a><br/></td></tr>
<tr class="separator:a1f3726cbe0a2b2b291b36beea57960d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aab2bd0fee9e48d6cfd449b1cb078ce5a"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#aab2bd0fee9e48d6cfd449b1cb078ce5a">isAvailable</a> ()</td></tr>
<tr class="memdesc:aab2bd0fee9e48d6cfd449b1cb078ce5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Check if the system supports audio capture.  <a href="#aab2bd0fee9e48d6cfd449b1cb078ce5a"></a><br/></td></tr>
<tr class="separator:aab2bd0fee9e48d6cfd449b1cb078ce5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a531a7445fc8a48eaf9fc039c83f17c6f"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBufferRecorder.php#a531a7445fc8a48eaf9fc039c83f17c6f">onStart</a> ()</td></tr>
<tr class="memdesc:a531a7445fc8a48eaf9fc039c83f17c6f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start capturing audio data.  <a href="#a531a7445fc8a48eaf9fc039c83f17c6f"></a><br/></td></tr>
<tr class="separator:a531a7445fc8a48eaf9fc039c83f17c6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ceb94de14632ae8c1b78faf603b4767"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBufferRecorder.php#a9ceb94de14632ae8c1b78faf603b4767">onProcessSamples</a> (const Int16 *samples, std::size_t sampleCount)</td></tr>
<tr class="memdesc:a9ceb94de14632ae8c1b78faf603b4767"><td class="mdescLeft">&#160;</td><td class="mdescRight">Process a new chunk of recorded samples.  <a href="#a9ceb94de14632ae8c1b78faf603b4767"></a><br/></td></tr>
<tr class="separator:a9ceb94de14632ae8c1b78faf603b4767"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8e53849312413431873a5869d509f1e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundBufferRecorder.php#ab8e53849312413431873a5869d509f1e">onStop</a> ()</td></tr>
<tr class="memdesc:ab8e53849312413431873a5869d509f1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop capturing audio data.  <a href="#ab8e53849312413431873a5869d509f1e"></a><br/></td></tr>
<tr class="separator:ab8e53849312413431873a5869d509f1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Specialized <a class="el" href="classsf_1_1SoundRecorder.php" title="Abstract base class for capturing sound data.">SoundRecorder</a> which stores the captured audio data into a sound buffer. </p>
<p><a class="el" href="classsf_1_1SoundBufferRecorder.php" title="Specialized SoundRecorder which stores the captured audio data into a sound buffer.">sf::SoundBufferRecorder</a> allows to access a recorded sound through a <a class="el" href="classsf_1_1SoundBuffer.php" title="Storage for audio samples defining a sound.">sf::SoundBuffer</a>, so that it can be played, saved to a file, etc.</p>
<p>It has the same simple interface as its base class (<a class="el" href="classsf_1_1SoundRecorder.php#a777e633114f7221cd7554a6ed486259e" title="Start the capture.">start()</a>, <a class="el" href="classsf_1_1SoundRecorder.php#a8d9c8346aa9aa409cfed4a1101159c4c" title="Stop the capture.">stop()</a>) and adds a function to retrieve the recorded sound buffer (<a class="el" href="classsf_1_1SoundBufferRecorder.php#a84fd636ad22f434bafe2a7c15a8e5107" title="Get the sound buffer containing the captured audio data.">getBuffer()</a>).</p>
<p>As usual, don't forget to call the <a class="el" href="classsf_1_1SoundRecorder.php#aab2bd0fee9e48d6cfd449b1cb078ce5a" title="Check if the system supports audio capture.">isAvailable()</a> function before using this class (see <a class="el" href="classsf_1_1SoundRecorder.php" title="Abstract base class for capturing sound data.">sf::SoundRecorder</a> for more details about this).</p>
<p>Usage example: </p>
<div class="fragment"><div class="line"><span class="keywordflow">if</span> (<a class="code" href="classsf_1_1SoundRecorder.php#aab2bd0fee9e48d6cfd449b1cb078ce5a" title="Check if the system supports audio capture.">sf::SoundBufferRecorder::isAvailable</a>())</div>
<div class="line">{</div>
<div class="line">    <span class="comment">// Record some audio data</span></div>
<div class="line">    <a class="code" href="classsf_1_1SoundBufferRecorder.php" title="Specialized SoundRecorder which stores the captured audio data into a sound buffer.">sf::SoundBufferRecorder</a> recorder;</div>
<div class="line">    recorder.<a class="code" href="classsf_1_1SoundRecorder.php#a777e633114f7221cd7554a6ed486259e" title="Start the capture.">start</a>();</div>
<div class="line">    ...</div>
<div class="line">    recorder.<a class="code" href="classsf_1_1SoundRecorder.php#a8d9c8346aa9aa409cfed4a1101159c4c" title="Stop the capture.">stop</a>();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Get the buffer containing the captured audio data</span></div>
<div class="line">    <span class="keyword">const</span> <a class="code" href="classsf_1_1SoundBuffer.php" title="Storage for audio samples defining a sound.">sf::SoundBuffer</a>&amp; buffer = recorder.<a class="code" href="classsf_1_1SoundBufferRecorder.php#a84fd636ad22f434bafe2a7c15a8e5107" title="Get the sound buffer containing the captured audio data.">getBuffer</a>();</div>
<div class="line"></div>
<div class="line">    <span class="comment">// Save it to a file (for example...)</span></div>
<div class="line">    buffer.<a class="code" href="classsf_1_1SoundBuffer.php#ab2083dc1a934c64959d9e3f162328a76" title="Save the sound buffer to an audio file.">saveToFile</a>(<span class="stringliteral">&quot;my_record.ogg&quot;</span>);</div>
<div class="line">}</div>
</div><!-- fragment --><dl class="section see"><dt>See Also</dt><dd><a class="el" href="classsf_1_1SoundRecorder.php" title="Abstract base class for capturing sound data.">sf::SoundRecorder</a> </dd></dl>

<p>Definition at line <a class="el" href="SoundBufferRecorder_8hpp_source.php#l00044">44</a> of file <a class="el" href="SoundBufferRecorder_8hpp_source.php">SoundBufferRecorder.hpp</a>.</p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a84fd636ad22f434bafe2a7c15a8e5107"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a>&amp; sf::SoundBufferRecorder::getBuffer </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the sound buffer containing the captured audio data. </p>
<p>The sound buffer is valid only after the capture has ended. This function provides a read-only access to the internal sound buffer, but it can be copied if you need to make any modification to it.</p>
<dl class="section return"><dt>Returns</dt><dd>Read-only access to the sound buffer </dd></dl>

</div>
</div>
<a class="anchor" id="a1f3726cbe0a2b2b291b36beea57960d7"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundRecorder::getSampleRate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the sample rate. </p>
<p>The sample rate defines the number of audio samples captured per second. The higher, the better the quality (for example, 44100 samples/sec is CD quality).</p>
<dl class="section return"><dt>Returns</dt><dd>Sample rate, in samples per second </dd></dl>

</div>
</div>
<a class="anchor" id="aab2bd0fee9e48d6cfd449b1cb078ce5a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool sf::SoundRecorder::isAvailable </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Check if the system supports audio capture. </p>
<p>This function should always be called before using the audio capture features. If it returns false, then any attempt to use <a class="el" href="classsf_1_1SoundRecorder.php" title="Abstract base class for capturing sound data.">sf::SoundRecorder</a> or one of its derived classes will fail.</p>
<dl class="section return"><dt>Returns</dt><dd>True if audio capture is supported, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="a9ceb94de14632ae8c1b78faf603b4767"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool sf::SoundBufferRecorder::onProcessSamples </td>
          <td>(</td>
          <td class="paramtype">const Int16 *&#160;</td>
          <td class="paramname"><em>samples</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>sampleCount</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Process a new chunk of recorded samples. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">samples</td><td>Pointer to the new chunk of recorded samples </td></tr>
    <tr><td class="paramname">sampleCount</td><td>Number of samples pointed by <em>samples</em> </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True to continue the capture, or false to stop it </dd></dl>

<p>Implements <a class="el" href="classsf_1_1SoundRecorder.php#a2670124cbe7a87c7e46b4840807f4fd7">sf::SoundRecorder</a>.</p>

</div>
</div>
<a class="anchor" id="a531a7445fc8a48eaf9fc039c83f17c6f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool sf::SoundBufferRecorder::onStart </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start capturing audio data. </p>
<dl class="section return"><dt>Returns</dt><dd>True to start the capture, or false to abort it </dd></dl>

<p>Reimplemented from <a class="el" href="classsf_1_1SoundRecorder.php#a7af418fb036201d3f85745bef78ce77f">sf::SoundRecorder</a>.</p>

</div>
</div>
<a class="anchor" id="ab8e53849312413431873a5869d509f1e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void sf::SoundBufferRecorder::onStop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop capturing audio data. </p>

<p>Reimplemented from <a class="el" href="classsf_1_1SoundRecorder.php#aefc36138ca1e96c658301280e4a31b64">sf::SoundRecorder</a>.</p>

</div>
</div>
<a class="anchor" id="a777e633114f7221cd7554a6ed486259e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundRecorder::start </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>sampleRate</em> = <code>44100</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start the capture. </p>
<p>The <em>sampleRate</em> parameter defines the number of audio samples captured per second. The higher, the better the quality (for example, 44100 samples/sec is CD quality). This function uses its own thread so that it doesn't block the rest of the program while the capture runs. Please note that only one capture can happen at the same time.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">sampleRate</td><td>Desired capture rate, in number of samples per second</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classsf_1_1SoundRecorder.php#a8d9c8346aa9aa409cfed4a1101159c4c" title="Stop the capture.">stop</a> </dd></dl>

</div>
</div>
<a class="anchor" id="a8d9c8346aa9aa409cfed4a1101159c4c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundRecorder::stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop the capture. </p>
<dl class="section see"><dt>See Also</dt><dd><a class="el" href="classsf_1_1SoundRecorder.php#a777e633114f7221cd7554a6ed486259e" title="Start the capture.">start</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundBufferRecorder_8hpp_source.php">SoundBufferRecorder.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
