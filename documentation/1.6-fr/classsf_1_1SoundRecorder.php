<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::SoundRecorder Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1SoundRecorder.php">SoundRecorder</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="classsf_1_1SoundRecorder-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::SoundRecorder Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1SoundRecorder.php" title="SoundRecorder is an interface for capturing sound data, it is meant to be used as a base class...">SoundRecorder</a> is an interface for capturing sound data, it is meant to be used as a base class.  
 <a href="classsf_1_1SoundRecorder.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundRecorder_8hpp_source.php">SoundRecorder.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::SoundRecorder:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classsf_1_1SoundRecorder.png" usemap="#sf::SoundRecorder_map" alt=""/>
  <map id="sf::SoundRecorder_map" name="sf::SoundRecorder_map">
<area href="classsf_1_1Thread.php" title="Thread defines an easy way to manipulate a thread." alt="sf::Thread" shape="rect" coords="0,0,152,24"/>
<area href="classsf_1_1SoundBufferRecorder.php" title="Specialized SoundRecorder which saves the captured audio data into a sound buffer." alt="sf::SoundBufferRecorder" shape="rect" coords="0,112,152,136"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acc599e61aaa47edaae88cf43f0a43549"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#acc599e61aaa47edaae88cf43f0a43549">~SoundRecorder</a> ()</td></tr>
<tr class="memdesc:acc599e61aaa47edaae88cf43f0a43549"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#acc599e61aaa47edaae88cf43f0a43549"></a><br/></td></tr>
<tr class="separator:acc599e61aaa47edaae88cf43f0a43549"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6693c1ac2c0d1677f798539b0643eac6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#a6693c1ac2c0d1677f798539b0643eac6">Start</a> (unsigned int SampleRate=44100)</td></tr>
<tr class="memdesc:a6693c1ac2c0d1677f798539b0643eac6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start the capture.  <a href="#a6693c1ac2c0d1677f798539b0643eac6"></a><br/></td></tr>
<tr class="separator:a6693c1ac2c0d1677f798539b0643eac6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d51c7ef42bcdd4ad53e995d57f90733"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#a9d51c7ef42bcdd4ad53e995d57f90733">Stop</a> ()</td></tr>
<tr class="memdesc:a9d51c7ef42bcdd4ad53e995d57f90733"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop the capture.  <a href="#a9d51c7ef42bcdd4ad53e995d57f90733"></a><br/></td></tr>
<tr class="separator:a9d51c7ef42bcdd4ad53e995d57f90733"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abab8a7f4ba28658c4bf707639f11a6c5"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#abab8a7f4ba28658c4bf707639f11a6c5">GetSampleRate</a> () const </td></tr>
<tr class="memdesc:abab8a7f4ba28658c4bf707639f11a6c5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sample rate.  <a href="#abab8a7f4ba28658c4bf707639f11a6c5"></a><br/></td></tr>
<tr class="separator:abab8a7f4ba28658c4bf707639f11a6c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:afa49a0834d1b49ec69b9991f88558040"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#afa49a0834d1b49ec69b9991f88558040">CanCapture</a> ()</td></tr>
<tr class="memdesc:afa49a0834d1b49ec69b9991f88558040"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell if the system supports sound capture.  <a href="#afa49a0834d1b49ec69b9991f88558040"></a><br/></td></tr>
<tr class="separator:afa49a0834d1b49ec69b9991f88558040"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a50ebad413c4f157408a0fa49f23212a9"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundRecorder.php#a50ebad413c4f157408a0fa49f23212a9">SoundRecorder</a> ()</td></tr>
<tr class="memdesc:a50ebad413c4f157408a0fa49f23212a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a50ebad413c4f157408a0fa49f23212a9"></a><br/></td></tr>
<tr class="separator:a50ebad413c4f157408a0fa49f23212a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:aab6e6f11eb38f106cd7c1149763a11b8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aab6e6f11eb38f106cd7c1149763a11b8"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>FuncType</b> )(void *)</td></tr>
<tr class="separator:aab6e6f11eb38f106cd7c1149763a11b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a046df871f73d3cf452d1c72bcc143642"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Thread.php#a046df871f73d3cf452d1c72bcc143642">Launch</a> ()</td></tr>
<tr class="memdesc:a046df871f73d3cf452d1c72bcc143642"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and run the thread.  <a href="#a046df871f73d3cf452d1c72bcc143642"></a><br/></td></tr>
<tr class="separator:a046df871f73d3cf452d1c72bcc143642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f3c609fdf99688531dbfae461ea4d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Thread.php#a67f3c609fdf99688531dbfae461ea4d2">Wait</a> ()</td></tr>
<tr class="memdesc:a67f3c609fdf99688531dbfae461ea4d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait until the thread finishes.  <a href="#a67f3c609fdf99688531dbfae461ea4d2"></a><br/></td></tr>
<tr class="separator:a67f3c609fdf99688531dbfae461ea4d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a603d9493c6a845188f05c2eca48dc41b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Thread.php#a603d9493c6a845188f05c2eca48dc41b">Terminate</a> ()</td></tr>
<tr class="memdesc:a603d9493c6a845188f05c2eca48dc41b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Terminate the thread Terminating a thread with this function is not safe, you should rather try to make the thread function terminate by itself.  <a href="#a603d9493c6a845188f05c2eca48dc41b"></a><br/></td></tr>
<tr class="separator:a603d9493c6a845188f05c2eca48dc41b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1SoundRecorder.php" title="SoundRecorder is an interface for capturing sound data, it is meant to be used as a base class...">SoundRecorder</a> is an interface for capturing sound data, it is meant to be used as a base class. </p>

<p>Definition at line <a class="el" href="SoundRecorder_8hpp_source.php#l00041">41</a> of file <a class="el" href="SoundRecorder_8hpp_source.php">SoundRecorder.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="acc599e61aaa47edaae88cf43f0a43549"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual sf::SoundRecorder::~SoundRecorder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

</div>
</div>
<a class="anchor" id="a50ebad413c4f157408a0fa49f23212a9"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sf::SoundRecorder::SoundRecorder </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="afa49a0834d1b49ec69b9991f88558040"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static bool sf::SoundRecorder::CanCapture </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Tell if the system supports sound capture. </p>
<p>If not, this class won't be usable</p>
<dl class="section return"><dt>Returns</dt><dd>True if audio capture is supported </dd></dl>

</div>
</div>
<a class="anchor" id="abab8a7f4ba28658c4bf707639f11a6c5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundRecorder::GetSampleRate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the sample rate. </p>
<dl class="section return"><dt>Returns</dt><dd>Frequency, in samples per second </dd></dl>

</div>
</div>
<a class="anchor" id="a6693c1ac2c0d1677f798539b0643eac6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundRecorder::Start </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>SampleRate</em> = <code>44100</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start the capture. </p>
<p>Warning : only one capture can happen at the same time</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">SampleRate</td><td>: <a class="el" href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc.">Sound</a> frequency (the more samples, the higher the quality) (44100 by default = CD quality) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a9d51c7ef42bcdd4ad53e995d57f90733"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundRecorder::Stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop the capture. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundRecorder_8hpp_source.php">SoundRecorder.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
