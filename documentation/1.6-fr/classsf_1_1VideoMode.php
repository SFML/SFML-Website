<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::VideoMode Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1VideoMode.php">VideoMode</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="classsf_1_1VideoMode-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::VideoMode Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1VideoMode.php" title="VideoMode defines a video mode (width, height, bpp, frequency) and provides static functions for gett...">VideoMode</a> defines a video mode (width, height, bpp, frequency) and provides static functions for getting modes supported by the display device.  
 <a href="classsf_1_1VideoMode.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="VideoMode_8hpp_source.php">VideoMode.hpp</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a04c9417e5c304510bef5f6aeb03f6ce1"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#a04c9417e5c304510bef5f6aeb03f6ce1">VideoMode</a> ()</td></tr>
<tr class="memdesc:a04c9417e5c304510bef5f6aeb03f6ce1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a04c9417e5c304510bef5f6aeb03f6ce1"></a><br/></td></tr>
<tr class="separator:a04c9417e5c304510bef5f6aeb03f6ce1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9478572db06121f70260e6b9dc21704e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#a9478572db06121f70260e6b9dc21704e">VideoMode</a> (unsigned int ModeWidth, unsigned int ModeHeight, unsigned int ModeBpp=32)</td></tr>
<tr class="memdesc:a9478572db06121f70260e6b9dc21704e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the video mode with its attributes.  <a href="#a9478572db06121f70260e6b9dc21704e"></a><br/></td></tr>
<tr class="separator:a9478572db06121f70260e6b9dc21704e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13ccf1d15900d7251659f871ea362c7c"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#a13ccf1d15900d7251659f871ea362c7c">IsValid</a> () const </td></tr>
<tr class="memdesc:a13ccf1d15900d7251659f871ea362c7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell whether or not the video mode is supported.  <a href="#a13ccf1d15900d7251659f871ea362c7c"></a><br/></td></tr>
<tr class="separator:a13ccf1d15900d7251659f871ea362c7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a497c88cd2475d941f27a0ac2a0541fa1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#a497c88cd2475d941f27a0ac2a0541fa1">operator==</a> (const <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a> &amp;Other) const </td></tr>
<tr class="memdesc:a497c88cd2475d941f27a0ac2a0541fa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator overload &ndash; tell if two video modes are equal.  <a href="#a497c88cd2475d941f27a0ac2a0541fa1"></a><br/></td></tr>
<tr class="separator:a497c88cd2475d941f27a0ac2a0541fa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7db70f110d4a1404e38ed8a909d77821"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#a7db70f110d4a1404e38ed8a909d77821">operator!=</a> (const <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a> &amp;Other) const </td></tr>
<tr class="memdesc:a7db70f110d4a1404e38ed8a909d77821"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator overload &ndash; tell if two video modes are different.  <a href="#a7db70f110d4a1404e38ed8a909d77821"></a><br/></td></tr>
<tr class="separator:a7db70f110d4a1404e38ed8a909d77821"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:acdc9c223fb5fcba8956bc6004addf3fa"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#acdc9c223fb5fcba8956bc6004addf3fa">GetDesktopMode</a> ()</td></tr>
<tr class="memdesc:acdc9c223fb5fcba8956bc6004addf3fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current desktop video mode.  <a href="#acdc9c223fb5fcba8956bc6004addf3fa"></a><br/></td></tr>
<tr class="separator:acdc9c223fb5fcba8956bc6004addf3fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3393f8175a96fcd9df446c28afbaa342"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#a3393f8175a96fcd9df446c28afbaa342">GetMode</a> (std::size_t Index)</td></tr>
<tr class="memdesc:a3393f8175a96fcd9df446c28afbaa342"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get a valid video mode Index must be in range [0, <a class="el" href="classsf_1_1VideoMode.php#a7497cef03e50869e63e2c15cd093238a" title="Get valid video modes count.">GetModesCount()</a>[ Modes are sorted from best to worst.  <a href="#a3393f8175a96fcd9df446c28afbaa342"></a><br/></td></tr>
<tr class="separator:a3393f8175a96fcd9df446c28afbaa342"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7497cef03e50869e63e2c15cd093238a"><td class="memItemLeft" align="right" valign="top">static std::size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#a7497cef03e50869e63e2c15cd093238a">GetModesCount</a> ()</td></tr>
<tr class="memdesc:a7497cef03e50869e63e2c15cd093238a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get valid video modes count.  <a href="#a7497cef03e50869e63e2c15cd093238a"></a><br/></td></tr>
<tr class="separator:a7497cef03e50869e63e2c15cd093238a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:abee130381af7a465b29ea5cdb3927203"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#abee130381af7a465b29ea5cdb3927203">Width</a></td></tr>
<tr class="memdesc:abee130381af7a465b29ea5cdb3927203"><td class="mdescLeft">&#160;</td><td class="mdescRight">Video mode width, in pixels.  <a href="#abee130381af7a465b29ea5cdb3927203"></a><br/></td></tr>
<tr class="separator:abee130381af7a465b29ea5cdb3927203"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac890fbaecc5d9b82b44123a0d5b3c0f5"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#ac890fbaecc5d9b82b44123a0d5b3c0f5">Height</a></td></tr>
<tr class="memdesc:ac890fbaecc5d9b82b44123a0d5b3c0f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Video mode height, in pixels.  <a href="#ac890fbaecc5d9b82b44123a0d5b3c0f5"></a><br/></td></tr>
<tr class="separator:ac890fbaecc5d9b82b44123a0d5b3c0f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2aa4a809527fd9da6b70c9479d02c7a"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1VideoMode.php#ac2aa4a809527fd9da6b70c9479d02c7a">BitsPerPixel</a></td></tr>
<tr class="memdesc:ac2aa4a809527fd9da6b70c9479d02c7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Video mode pixel depth, in bits per pixels.  <a href="#ac2aa4a809527fd9da6b70c9479d02c7a"></a><br/></td></tr>
<tr class="separator:ac2aa4a809527fd9da6b70c9479d02c7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1VideoMode.php" title="VideoMode defines a video mode (width, height, bpp, frequency) and provides static functions for gett...">VideoMode</a> defines a video mode (width, height, bpp, frequency) and provides static functions for getting modes supported by the display device. </p>

<p>Definition at line <a class="el" href="VideoMode_8hpp_source.php#l00042">42</a> of file <a class="el" href="VideoMode_8hpp_source.php">VideoMode.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a04c9417e5c304510bef5f6aeb03f6ce1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::VideoMode::VideoMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<a class="anchor" id="a9478572db06121f70260e6b9dc21704e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::VideoMode::VideoMode </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ModeWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ModeHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ModeBpp</em> = <code>32</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Construct the video mode with its attributes. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ModeWidth</td><td>: Width in pixels </td></tr>
    <tr><td class="paramname">ModeHeight</td><td>: Height in pixels </td></tr>
    <tr><td class="paramname">ModeBpp</td><td>: Pixel depths in bits per pixel (32 by default) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="acdc9c223fb5fcba8956bc6004addf3fa"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a> sf::VideoMode::GetDesktopMode </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current desktop video mode. </p>
<dl class="section return"><dt>Returns</dt><dd>Current desktop video mode </dd></dl>

</div>
</div>
<a class="anchor" id="a3393f8175a96fcd9df446c28afbaa342"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a> sf::VideoMode::GetMode </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get a valid video mode Index must be in range [0, <a class="el" href="classsf_1_1VideoMode.php#a7497cef03e50869e63e2c15cd093238a" title="Get valid video modes count.">GetModesCount()</a>[ Modes are sorted from best to worst. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>: Index of video mode to get</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Corresponding video mode (invalid mode if index is out of range) </dd></dl>

</div>
</div>
<a class="anchor" id="a7497cef03e50869e63e2c15cd093238a"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">static std::size_t sf::VideoMode::GetModesCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get valid video modes count. </p>
<dl class="section return"><dt>Returns</dt><dd>Number of valid video modes available </dd></dl>

</div>
</div>
<a class="anchor" id="a13ccf1d15900d7251659f871ea362c7c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::VideoMode::IsValid </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tell whether or not the video mode is supported. </p>
<dl class="section return"><dt>Returns</dt><dd>True if video mode is supported, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="a7db70f110d4a1404e38ed8a909d77821"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::VideoMode::operator!= </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a> &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Comparison operator overload &ndash; tell if two video modes are different. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>: Video mode to compare</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if modes are different </dd></dl>

</div>
</div>
<a class="anchor" id="a497c88cd2475d941f27a0ac2a0541fa1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::VideoMode::operator== </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="classsf_1_1VideoMode.php">VideoMode</a> &amp;&#160;</td>
          <td class="paramname"><em>Other</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Comparison operator overload &ndash; tell if two video modes are equal. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Other</td><td>: Video mode to compare</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if modes are equal </dd></dl>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a class="anchor" id="ac2aa4a809527fd9da6b70c9479d02c7a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::VideoMode::BitsPerPixel</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Video mode pixel depth, in bits per pixels. </p>

<p>Definition at line <a class="el" href="VideoMode_8hpp_source.php#l00123">123</a> of file <a class="el" href="VideoMode_8hpp_source.php">VideoMode.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="ac890fbaecc5d9b82b44123a0d5b3c0f5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::VideoMode::Height</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Video mode height, in pixels. </p>

<p>Definition at line <a class="el" href="VideoMode_8hpp_source.php#l00122">122</a> of file <a class="el" href="VideoMode_8hpp_source.php">VideoMode.hpp</a>.</p>

</div>
</div>
<a class="anchor" id="abee130381af7a465b29ea5cdb3927203"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::VideoMode::Width</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Video mode width, in pixels. </p>

<p>Definition at line <a class="el" href="VideoMode_8hpp_source.php#l00121">121</a> of file <a class="el" href="VideoMode_8hpp_source.php">VideoMode.hpp</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="VideoMode_8hpp_source.php">VideoMode.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
