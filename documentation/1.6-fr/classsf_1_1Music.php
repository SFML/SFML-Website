<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::Music Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1Music.php">Music</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="classsf_1_1Music-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::Music Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1Music.php" title="Music defines a big sound played using streaming, so usually what we call a music :)...">Music</a> defines a big sound played using streaming, so usually what we call a music :)  
 <a href="classsf_1_1Music.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="Music_8hpp_source.php">Music.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::Music:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classsf_1_1Music.png" usemap="#sf::Music_map" alt=""/>
  <map id="sf::Music_map" name="sf::Music_map">
<area href="classsf_1_1SoundStream.php" title="SoundStream is a streamed sound, ie samples are acquired while the sound is playing." alt="sf::SoundStream" shape="rect" coords="56,56,159,80"/>
<area href="classsf_1_1Thread.php" title="Thread defines an easy way to manipulate a thread." alt="sf::Thread" shape="rect" coords="0,0,103,24"/>
<area href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc." alt="sf::Sound" shape="rect" coords="113,0,216,24"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a28ad2186cde78fed2c79c867b9622195"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a28ad2186cde78fed2c79c867b9622195">Status</a> </td></tr>
<tr class="memdesc:a28ad2186cde78fed2c79c867b9622195"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enumeration of the sound states.  <a href="classsf_1_1SoundStream.php#a28ad2186cde78fed2c79c867b9622195">More...</a><br/></td></tr>
<tr class="separator:a28ad2186cde78fed2c79c867b9622195"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a18db20495fc566e5f9c26fcfe1a5dff6"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.php#a18db20495fc566e5f9c26fcfe1a5dff6">Music</a> (std::size_t BufferSize=44100)</td></tr>
<tr class="memdesc:a18db20495fc566e5f9c26fcfe1a5dff6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct the music with a buffer size.  <a href="#a18db20495fc566e5f9c26fcfe1a5dff6"></a><br/></td></tr>
<tr class="separator:a18db20495fc566e5f9c26fcfe1a5dff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c65860fed2f01d0eaa6c4199870414b"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.php#a4c65860fed2f01d0eaa6c4199870414b">~Music</a> ()</td></tr>
<tr class="memdesc:a4c65860fed2f01d0eaa6c4199870414b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor.  <a href="#a4c65860fed2f01d0eaa6c4199870414b"></a><br/></td></tr>
<tr class="separator:a4c65860fed2f01d0eaa6c4199870414b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26986766bc5674a87da1bcb10bef59db"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.php#a26986766bc5674a87da1bcb10bef59db">OpenFromFile</a> (const std::string &amp;Filename)</td></tr>
<tr class="memdesc:a26986766bc5674a87da1bcb10bef59db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a music file (doesn't play it &ndash; call <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that)  <a href="#a26986766bc5674a87da1bcb10bef59db"></a><br/></td></tr>
<tr class="separator:a26986766bc5674a87da1bcb10bef59db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07896cadcaf54e2998e0f91fb2d6d017"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.php#a07896cadcaf54e2998e0f91fb2d6d017">OpenFromMemory</a> (const char *Data, std::size_t SizeInBytes)</td></tr>
<tr class="memdesc:a07896cadcaf54e2998e0f91fb2d6d017"><td class="mdescLeft">&#160;</td><td class="mdescRight">Open a music file from memory (doesn't play it &ndash; call <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that)  <a href="#a07896cadcaf54e2998e0f91fb2d6d017"></a><br/></td></tr>
<tr class="separator:a07896cadcaf54e2998e0f91fb2d6d017"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbda9cff41ec10cb85db056cf67e5e50"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Music.php#adbda9cff41ec10cb85db056cf67e5e50">GetDuration</a> () const </td></tr>
<tr class="memdesc:adbda9cff41ec10cb85db056cf67e5e50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the music duration.  <a href="#adbda9cff41ec10cb85db056cf67e5e50"></a><br/></td></tr>
<tr class="separator:adbda9cff41ec10cb85db056cf67e5e50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d8437ef9a952fe3798bd239ff20d9bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf">Play</a> ()</td></tr>
<tr class="memdesc:a4d8437ef9a952fe3798bd239ff20d9bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start playing the audio stream.  <a href="#a4d8437ef9a952fe3798bd239ff20d9bf"></a><br/></td></tr>
<tr class="separator:a4d8437ef9a952fe3798bd239ff20d9bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c9e9b160bcbcc89c93c1682b4525df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a53c9e9b160bcbcc89c93c1682b4525df">Stop</a> ()</td></tr>
<tr class="memdesc:a53c9e9b160bcbcc89c93c1682b4525df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop playing the audio stream.  <a href="#a53c9e9b160bcbcc89c93c1682b4525df"></a><br/></td></tr>
<tr class="separator:a53c9e9b160bcbcc89c93c1682b4525df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdcb5c8f3b5884a27e2eb013f5e36858"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#abdcb5c8f3b5884a27e2eb013f5e36858">GetChannelsCount</a> () const </td></tr>
<tr class="memdesc:abdcb5c8f3b5884a27e2eb013f5e36858"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of channels (1 = mono, 2 = stereo)  <a href="#abdcb5c8f3b5884a27e2eb013f5e36858"></a><br/></td></tr>
<tr class="separator:abdcb5c8f3b5884a27e2eb013f5e36858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74dabd1177bb60c8bd64bb6bbedb64bc"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a74dabd1177bb60c8bd64bb6bbedb64bc">GetSampleRate</a> () const </td></tr>
<tr class="memdesc:a74dabd1177bb60c8bd64bb6bbedb64bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the stream sample rate.  <a href="#a74dabd1177bb60c8bd64bb6bbedb64bc"></a><br/></td></tr>
<tr class="separator:a74dabd1177bb60c8bd64bb6bbedb64bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b498cf48a20f7ecd8ff51084f65c46f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a8b498cf48a20f7ecd8ff51084f65c46f">GetStatus</a> () const </td></tr>
<tr class="memdesc:a8b498cf48a20f7ecd8ff51084f65c46f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the status of the stream (stopped, paused, playing)  <a href="#a8b498cf48a20f7ecd8ff51084f65c46f"></a><br/></td></tr>
<tr class="separator:a8b498cf48a20f7ecd8ff51084f65c46f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad11fee9eb4baba68d6ed9f44bc6170ac"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#ad11fee9eb4baba68d6ed9f44bc6170ac">GetPlayingOffset</a> () const </td></tr>
<tr class="memdesc:ad11fee9eb4baba68d6ed9f44bc6170ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current playing position of the stream.  <a href="#ad11fee9eb4baba68d6ed9f44bc6170ac"></a><br/></td></tr>
<tr class="separator:ad11fee9eb4baba68d6ed9f44bc6170ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1072090152b10d83f43f0cd6bbd82b4e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a1072090152b10d83f43f0cd6bbd82b4e">SetLoop</a> (bool Loop)</td></tr>
<tr class="memdesc:a1072090152b10d83f43f0cd6bbd82b4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the stream loop state.  <a href="#a1072090152b10d83f43f0cd6bbd82b4e"></a><br/></td></tr>
<tr class="separator:a1072090152b10d83f43f0cd6bbd82b4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaecb1c68af4a9d75f9e9ad2d42afa78"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#acaecb1c68af4a9d75f9e9ad2d42afa78">GetLoop</a> () const </td></tr>
<tr class="memdesc:acaecb1c68af4a9d75f9e9ad2d42afa78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell whether or not the stream is looping.  <a href="#acaecb1c68af4a9d75f9e9ad2d42afa78"></a><br/></td></tr>
<tr class="separator:acaecb1c68af4a9d75f9e9ad2d42afa78"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aed9b6b06c0fa9c2d0b8c094eb2826793"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#aed9b6b06c0fa9c2d0b8c094eb2826793">Initialize</a> (unsigned int ChannelsCount, unsigned int SampleRate)</td></tr>
<tr class="memdesc:aed9b6b06c0fa9c2d0b8c094eb2826793"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the audio stream parameters, you must call it before <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a>  <a href="#aed9b6b06c0fa9c2d0b8c094eb2826793"></a><br/></td></tr>
<tr class="separator:aed9b6b06c0fa9c2d0b8c094eb2826793"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1Music.php" title="Music defines a big sound played using streaming, so usually what we call a music :)...">Music</a> defines a big sound played using streaming, so usually what we call a music :) </p>

<p>Definition at line <a class="el" href="Music_8hpp_source.php#l00047">47</a> of file <a class="el" href="Music_8hpp_source.php">Music.hpp</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a28ad2186cde78fed2c79c867b9622195"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">sf::Sound::Status</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enumeration of the sound states. </p>

<p>Definition at line <a class="el" href="Sound_8hpp_source.php#l00052">52</a> of file <a class="el" href="Sound_8hpp_source.php">Sound.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a18db20495fc566e5f9c26fcfe1a5dff6"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sf::Music::Music </td>
          <td>(</td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>BufferSize</em> = <code>44100</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Construct the music with a buffer size. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">BufferSize</td><td>: Size of the internal buffer, expressed in number of samples (ie. size taken by the music in memory) (44100 by default) </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4c65860fed2f01d0eaa6c4199870414b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::Music::~Music </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Destructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="abdcb5c8f3b5884a27e2eb013f5e36858"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundStream::GetChannelsCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Return the number of channels (1 = mono, 2 = stereo) </p>
<dl class="section return"><dt>Returns</dt><dd>Number of channels </dd></dl>

</div>
</div>
<a class="anchor" id="adbda9cff41ec10cb85db056cf67e5e50"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::Music::GetDuration </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the music duration. </p>
<dl class="section return"><dt>Returns</dt><dd><a class="el" href="classsf_1_1Music.php" title="Music defines a big sound played using streaming, so usually what we call a music :)...">Music</a> duration, in seconds </dd></dl>

</div>
</div>
<a class="anchor" id="acaecb1c68af4a9d75f9e9ad2d42afa78"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::SoundStream::GetLoop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Tell whether or not the stream is looping. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the music is looping, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="ad11fee9eb4baba68d6ed9f44bc6170ac"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">float sf::SoundStream::GetPlayingOffset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the current playing position of the stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Current playing position, expressed in seconds </dd></dl>

</div>
</div>
<a class="anchor" id="a74dabd1177bb60c8bd64bb6bbedb64bc"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundStream::GetSampleRate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the stream sample rate. </p>
<dl class="section return"><dt>Returns</dt><dd>Stream frequency (number of samples per second) </dd></dl>

</div>
</div>
<a class="anchor" id="a8b498cf48a20f7ecd8ff51084f65c46f"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">Status</a> sf::SoundStream::GetStatus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Get the status of the stream (stopped, paused, playing) </p>
<dl class="section return"><dt>Returns</dt><dd>Current status of the sound </dd></dl>

</div>
</div>
<a class="anchor" id="aed9b6b06c0fa9c2d0b8c094eb2826793"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Initialize </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ChannelsCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>SampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the audio stream parameters, you must call it before <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ChannelsCount</td><td>: Number of channels </td></tr>
    <tr><td class="paramname">SampleRate</td><td>: Sample rate </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a26986766bc5674a87da1bcb10bef59db"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Music::OpenFromFile </td>
          <td>(</td>
          <td class="paramtype">const std::string &amp;&#160;</td>
          <td class="paramname"><em>Filename</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Open a music file (doesn't play it &ndash; call <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Filename</td><td>: Path of the music file to open</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading has been successful </dd></dl>

</div>
</div>
<a class="anchor" id="a07896cadcaf54e2998e0f91fb2d6d017"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::Music::OpenFromMemory </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::size_t&#160;</td>
          <td class="paramname"><em>SizeInBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Open a music file from memory (doesn't play it &ndash; call <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> for that) </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Data</td><td>: Pointer to the file data in memory </td></tr>
    <tr><td class="paramname">SizeInBytes</td><td>: Size of the data to load, in bytes</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>True if loading has been successful </dd></dl>

</div>
</div>
<a class="anchor" id="a4d8437ef9a952fe3798bd239ff20d9bf"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Play </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Start playing the audio stream. </p>

</div>
</div>
<a class="anchor" id="a1072090152b10d83f43f0cd6bbd82b4e"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::SetLoop </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Loop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the stream loop state. </p>
<p>This parameter is disabled by default</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Loop</td><td>: True to play in loop, false to play once </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a53c9e9b160bcbcc89c93c1682b4525df"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inherited</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Stop playing the audio stream. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="Music_8hpp_source.php">Music.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
