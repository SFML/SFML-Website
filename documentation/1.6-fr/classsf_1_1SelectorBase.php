<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::SelectorBase Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1SelectorBase.php">SelectorBase</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="classsf_1_1SelectorBase-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::SelectorBase Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Private base class for selectors.  
 <a href="classsf_1_1SelectorBase.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SelectorBase_8hpp_source.php">SelectorBase.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::SelectorBase:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classsf_1_1SelectorBase.png" usemap="#sf::SelectorBase_map" alt=""/>
  <map id="sf::SelectorBase_map" name="sf::SelectorBase_map">
<area href="classsf_1_1Selector.php" title="Selector allow reading from multiple sockets without blocking." alt="sf::Selector&lt; Type &gt;" shape="rect" coords="0,56,127,80"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9e09a7275fbbffc8519dc8462a7bbf8d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SelectorBase.php#a9e09a7275fbbffc8519dc8462a7bbf8d">SelectorBase</a> ()</td></tr>
<tr class="memdesc:a9e09a7275fbbffc8519dc8462a7bbf8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a9e09a7275fbbffc8519dc8462a7bbf8d"></a><br/></td></tr>
<tr class="separator:a9e09a7275fbbffc8519dc8462a7bbf8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42b4a3dc10eec94f7c2631f624ea087f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SelectorBase.php#a42b4a3dc10eec94f7c2631f624ea087f">Add</a> (SocketHelper::SocketType Socket)</td></tr>
<tr class="memdesc:a42b4a3dc10eec94f7c2631f624ea087f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Add a socket to watch.  <a href="#a42b4a3dc10eec94f7c2631f624ea087f"></a><br/></td></tr>
<tr class="separator:a42b4a3dc10eec94f7c2631f624ea087f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a319664dddf8c2170ef5b6908c39de80e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SelectorBase.php#a319664dddf8c2170ef5b6908c39de80e">Remove</a> (SocketHelper::SocketType Socket)</td></tr>
<tr class="memdesc:a319664dddf8c2170ef5b6908c39de80e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove a socket.  <a href="#a319664dddf8c2170ef5b6908c39de80e"></a><br/></td></tr>
<tr class="separator:a319664dddf8c2170ef5b6908c39de80e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae24ec8c1ac981b8411c1c209daf788d0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SelectorBase.php#ae24ec8c1ac981b8411c1c209daf788d0">Clear</a> ()</td></tr>
<tr class="memdesc:ae24ec8c1ac981b8411c1c209daf788d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Remove all sockets.  <a href="#ae24ec8c1ac981b8411c1c209daf788d0"></a><br/></td></tr>
<tr class="separator:ae24ec8c1ac981b8411c1c209daf788d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22ba5625f8b644effa55e1a1c43efa4f"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SelectorBase.php#a22ba5625f8b644effa55e1a1c43efa4f">Wait</a> (float Timeout=0.f)</td></tr>
<tr class="memdesc:a22ba5625f8b644effa55e1a1c43efa4f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait and collect sockets which are ready for reading.  <a href="#a22ba5625f8b644effa55e1a1c43efa4f"></a><br/></td></tr>
<tr class="separator:a22ba5625f8b644effa55e1a1c43efa4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36e6a8d623f97a3c91701113931a0389"><td class="memItemLeft" align="right" valign="top">SocketHelper::SocketType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SelectorBase.php#a36e6a8d623f97a3c91701113931a0389">GetSocketReady</a> (unsigned int Index)</td></tr>
<tr class="memdesc:a36e6a8d623f97a3c91701113931a0389"><td class="mdescLeft">&#160;</td><td class="mdescRight">After a call to <a class="el" href="classsf_1_1SelectorBase.php#a22ba5625f8b644effa55e1a1c43efa4f" title="Wait and collect sockets which are ready for reading.">Wait()</a>, get the Index-th socket which is ready for reading.  <a href="#a36e6a8d623f97a3c91701113931a0389"></a><br/></td></tr>
<tr class="separator:a36e6a8d623f97a3c91701113931a0389"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Private base class for selectors. </p>
<p>As <a class="el" href="classsf_1_1Selector.php" title="Selector allow reading from multiple sockets without blocking.">Selector</a> is a template class, this base is needed so that every system call get compiled in SFML (not inlined) </p>

<p>Definition at line <a class="el" href="SelectorBase_8hpp_source.php#l00043">43</a> of file <a class="el" href="SelectorBase_8hpp_source.php">SelectorBase.hpp</a>.</p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a9e09a7275fbbffc8519dc8462a7bbf8d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">sf::SelectorBase::SelectorBase </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="a42b4a3dc10eec94f7c2631f624ea087f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SelectorBase::Add </td>
          <td>(</td>
          <td class="paramtype">SocketHelper::SocketType&#160;</td>
          <td class="paramname"><em>Socket</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Add a socket to watch. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Socket</td><td>: Socket to add </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ae24ec8c1ac981b8411c1c209daf788d0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SelectorBase::Clear </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove all sockets. </p>

</div>
</div>
<a class="anchor" id="a36e6a8d623f97a3c91701113931a0389"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">SocketHelper::SocketType sf::SelectorBase::GetSocketReady </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>Index</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>After a call to <a class="el" href="classsf_1_1SelectorBase.php#a22ba5625f8b644effa55e1a1c43efa4f" title="Wait and collect sockets which are ready for reading.">Wait()</a>, get the Index-th socket which is ready for reading. </p>
<p>The total number of sockets ready is the integer returned by the previous call to <a class="el" href="classsf_1_1SelectorBase.php#a22ba5625f8b644effa55e1a1c43efa4f" title="Wait and collect sockets which are ready for reading.">Wait()</a></p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Index</td><td>: Index of the socket to get</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The Index-th socket </dd></dl>

</div>
</div>
<a class="anchor" id="a319664dddf8c2170ef5b6908c39de80e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SelectorBase::Remove </td>
          <td>(</td>
          <td class="paramtype">SocketHelper::SocketType&#160;</td>
          <td class="paramname"><em>Socket</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Remove a socket. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Socket</td><td>: Socket to remove </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a22ba5625f8b644effa55e1a1c43efa4f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SelectorBase::Wait </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>Timeout</em> = <code>0.f</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Wait and collect sockets which are ready for reading. </p>
<p>This functions will return either when at least one socket is ready, or when the given time is out</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Timeout</td><td>: Timeout, in seconds (0 by default : no timeout)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Number of sockets ready to be read </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SelectorBase_8hpp_source.php">SelectorBase.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
