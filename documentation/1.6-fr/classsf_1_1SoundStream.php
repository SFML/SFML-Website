<?php
    $version = '1.6'; // the $ projectnumber variable is automatically replaced by doxygen with the version number
    $pagetitle = 'sf::SoundStream Class Reference'; // the $ title variable is automatically replaced by doxygen with the page title
    include('../header-fr.php');
?>
<!-- Generated by Doxygen 1.8.2 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.php"><span>Namespaces</span></a></li>
      <li class="current"><a href="annotated.php"><span>Classes</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.php"><span>Class&#160;List</span></a></li>
      <li><a href="classes.php"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.php"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.php"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>sf</b></li><li class="navelem"><a class="el" href="classsf_1_1SoundStream.php">SoundStream</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-types">Private Types</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="classsf_1_1SoundStream-members.php">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">sf::SoundStream Class Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p><a class="el" href="classsf_1_1SoundStream.php" title="SoundStream is a streamed sound, ie samples are acquired while the sound is playing.">SoundStream</a> is a streamed sound, ie samples are acquired while the sound is playing.  
 <a href="classsf_1_1SoundStream.php#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="SoundStream_8hpp_source.php">SoundStream.hpp</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for sf::SoundStream:</div>
<div class="dyncontent">
 <div class="center">
  <img src="classsf_1_1SoundStream.png" usemap="#sf::SoundStream_map" alt=""/>
  <map id="sf::SoundStream_map" name="sf::SoundStream_map">
<area href="classsf_1_1Thread.php" title="Thread defines an easy way to manipulate a thread." alt="sf::Thread" shape="rect" coords="0,0,103,24"/>
<area href="classsf_1_1Sound.php" title="Sound defines the properties of a sound such as position, volume, pitch, etc." alt="sf::Sound" shape="rect" coords="113,0,216,24"/>
<area href="classsf_1_1Music.php" title="Music defines a big sound played using streaming, so usually what we call a music :)..." alt="sf::Music" shape="rect" coords="56,112,159,136"/>
</map>
 </div></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structsf_1_1SoundStream_1_1Chunk.php">Chunk</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure defining a chunk of audio data to stream.  <a href="structsf_1_1SoundStream_1_1Chunk.php#details">More...</a><br/></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a28ad2186cde78fed2c79c867b9622195"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a28ad2186cde78fed2c79c867b9622195">Status</a> </td></tr>
<tr class="memdesc:a28ad2186cde78fed2c79c867b9622195"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enumeration of the sound states.  <a href="classsf_1_1SoundStream.php#a28ad2186cde78fed2c79c867b9622195">More...</a><br/></td></tr>
<tr class="separator:a28ad2186cde78fed2c79c867b9622195"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1fafb9f1ca572d23d7d6a17921860d85"><td class="memItemLeft" align="right" valign="top">virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a1fafb9f1ca572d23d7d6a17921860d85">~SoundStream</a> ()</td></tr>
<tr class="memdesc:a1fafb9f1ca572d23d7d6a17921860d85"><td class="mdescLeft">&#160;</td><td class="mdescRight">Virtual destructor.  <a href="#a1fafb9f1ca572d23d7d6a17921860d85"></a><br/></td></tr>
<tr class="separator:a1fafb9f1ca572d23d7d6a17921860d85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d8437ef9a952fe3798bd239ff20d9bf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf">Play</a> ()</td></tr>
<tr class="memdesc:a4d8437ef9a952fe3798bd239ff20d9bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Start playing the audio stream.  <a href="#a4d8437ef9a952fe3798bd239ff20d9bf"></a><br/></td></tr>
<tr class="separator:a4d8437ef9a952fe3798bd239ff20d9bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53c9e9b160bcbcc89c93c1682b4525df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a53c9e9b160bcbcc89c93c1682b4525df">Stop</a> ()</td></tr>
<tr class="memdesc:a53c9e9b160bcbcc89c93c1682b4525df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stop playing the audio stream.  <a href="#a53c9e9b160bcbcc89c93c1682b4525df"></a><br/></td></tr>
<tr class="separator:a53c9e9b160bcbcc89c93c1682b4525df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdcb5c8f3b5884a27e2eb013f5e36858"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#abdcb5c8f3b5884a27e2eb013f5e36858">GetChannelsCount</a> () const </td></tr>
<tr class="memdesc:abdcb5c8f3b5884a27e2eb013f5e36858"><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of channels (1 = mono, 2 = stereo)  <a href="#abdcb5c8f3b5884a27e2eb013f5e36858"></a><br/></td></tr>
<tr class="separator:abdcb5c8f3b5884a27e2eb013f5e36858"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74dabd1177bb60c8bd64bb6bbedb64bc"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a74dabd1177bb60c8bd64bb6bbedb64bc">GetSampleRate</a> () const </td></tr>
<tr class="memdesc:a74dabd1177bb60c8bd64bb6bbedb64bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the stream sample rate.  <a href="#a74dabd1177bb60c8bd64bb6bbedb64bc"></a><br/></td></tr>
<tr class="separator:a74dabd1177bb60c8bd64bb6bbedb64bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b498cf48a20f7ecd8ff51084f65c46f"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">Status</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a8b498cf48a20f7ecd8ff51084f65c46f">GetStatus</a> () const </td></tr>
<tr class="memdesc:a8b498cf48a20f7ecd8ff51084f65c46f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the status of the stream (stopped, paused, playing)  <a href="#a8b498cf48a20f7ecd8ff51084f65c46f"></a><br/></td></tr>
<tr class="separator:a8b498cf48a20f7ecd8ff51084f65c46f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad11fee9eb4baba68d6ed9f44bc6170ac"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#ad11fee9eb4baba68d6ed9f44bc6170ac">GetPlayingOffset</a> () const </td></tr>
<tr class="memdesc:ad11fee9eb4baba68d6ed9f44bc6170ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the current playing position of the stream.  <a href="#ad11fee9eb4baba68d6ed9f44bc6170ac"></a><br/></td></tr>
<tr class="separator:ad11fee9eb4baba68d6ed9f44bc6170ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1072090152b10d83f43f0cd6bbd82b4e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a1072090152b10d83f43f0cd6bbd82b4e">SetLoop</a> (bool Loop)</td></tr>
<tr class="memdesc:a1072090152b10d83f43f0cd6bbd82b4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the stream loop state.  <a href="#a1072090152b10d83f43f0cd6bbd82b4e"></a><br/></td></tr>
<tr class="separator:a1072090152b10d83f43f0cd6bbd82b4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acaecb1c68af4a9d75f9e9ad2d42afa78"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#acaecb1c68af4a9d75f9e9ad2d42afa78">GetLoop</a> () const </td></tr>
<tr class="memdesc:acaecb1c68af4a9d75f9e9ad2d42afa78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell whether or not the stream is looping.  <a href="#acaecb1c68af4a9d75f9e9ad2d42afa78"></a><br/></td></tr>
<tr class="separator:acaecb1c68af4a9d75f9e9ad2d42afa78"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a769d08f4c3c6b4340ef3a838329d2e5c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#a769d08f4c3c6b4340ef3a838329d2e5c">SoundStream</a> ()</td></tr>
<tr class="memdesc:a769d08f4c3c6b4340ef3a838329d2e5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor.  <a href="#a769d08f4c3c6b4340ef3a838329d2e5c"></a><br/></td></tr>
<tr class="separator:a769d08f4c3c6b4340ef3a838329d2e5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed9b6b06c0fa9c2d0b8c094eb2826793"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1SoundStream.php#aed9b6b06c0fa9c2d0b8c094eb2826793">Initialize</a> (unsigned int ChannelsCount, unsigned int SampleRate)</td></tr>
<tr class="memdesc:aed9b6b06c0fa9c2d0b8c094eb2826793"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the audio stream parameters, you must call it before <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a>  <a href="#aed9b6b06c0fa9c2d0b8c094eb2826793"></a><br/></td></tr>
<tr class="separator:aed9b6b06c0fa9c2d0b8c094eb2826793"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-types"></a>
Private Types</h2></td></tr>
<tr class="memitem:aab6e6f11eb38f106cd7c1149763a11b8"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="aab6e6f11eb38f106cd7c1149763a11b8"></a>
typedef void(*&#160;</td><td class="memItemRight" valign="bottom"><b>FuncType</b> )(void *)</td></tr>
<tr class="separator:aab6e6f11eb38f106cd7c1149763a11b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a046df871f73d3cf452d1c72bcc143642"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Thread.php#a046df871f73d3cf452d1c72bcc143642">Launch</a> ()</td></tr>
<tr class="memdesc:a046df871f73d3cf452d1c72bcc143642"><td class="mdescLeft">&#160;</td><td class="mdescRight">Create and run the thread.  <a href="#a046df871f73d3cf452d1c72bcc143642"></a><br/></td></tr>
<tr class="separator:a046df871f73d3cf452d1c72bcc143642"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f3c609fdf99688531dbfae461ea4d2"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Thread.php#a67f3c609fdf99688531dbfae461ea4d2">Wait</a> ()</td></tr>
<tr class="memdesc:a67f3c609fdf99688531dbfae461ea4d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Wait until the thread finishes.  <a href="#a67f3c609fdf99688531dbfae461ea4d2"></a><br/></td></tr>
<tr class="separator:a67f3c609fdf99688531dbfae461ea4d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a603d9493c6a845188f05c2eca48dc41b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Thread.php#a603d9493c6a845188f05c2eca48dc41b">Terminate</a> ()</td></tr>
<tr class="memdesc:a603d9493c6a845188f05c2eca48dc41b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Terminate the thread Terminating a thread with this function is not safe, you should rather try to make the thread function terminate by itself.  <a href="#a603d9493c6a845188f05c2eca48dc41b"></a><br/></td></tr>
<tr class="separator:a603d9493c6a845188f05c2eca48dc41b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a712910ac1340f32e3ec3a04295ebd3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a6a712910ac1340f32e3ec3a04295ebd3">Pause</a> ()</td></tr>
<tr class="memdesc:a6a712910ac1340f32e3ec3a04295ebd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pause the sound.  <a href="#a6a712910ac1340f32e3ec3a04295ebd3"></a><br/></td></tr>
<tr class="separator:a6a712910ac1340f32e3ec3a04295ebd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dbc27c54f0ee633c831a0b6e24ecc55"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a9dbc27c54f0ee633c831a0b6e24ecc55">SetBuffer</a> (const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> &amp;Buffer)</td></tr>
<tr class="memdesc:a9dbc27c54f0ee633c831a0b6e24ecc55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the source buffer.  <a href="#a9dbc27c54f0ee633c831a0b6e24ecc55"></a><br/></td></tr>
<tr class="separator:a9dbc27c54f0ee633c831a0b6e24ecc55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af93301feb88770789ba7cd993c9dd3a0"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af93301feb88770789ba7cd993c9dd3a0">SetPitch</a> (float Pitch)</td></tr>
<tr class="memdesc:af93301feb88770789ba7cd993c9dd3a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound pitch.  <a href="#af93301feb88770789ba7cd993c9dd3a0"></a><br/></td></tr>
<tr class="separator:af93301feb88770789ba7cd993c9dd3a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1536095045923a2332dd9eed6bf8e96a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a1536095045923a2332dd9eed6bf8e96a">SetVolume</a> (float Volume)</td></tr>
<tr class="memdesc:a1536095045923a2332dd9eed6bf8e96a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound volume.  <a href="#a1536095045923a2332dd9eed6bf8e96a"></a><br/></td></tr>
<tr class="separator:a1536095045923a2332dd9eed6bf8e96a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab445e8738218525d8dd067628bc70c78"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ab445e8738218525d8dd067628bc70c78">SetPosition</a> (float X, float Y, float Z)</td></tr>
<tr class="memdesc:ab445e8738218525d8dd067628bc70c78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound position (take 3 values).  <a href="#ab445e8738218525d8dd067628bc70c78"></a><br/></td></tr>
<tr class="separator:ab445e8738218525d8dd067628bc70c78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d8c6f11281a574b781c53d62a4af776"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a0d8c6f11281a574b781c53d62a4af776">SetPosition</a> (const <a class="el" href="classsf_1_1Vector3.php">Vector3f</a> &amp;Position)</td></tr>
<tr class="memdesc:a0d8c6f11281a574b781c53d62a4af776"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the sound position (take a 3D vector).  <a href="#a0d8c6f11281a574b781c53d62a4af776"></a><br/></td></tr>
<tr class="separator:a0d8c6f11281a574b781c53d62a4af776"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7604f576d184ba8031789beee96d04d3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a7604f576d184ba8031789beee96d04d3">SetRelativeToListener</a> (bool Relative)</td></tr>
<tr class="memdesc:a7604f576d184ba8031789beee96d04d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Make the sound's position relative to the listener's position, or absolute.  <a href="#a7604f576d184ba8031789beee96d04d3"></a><br/></td></tr>
<tr class="separator:a7604f576d184ba8031789beee96d04d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a545d8dca68d85a03390f6da7c446a9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a0a545d8dca68d85a03390f6da7c446a9">SetMinDistance</a> (float MinDistance)</td></tr>
<tr class="memdesc:a0a545d8dca68d85a03390f6da7c446a9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the minimum distance - closer than this distance, the listener will hear the sound at its maximum volume.  <a href="#a0a545d8dca68d85a03390f6da7c446a9"></a><br/></td></tr>
<tr class="separator:a0a545d8dca68d85a03390f6da7c446a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3743f1fb53bf9818fbab6e9220bd7b9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ac3743f1fb53bf9818fbab6e9220bd7b9">SetAttenuation</a> (float Attenuation)</td></tr>
<tr class="memdesc:ac3743f1fb53bf9818fbab6e9220bd7b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the attenuation factor - the higher the attenuation, the more the sound will be attenuated with distance from listener.  <a href="#ac3743f1fb53bf9818fbab6e9220bd7b9"></a><br/></td></tr>
<tr class="separator:ac3743f1fb53bf9818fbab6e9220bd7b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae779b4fa3d8d98a1490334dbd32e8d62"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ae779b4fa3d8d98a1490334dbd32e8d62">SetPlayingOffset</a> (float TimeOffset)</td></tr>
<tr class="memdesc:ae779b4fa3d8d98a1490334dbd32e8d62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Set the current playing position of the sound.  <a href="#ae779b4fa3d8d98a1490334dbd32e8d62"></a><br/></td></tr>
<tr class="separator:ae779b4fa3d8d98a1490334dbd32e8d62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af07d9979b14afda0e7fb396fd1c52c21"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="classsf_1_1SoundBuffer.php">SoundBuffer</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af07d9979b14afda0e7fb396fd1c52c21">GetBuffer</a> () const </td></tr>
<tr class="memdesc:af07d9979b14afda0e7fb396fd1c52c21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the source buffer.  <a href="#af07d9979b14afda0e7fb396fd1c52c21"></a><br/></td></tr>
<tr class="separator:af07d9979b14afda0e7fb396fd1c52c21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42333202ed0586f434d852cc35b9d4ef"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a42333202ed0586f434d852cc35b9d4ef">GetPitch</a> () const </td></tr>
<tr class="memdesc:a42333202ed0586f434d852cc35b9d4ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the pitch.  <a href="#a42333202ed0586f434d852cc35b9d4ef"></a><br/></td></tr>
<tr class="separator:a42333202ed0586f434d852cc35b9d4ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a018e78cd6c50d653fffff1005a350782"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a018e78cd6c50d653fffff1005a350782">GetVolume</a> () const </td></tr>
<tr class="memdesc:a018e78cd6c50d653fffff1005a350782"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the volume.  <a href="#a018e78cd6c50d653fffff1005a350782"></a><br/></td></tr>
<tr class="separator:a018e78cd6c50d653fffff1005a350782"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1adb173ee12a86f261fb765be050643"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classsf_1_1Vector3.php">Vector3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#ab1adb173ee12a86f261fb765be050643">GetPosition</a> () const </td></tr>
<tr class="memdesc:ab1adb173ee12a86f261fb765be050643"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the sound position.  <a href="#ab1adb173ee12a86f261fb765be050643"></a><br/></td></tr>
<tr class="separator:ab1adb173ee12a86f261fb765be050643"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0278152abf6e3f195353ce3c270f34e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af0278152abf6e3f195353ce3c270f34e">IsRelativeToListener</a> () const </td></tr>
<tr class="memdesc:af0278152abf6e3f195353ce3c270f34e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tell if the sound's position is relative to the listener's position, or if it's absolute.  <a href="#af0278152abf6e3f195353ce3c270f34e"></a><br/></td></tr>
<tr class="separator:af0278152abf6e3f195353ce3c270f34e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07f37119f7b3b00f274ac0263a4bc58b"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a07f37119f7b3b00f274ac0263a4bc58b">GetMinDistance</a> () const </td></tr>
<tr class="memdesc:a07f37119f7b3b00f274ac0263a4bc58b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the minimum distance.  <a href="#a07f37119f7b3b00f274ac0263a4bc58b"></a><br/></td></tr>
<tr class="separator:a07f37119f7b3b00f274ac0263a4bc58b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af594211c35d6ac7a9df083c226749c42"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#af594211c35d6ac7a9df083c226749c42">GetAttenuation</a> () const </td></tr>
<tr class="memdesc:af594211c35d6ac7a9df083c226749c42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the attenuation factor.  <a href="#af594211c35d6ac7a9df083c226749c42"></a><br/></td></tr>
<tr class="separator:af594211c35d6ac7a9df083c226749c42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fe562f8a52994658398c61796cde331"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classsf_1_1Sound.php#a0fe562f8a52994658398c61796cde331">ResetBuffer</a> ()</td></tr>
<tr class="memdesc:a0fe562f8a52994658398c61796cde331"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reset the internal buffer.  <a href="#a0fe562f8a52994658398c61796cde331"></a><br/></td></tr>
<tr class="separator:a0fe562f8a52994658398c61796cde331"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p><a class="el" href="classsf_1_1SoundStream.php" title="SoundStream is a streamed sound, ie samples are acquired while the sound is playing.">SoundStream</a> is a streamed sound, ie samples are acquired while the sound is playing. </p>
<p>Use it for big sounds that would require hundreds of MB in memory (see <a class="el" href="classsf_1_1Music.php" title="Music defines a big sound played using streaming, so usually what we call a music :)...">Music</a>), or for streaming sound from the network </p>

<p>Definition at line <a class="el" href="SoundStream_8hpp_source.php#l00044">44</a> of file <a class="el" href="SoundStream_8hpp_source.php">SoundStream.hpp</a>.</p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a class="anchor" id="a28ad2186cde78fed2c79c867b9622195"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">sf::Sound::Status</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enumeration of the sound states. </p>

<p>Definition at line <a class="el" href="Sound_8hpp_source.php#l00052">52</a> of file <a class="el" href="Sound_8hpp_source.php">Sound.hpp</a>.</p>

</div>
</div>
<h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a class="anchor" id="a1fafb9f1ca572d23d7d6a17921860d85"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual sf::SoundStream::~SoundStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Virtual destructor. </p>

</div>
</div>
<a class="anchor" id="a769d08f4c3c6b4340ef3a838329d2e5c"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">sf::SoundStream::SoundStream </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Default constructor. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a class="anchor" id="abdcb5c8f3b5884a27e2eb013f5e36858"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundStream::GetChannelsCount </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Return the number of channels (1 = mono, 2 = stereo) </p>
<dl class="section return"><dt>Returns</dt><dd>Number of channels </dd></dl>

</div>
</div>
<a class="anchor" id="acaecb1c68af4a9d75f9e9ad2d42afa78"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool sf::SoundStream::GetLoop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tell whether or not the stream is looping. </p>
<dl class="section return"><dt>Returns</dt><dd>True if the music is looping, false otherwise </dd></dl>

</div>
</div>
<a class="anchor" id="ad11fee9eb4baba68d6ed9f44bc6170ac"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">float sf::SoundStream::GetPlayingOffset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the current playing position of the stream. </p>
<dl class="section return"><dt>Returns</dt><dd>Current playing position, expressed in seconds </dd></dl>

</div>
</div>
<a class="anchor" id="a74dabd1177bb60c8bd64bb6bbedb64bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned int sf::SoundStream::GetSampleRate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the stream sample rate. </p>
<dl class="section return"><dt>Returns</dt><dd>Stream frequency (number of samples per second) </dd></dl>

</div>
</div>
<a class="anchor" id="a8b498cf48a20f7ecd8ff51084f65c46f"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classsf_1_1Sound.php#a28ad2186cde78fed2c79c867b9622195">Status</a> sf::SoundStream::GetStatus </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Get the status of the stream (stopped, paused, playing) </p>
<dl class="section return"><dt>Returns</dt><dd>Current status of the sound </dd></dl>

</div>
</div>
<a class="anchor" id="aed9b6b06c0fa9c2d0b8c094eb2826793"></a>
<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Initialize </td>
          <td>(</td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>ChannelsCount</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned int&#160;</td>
          <td class="paramname"><em>SampleRate</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Set the audio stream parameters, you must call it before <a class="el" href="classsf_1_1SoundStream.php#a4d8437ef9a952fe3798bd239ff20d9bf" title="Start playing the audio stream.">Play()</a> </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">ChannelsCount</td><td>: Number of channels </td></tr>
    <tr><td class="paramname">SampleRate</td><td>: Sample rate </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a4d8437ef9a952fe3798bd239ff20d9bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Play </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Start playing the audio stream. </p>

</div>
</div>
<a class="anchor" id="a1072090152b10d83f43f0cd6bbd82b4e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::SetLoop </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Loop</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Set the stream loop state. </p>
<p>This parameter is disabled by default</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Loop</td><td>: True to play in loop, false to play once </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="a53c9e9b160bcbcc89c93c1682b4525df"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void sf::SoundStream::Stop </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Stop playing the audio stream. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li><a class="el" href="SoundStream_8hpp_source.php">SoundStream.hpp</a></li>
</ul>
</div><!-- contents -->
<?php
    require("../footer-fr.php");
?>
